var marcadorUbicacionApertura = null;
var marcadorUbicacionCierre = null;
var circuloApertura = null;
var circuloCierre = null;
var mapa;
var latitudI;
var longitudI;
var latitudF;
var longitudF;
var unidadBus;

function cargarRP111() {
    $('#tbrp111 thead').empty();
    $('#tbrp111 tbody').empty();
    $('#tbrp111 tfoot').empty();
    $('#tbrp111_2 thead').empty();
    $('#tbrp111_2 tbody').empty();
    $('#tbrp111_2 tfoot').empty();
    var fIni = $('.datetimeRP111').val();
    var fFin = $('#busquedaFinRp111').val();
    var padron = ($('#txtPadron111').val() == null ? "" : $('#txtPadron111').val());
    var codRuta = ($("#selectRuta111").val() == "" ? 0 : $("#selectRuta111").val());
    var url = NombreAplicacion + '/ReporteBoleto/CargarRp111';

    Data = {
        fechaInicio: fIni,
        fechaFin: fFin,
        padron: padron == '' ? 0 : padron,
        codRuta: codRuta
    }

    $.post(url, Data, function (Datos) {

        $('#tbrp111 thead').empty();
        $('#tbrp111 tbody').empty();
        $('#tbrp111 tfoot').empty();
        $('#tbrp111_2 thead').empty();
        $('#tbrp111_2 tbody').empty();
        $('#tbrp111_2 tfoot').empty(); if (Datos == null || Datos == '' || Datos["dt1"] == null || Datos["dt1"] == '') {
            cargarTablaVacia();
        } else {
            var tblCabecera = Datos["dt1"];
            var tblCuerpo = Datos["dt0"];
            var strCabecera = '<tr>' +
                '<th align="center" style="text-align: center; width: 40px; vertical-align: middle; background: #6098b9" rowspan="2">N</th>' +
                '<th align="center" style="text-align: center; width: 100px;  vertical-align: middle; background: #6098b9" rowspan="2">FECHA</th>' +
                '<th align="center" style="text-align: center; width: 75px;  vertical-align: middle; background: #6098b9" rowspan="2">RUTA</th>' +
                (tblCuerpo[0].PadronUnidad == '' ? '' : '<th align="center" style="text-align: center; width: 75px;  vertical-align: middle; background: #6098b9" rowspan="2">PAD</th>') +
                (tblCuerpo[0].PlacaUnidad == '' ? '' : '<th align="center" style="text-align: center; width: 75px;  vertical-align: middle; background: #6098b9" rowspan="2">PLACA</th>') +
                '<th align="center" style="text-align: center; width: 75px;  vertical-align: middle; background: #6098b9" rowspan="2">UNI</th>' +
                '<th align="right" style="text-align: right; width: 55px;  vertical-align: middle; background: #6098b9" rowspan="2">VTA</th>';

            $.each(tblCabecera, function (i) {
                strCabecera += '<th style="text-align: center; vertical-align: middle; background: #6098b9" colspan="2">' + (this.DATOS == null ? '' : this.DATOS) + '</th>';
            });


            strCabecera += '<th align="right" style="text-align: right; width: 100px;  vertical-align: middle; background: #6098b9" rowspan="2">TRANS</th>' +
                '<th align="right" style="text-align: right; width: 100px;  vertical-align: middle; background: #6098b9" rowspan="2">DEV</th>' +
                '<th align="right" style="text-align: right; width: 100px;  vertical-align: middle; background: #6098b9" rowspan="2">T. PASAJ.</th>' +
                '<th align="right" style="text-align: right; width: 100px; vertical-align: middle; background: #6098b9" rowspan="2">T. PROD.</th>' +
                '</tr>' +
                '<tr>';
            $.each(tblCabecera, function (i) {
                strCabecera += '<th align="right" style="text-align: right; background: #6098b9;width: 80px; vertical-align: middle; color: white;">CANT.</th>' +
                    '<th align="right" style="text-align: right; background: #6098b9;width: 80px; vertical-align: middle; color: white;">S/.</th>';
            });

            strCabecera += '</tr>';
            // Cabecera imprimible

            var strCabecera2 = '<tr>' +
                '<th align="center" style="border-top:1px solid black;text-align: center; width: 40px; vertical-align: middle;" rowspan="2">N</th>' +
                '<th align="center" style="border-top:1px solid black;text-align: center; width: 100px;  vertical-align: middle;" rowspan="2">FECHA</th>' +
                '<th align="center" style="border-top:1px solid black;text-align: center; width: 75px;  vertical-align: middle;" rowspan="2">RUTA</th>' +
                (tblCuerpo[0].PadronUnidad == '' ? '' : '<th align="center" style="text-align: center; width: 75px;  vertical-align: middle; background: #6098b9" rowspan="2">PAD</th>') +
                (tblCuerpo[0].PlacaUnidad == '' ? '' : '<th align="center" style="text-align: center; width: 75px;  vertical-align: middle; background: #6098b9" rowspan="2">PLACA</th>') +
                '<th align="center" style="border-top:1px solid black;text-align: center; width: 75px;  vertical-align: middle;" rowspan="2">UNI</th>' +
                '<th align="right" style="border-top:1px solid black;text-align: right; width: 55px;  vertical-align: middle;" rowspan="2">VTA</th>';

            $.each(tblCabecera, function (i) {
                strCabecera2 += '<th style="border-top:1px solid black;text-align: center; vertical-align: middle;" colspan="2">' + (this.DATOS == null ? '' : this.DATOS) + '</th>';
            });


            strCabecera2 += '<th align="right" style="border-top:1px solid black;text-align: right; width: 100px;  vertical-align: middle;" rowspan="2">TRANS</th>' +
                '<th align="right" style="border-top:1px solid black;text-align: right; width: 100px;  vertical-align: middle;" rowspan="2">DEV</th>' +
                '<th align="right" style="border-top:1px solid black;text-align: right; width: 300px;  vertical-align: middle;" rowspan="2">T. PASAJ.</th>' +
                '<th align="right" style="border-top:1px solid black;text-align: right; width: 100px; vertical-align: middle;" rowspan="2">T. PROD.</th>' +
                '</tr>' +
                '<tr>';
            $.each(tblCabecera, function (i) {
                strCabecera2 += '<th align="color: black; right" style="text-align: right;width: 80px; vertical-align: middle;">CANT.</th>' +
                    '<th align="right" style="text-align: right; width: 80px; vertical-align: middle;">S/.</th>';
            });

            strCabecera2 += '</tr>';

            $('#tbrp111 thead').append(strCabecera);
            $('#tbrp111_2 thead').append(strCabecera2);

            //Cuerpo--------------------------
            var strCuerpo = "";
            var strFoot = "";
            var strFoot2 = "";
            var TotalVTA = 0;
            var totalPasajF = 0;
            var totalProdF = 0;
            var totalTrans = 0;
            var totalDev = 0;
            var totalUnidades = 0;
            sumaTCant = ObjUtil.InicializarArreglo((tblCabecera.length), 0);
            sumaTMonto = ObjUtil.InicializarArreglo((tblCabecera.length), 0);
            $.each(tblCuerpo, function (i) {
                var objCuerpo = this;
                var tPasaj = 0;
                var tProd = 0;
                var mTrans = 0;
                var mDevBol = 0;

                mTrans = (this.MontoTransbordo == null || this.MontoTransbordo == '' ? 0 : this.MontoTransbordo);
                mDevBol = (this.MontoDevBol == null || this.MontoDevBol == '' ? 0 : this.MontoDevBol);

                strCuerpo += '<tr>' +
                    '<td align="center" style="text-align: center">' + (i + 1) + '</td>' +
                    '<td align="center" style="text-align: center">' + (this.FechaProduccion == null ? '' : this.FechaProduccion) + '</td>' +
                    '<td align="center" style="text-align: center">' + (this.NomRuta == null ? '' : this.NomRuta) + '</td>' +
                    (this.PadronUnidad == '' ? '' : '<td align="center" style="text-align: center">' + (this.PadronUnidad == null ? '' : this.PadronUnidad) + '</td>') +
                    (this.PlacaUnidad == '' ? '' : '<td align="center" style="text-align: center; white-space: nowrap;">' + (this.PlacaUnidad == null ? '' : this.PlacaUnidad) + '</td>') +
                    '<td align="center" style="text-align: center">' + (this.Unidades == null ? '' : this.Unidades) + '</td>' +
                    '<td align="right" style="text-align: right">' + (this.VTA == null ? '' : this.VTA) + '</td>';
                TotalVTA += Number(this.VTA == null || this.VTA == '' ? 0 : this.VTA);
                $.each(tblCabecera, function (i) {
                    var ttlCabecera = this.DATOS;
                    cabecera = objCuerpo[ttlCabecera];
                    var cant = (cabecera == null || cabecera == '' ? 0 : cabecera.split('|')[0]);
                    var monto = (cabecera == null || cabecera == '' ? 0 : cabecera.split('|')[1]);
                    strCuerpo += '<td align="right" style="text-align: right" class="totalCantF">' + (cant == null || cant == '' ? '' : cant) + '</td>' +
                        '<td align="right" style="text-align: right" class="totalMontoF">' + (monto == null || monto == '' ? '' : (Number(monto).toFixed(2))) + '</td>';

                    tPasaj += Number(cant == null || cant == '' ? 0 : cant);
                    tProd += Number(monto == null || monto == '' ? 0 : monto);
                })

                tProd = tProd.toFixed(2);
                strCuerpo += '<td align="right" style="text-align: right">' + mTrans.toFixed(2) + '</td>' +
                    '<td align="right" style="text-align: right">' + mDevBol.toFixed(2) + '</td>' +
                    '<td align="right" style="text-align: right">' + tPasaj + '</td>' +
                    '<td align="right" style="text-align: right">' + tProd + '</td>' +
                    '</tr>';

                //Totales
                totalUnidades += Number(this.Unidades == null || this.Unidades == '' ? 0 : this.Unidades);
                totalTrans += Number(this.MontoTransbordo == null || this.MontoTransbordo == '' ? 0 : this.MontoTransbordo);
                totalDev += Number(this.MontoDevBol == null || this.MontoDevBol == '' ? 0 : this.MontoDevBol)
                totalPasajF += (tPasaj == null || tPasaj == '' ? 0 : tPasaj);
                totalProdF += Number(tProd == null || tProd == '' ? 0 : tProd);

            });
            $('#tbrp111 tbody').append(strCuerpo);
            $('#tbrp111_2 tbody').append(strCuerpo);
            $('#iframeReporteRP111').addClass('hidden');

            $('#tbrp111 > tbody  > tr').each(function () {
                $(this).find('.totalCantF').each(function (i) {
                    sumaTCant[i] += Number($(this).html());
                });
            });

            $('#tbrp111 > tbody  > tr').each(function () {
                $(this).find('.totalMontoF').each(function (i) {
                    sumaTMonto[i] += Number($(this).html());
                });
            });

            strFoot += '<tr style="background: lightgray 50% 50% repeat-x; border-top: 1px solid black">' +
                '<th align="center" style="font-size: 14px; text-align: center; font-weight: bold; width: 20px; padding: 0px 0px 0px 0px !important; vertical-align: middle" colspan="' + (tblCuerpo[0].PadronUnidad == '' ? 3 : 5) + '">Total</th>' +
                '<th align="center" style="text-align: center">' + totalUnidades + '</th>' +
                '<th align="center" style="text-align: right">' + TotalVTA + '</th>';

            $.each(tblCabecera, function (i) {
                var totalMontoF = sumaTMonto[i];
                strFoot += '<th align="right" style="text-align: right">' + sumaTCant[i] + '</th>' +
                    '<th align="right" style="text-align: right">' + totalMontoF.toFixed(2) + '</th>';
            });

            strFoot += '<th align="right" style="text-align: right">' + totalTrans.toFixed(2) + '</th>' +
                '<th align="right" style="text-align: right">' + totalDev.toFixed(2) + '</th>' +
                '<th align="right" style="text-align: right">' + totalPasajF + '</th>' +
                '<th align="right" style="text-align: right">' + totalProdF.toFixed(2) + '</th>' +
                '</tr>';

            // foot imprimible

            strFoot2 += '<tr style="background: lightgray 50% 50% repeat-x; border-top: 1px solid black">' +
                '<th align="center" style="border-top:1px solid black; font-size: 11px ;text-align: center; font-weight: bold; width: 20px; padding: 0px 0px 0px 0px !important; vertical-align: middle" colspan="' + (tblCuerpo[0].PadronUnidad == '' ? 3 : 5) + '">Total</th>' +
                '<th align="center" style="border-top:1px solid black;text-align: center">' + totalUnidades + '</th>' +
                '<th align="center" style="border-top:1px solid black;text-align: right">' + TotalVTA + '</th>';

            $.each(tblCabecera, function (i) {
                var totalMontoF = sumaTMonto[i];
                strFoot2 += '<th align="right" style="border-top:1px solid black;text-align: right">' + sumaTCant[i] + '</th>' +
                    '<th align="right" style="border-top:1px solid black;text-align: right">' + totalMontoF.toFixed(2) + '</th>';
            });

            strFoot2 += '<th align="right" style="border-top:1px solid black;text-align: right">' + totalTrans.toFixed(2) + '</th>' +
                '<th align="right" style="border-top:1px solid black;text-align: right">' + totalDev.toFixed(2) + '</th>' +
                '<th align="right" style="border-top:1px solid black;text-align: right">' + totalPasajF + '</th>' +
                '<th align="right" style="border-top:1px solid black;text-align: right">' + totalProdF.toFixed(2) + '</th>' +
                '</tr>';


            $('#tbrp111 tfoot').append(strFoot);
            $('#tbrp111_2 tfoot').append(strFoot2);
            ObjUtil.DesbloquearPantalla();
        }
    }, 'JSON');
}

function cargarTablaVacia() {
    var strCabecera = '';
    var strCuerpo = '';

    strCabecera += '<tr>' +
        '<th></th>' +
        '</tr>';

    strCuerpo += '<tr>' +
        '<td align="center" style="text-align: center; font-size: 15px;">No existen datos asociados a este padrón</td>' +
        '</tr>';

    $('#tbrp111 thead').append(strCabecera);
    $('#tbrp111 tbody').append(strCuerpo);
    $('#tbrp111_2 thead').append(strCabecera);
    $('#tbrp111_2 tbody').append(strCuerpo);
    ObjUtil.DesbloquearPantalla();
}

//************************************************REPORTE 27********************************************************************

async function cargarRP27(codRP) {
    $(`#iconCargar${codRP}`).css('display', '');

    const fechaInicio = document.querySelector(`#fecha-inicio-${codRP}`).value;
    const fechaFin = document.querySelector(`#fecha-fin-${codRP}`).value;

    const urlBack = NombreAplicacion + '/SalidaReporte/ProcSalidaReporte';
    const parametros = {
        CodSalida: 0,
        CodUnidad: 0,
        Lado: '',
        FechaHoraInicio: '',
        FechaHoraFin: fechaFin,
        CodPersona: 0,
        CodUsuarioAccion: 0,
        FechaSalida: fechaInicio,
        MotivoAnulacion: '',
        CodSalidaGPS: 0,
        ACuenta: 0,
        CodCajaGestion: 0,
        Indice: 27
    }

    const response = await fetch(urlBack, DataFetch(parametros, 'POST')).then(res => res.json());
    const viajes = response['dt1'];

    if (viajes.length === 0) {
        LimpiarTabla(2, codRP, false, 7);
        $(`#iconCargar${codRP}`).css('display', 'none');
        return;
    }

    let body = '';

    viajes.forEach((viaje, index) => {
        body += `
            <tr>
                <td style="text-align:center">${index + 1}</td>
                <td style="text-align:center">${viaje.Padron}</td>
                <td style="text-align:center">${viaje.Placa}</td>
                <td style="text-align:center">${viaje.Conductor}</td>
                <td style="text-align:center">${viaje.ViajesA}</td>
                <td style="text-align:center">${viaje.ViajesB}</td>
                <td style="text-align:center">${Number(viaje.ViajesA) + Number(viaje.ViajesB)}</td>
            </tr>
        `
    })

    $(`#tb${codRP} tbody`).html(body)

    $(`#iconCargar${codRP}`).css('display', 'none');
}

//************************************************REPORTE 27********************************************************************

//************************************************REPORTE 52********************************************************************

async function cargarRP52(codRP) {
    $(`#iconCargar${codRP}`).css('display', '');

    const fechaInicio = document.querySelector(`#fecha-inicio-${codRP}`).value;
    const fechaFin = document.querySelector(`#fecha-fin-${codRP}`).value;

    const urlBack = NombreAplicacion + '/Reporte/ProcReporteSalidaInspectoria';
    const parametros = {
        fechaInicio: fechaInicio,
        fechaFin: fechaFin,
        indice: 52,
    }

    const response = await fetch(urlBack, DataFetch(parametros, 'POST')).then(res => res.json());
    const datos = response['dt1'];

    if (datos.length === 0) {
        LimpiarTabla(2, codRP, false, 8);
        $(`#iconCargar${codRP}`).css('display', 'none');
        return;
    }

    let body = '';

    datos.forEach((d, i) => {
        body += `
            <tr>
                <td style="text-align:center">${i + 1}</td>
                <td style="text-align:center">${d.FechaHora}</td>
                <td style="text-align:center">${d.PadronUnidad}.</td>
                <td style="text-align:center">${d.Conductor}</td>
                <td style="text-align:center">${d.Inspector}</td>
                <td style="text-align:center">${d.NomControl}</td>
                <td style="text-align:center">${d.Comentario}</td>
                <td style="text-align:center">${d.NomUsuario}</td>
            </tr>
        `
    })

    $(`#tb${codRP} tbody`).html(body)

    $(`#iconCargar${codRP}`).css('display', 'none');
}

//************************************************REPORTE 52********************************************************************

//************************************************REPORTE 56********************************************************************
function obtenerDiasDelMes(selectMes, selectAnio) {
    let arrDias = [];

    var anio = selectAnio.value;
    var mes = selectMes.value;

    const mesActual = new Date().getMonth();
    const anioActual = new Date().getFullYear();
    const diaActual = new Date().getDate();

    const esMesActual = mesActual + 1 == mes

    var diasMes = new Date(anio, mes, 0).getDate();
    var diasSemana = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'];

    for (var dia = 1; dia <= (esMesActual ? diaActual : diasMes); dia++) {
        // Ojo, hay que restarle 1 para obtener el mes correcto
        var indice = new Date(anio, mes - 1, dia).getDay();
        arrDias.push({
            numeroDia: dia,
            nombreDia: diasSemana[indice]
        })
    }

    return arrDias;
}

async function cargarRP56(codRP) {
    $(`#iconCargar${codRP}`).css('display', '');
    $(`#tb${codRP} thead`).empty();

    const selectMes = document.querySelector(`#select-mes-${codRP}`);
    const selectAnio = document.querySelector(`#select-anio-${codRP}`);

    const fechaInicio = `01/${selectMes.value}/${selectAnio.value}`

    const urlBack = NombreAplicacion + '/Reporte/ProcReporteSalidaInspectoria';
    const parametros = {
        fechaInicio: fechaInicio,
        fechaFin: '',
        indice: 56,
    }

    const arrDias = obtenerDiasDelMes(selectMes, selectAnio)

    var cabecera = `
                    <tr>
                        <th style="text-align:center; vertical-align: middle" >N</th>
                        <th style="text-align:center; vertical-align: middle" >INSPECTOR</th>
                        ${arrDias.map(d => {
        return `<th style="text-align:center; white-space: nowrap">DIA <p>${d.numeroDia}</p></th>`
    }).toString().replaceAll(',', '')
        }
                        <th style="text-align:center; vertical-align: middle" >TOTAL</th>
                    </tr>
    `

    $(`#tb${codRP} thead`).append(cabecera)

    const response = await fetch(urlBack, DataFetch(parametros, 'POST')).then(res => res.json());
    const datos = response['dt1'];

    if (datos.length === 0) {
        LimpiarTabla(2, codRP, false, 8);
        $(`#iconCargar${codRP}`).css('display', 'none');
        return;
    }

    const datosPivot = [];
    let objInspector = {}

    datos.forEach((d, i) => {
        objInspector['Inspector'] = d.Inspector

        if (d.Inspector == datos[i + 1]?.Inspector) {
            objInspector[d.Dia] = d.Nveces
        } else {
            objInspector[d.Dia] = d.Nveces
            datosPivot.push(objInspector)
            objInspector = {}
        }
    })

    let body = '';
    let totalMensualGeneral = 0;
    let objDiasSuma = {}

    datosPivot.forEach((dp, i) => {
        let totalMensual = 0;

        body += `
            <tr>
                <td style="text-align:center">${i + 1}</td>
                <td style="text-align:center">${dp.Inspector}</td>
                ${arrDias.map((d, y) => {
            const numeroVeces = dp[d.numeroDia] ? Number(dp[d.numeroDia]) : 0
            totalMensual += numeroVeces
            objDiasSuma[d.numeroDia] = (objDiasSuma[d.numeroDia] ? objDiasSuma[d.numeroDia] : 0) + numeroVeces

            return `<td style="text-align:center; white-space: nowrap">${dp[d.numeroDia] ? dp[d.numeroDia] : '-'}</td>`
        }).toString().replaceAll(',', '')
            }
                <td style="text-align:center">${totalMensual}</td>
            </tr>
        `

        totalMensualGeneral += totalMensual
    })

    const footer = `
                    <tr>
                        <th colspan="2" style="text-align:center; vertical-align: middle" >TOTAL</th>
                        ${arrDias.map(d => {
        return `<th style="text-align:center; white-space: nowrap">${objDiasSuma[d.numeroDia]}</th>`
    }).toString().replaceAll(',', '')
        }
                        <th style="text-align:center; vertical-align: middle" >${totalMensualGeneral}</th>
                    </tr>
    `

    $(`#tb${codRP} tbody`).html(body)
    $(`#tb${codRP} tfoot`).html(footer)

    $(`#iconCargar${codRP}`).css('display', 'none');
}

//************************************************REPORTE 56********************************************************************

async function cargarRP65(codRP) {
    const selectRutas = document.getElementById("selectRuta" + codRP);
    const selectPersonas = document.getElementById("selectPersona" + codRP);
    const selectEstado = document.getElementById("selectEstado" + codRP);
    const table = document.getElementById("tb" + codRP);
    const tableImpresion = document.getElementById(codRP + "Imp");

    const thead = table.children[0];
    const tbody = table.children[1];
    const theadImpresion = tableImpresion.children[0];
    const tbodyImpresion = tableImpresion.children[1];

    const request = {
        Procedimiento: "ProcSuministroReportesV1",
        Parametro: `${selectRutas.value}|${selectPersonas.value}|${selectEstado.value}`,
        Indice: 65
    };

    const response = await fetch(UrlGeneral, DataFetch(request, "POST")).then(res => res.json());
    const data = response["dt0"];

    thead.innerHTML = "";
    tbody.innerHTML = "";

    const head = `<th>N</th>
                <th style="text-align:center">COD. PERSONA</th>
                <th>NOM. PERSONA</th>
                <th style="text-align:center">NOM. ARTICULO</th>
                <th style="text-align:center">CANTIDAD ACTUAL</th>
                <th style="text-align:right">VALOR SUMINISTRADO</th>`;

    thead.innerHTML = head;

    if (data.length === 0) {
        LimpiarTablaUtil(2, "tb" + codRP, 5)
        return;
    }

    data.forEach((rep, index) => {
        const tr = document.createElement("tr");

        const td = `<td>${index + 1}</td>
                    <td style="text-align:center">${rep.CodigoPersona}</td>
                    <td>${rep.NomPersona}</td>
                    <td style="text-align:center">${rep.NomArticulo}</td>
                    <td style="text-align:center">${rep.CantidadActual}</td>
                    <td style="text-align:right">${rep.ValorSuministrado}</td>`;

        tr.innerHTML = td;
        tbody.appendChild(tr);
    })
}


///////////////ABRIR MAPA
function abrirMapa(td) {

    var latitudI = Number(td.attr('data-latitudInicio'));
    var latitudF = Number(td.attr('data-latitudFin'));
    var longitudI = Number(td.attr('data-longitudInicio'));
    var longitudF = Number(td.attr('data-longitudFin'));

    var unidadBus = td.attr('data-unidadBus');
    var ccu = td.attr('data-ccu');


    $('.option').css('background-color', '');
    td.css('background-color', ' #acd4ef');

    $('#divMapaAperturaCaja').dialog({
        title: 'Unidad: [' + unidadBus + '], CCU: [' + ccu + ']',
        buttons: {
            'Cerrar': function () {
                $(this).dialog('close');
            }
        },
        close: function () {
            $('.option').css('background-color', '');
        }
    })
    /*Limpiar Marcadores*/
    if (marcadorUbicacionApertura) {
        marcadorUbicacionApertura.setMap(null);
    }
    if (marcadorUbicacionCierre) {
        marcadorUbicacionCierre.setMap(null);
    }

    /*Limpiar Radio*/
    if (circuloApertura) {
        circuloApertura.setMap(null);
    }
    if (circuloCierre) {
        circuloCierre.setMap(null);
    }

    marcadorUbicacionApertura = cargarPuntoUbicacion(latitudI, longitudI, mapa);
    marcadorUbicacionApertura.setMap(mapa);// color azul "#2673D7"
    marcadorUbicacionCierre = cargarPuntoUbicacion(latitudF, longitudF, mapa);
    marcadorUbicacionCierre.setMap(mapa);

    // color rojo "#F02E05"

    mapa.setZoom(16);
    centrarUnidadMapa(marcadorUbicacionApertura)
    var colorEntrada = '#F02E05';
    circuloApertura = agregarCirculoEmpresa(latitudI, longitudI, 160, mapa, colorEntrada);
    circuloApertura.setMap(mapa);
    var colorSalida = '#2673D7';
    circuloCierre = agregarCirculoEmpresa(latitudF, longitudF, 160, mapa, colorSalida);
    circuloCierre.setMap(mapa);

    $('#divMapaAperturaCaja').dialog('open');
}

function cargarPuntoUbicacion(lat, long, map) {
    //var url = color + "-dot.png";
    var marker1 = new google.maps.Marker({
        position: { lat: lat, lng: long },
        draggable: false,
        //url: url
    });
    return marker1;
}

function centrarUnidadMapa(marker) {
    var pnt = marker.getPosition();
    mapa.panTo(pnt);
}

function cargarMapa() {
    //valores por defecto para mostrar el mapa
    var latitudxdefecto = -12.069538270159754;
    var longitudxdefecto = -77.047119140625;

    var zoomxdefecto = 11;
    //variable global q representa el mapa

    var geocoder;
    var logomrv;

    var latlng = new google.maps.LatLng(latitudxdefecto, longitudxdefecto);

    geocoder = new google.maps.Geocoder();
    var myOptions = {
        zoom: zoomxdefecto,
        center: latlng,
        mapTypeControlOptions: {
            style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
        },
        zoomControlOptions: {
            style: google.maps.ZoomControlStyle.SMALL
        },
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        styles: [{ "featureType": "administrative", "elementType": "all", "stylers": [{ "visibility": "on" }] },
        { "featureType": "landscape", "elementType": "all", "stylers": [{ "visibility": "off" }, { "color": "#c2f6f4" }] },
        { "featureType": "poi", "elementType": "all", "stylers": [{ "visibility": "off" }] },
        { "featureType": "poi.park", "elementType": "all", "stylers": [{ "visibility": "on" }, { "color": "#c7fbc4" }] },
        { "featureType": "poi.park", "elementType": "labels", "stylers": [{ "visibility": "off" }] },
        { "featureType": "road", "elementType": "all", "stylers": [{ "visibility": "simplified" }] },
        { "featureType": "road.highway", "elementType": "all", "stylers": [{ "visibility": "on" }, { "weight": 0.6 }, { "saturation": -85 }, { "lightness": 61 }] },
        { "featureType": "road.highway", "elementType": "geometry", "stylers": [{ "visibility": "on" }] },
        { "featureType": "road.highway", "elementType": "geometry.fill", "stylers": [{ "visibility": "on" }, { "color": "#fbca60" }, { "lightness": 17 }] },
        { "featureType": "road.highway", "elementType": "labels.text", "stylers": [{ "visibility": "simplified" }, { "color": "#615f69" }] },

        { "featureType": "road.highway.controlled_access", "elementType": "geometry", "stylers": [{ "visibility": "on" }, { "color": "#ffe2aa" }] },
        { "featureType": "road.highway.controlled_access", "elementType": "labels.text", "stylers": [{ "visibility": "on" }, { "color": "#7d7f86" }] },

        { "featureType": "road.arterial", "elementType": "all", "stylers": [{ "visibility": "on" }] },
        { "featureType": "road.local", "elementType": "all", "stylers": [{ "visibility": "on" }] },
        { "featureType": "transit", "elementType": "all", "stylers": [{ "visibility": "simplified" }] },
        { "featureType": "water", "elementType": "all", "stylers": [{ "visibility": "simplified" }, { "color": "#74acd6" }] }]
    };
    //instanciando una nueva clase mapa
    mapa = new google.maps.Map(document.getElementById('divGoogleMaps'), myOptions);
    //map1.setMapTypeId('terrain');
    mapa.enableKeyDragZoom();
}

function agregarCirculoEmpresa(latEmpresa, longEmpresa, radioEmpresa, mapa, color) {

    var point = new google.maps.LatLng(
        parseFloat(latEmpresa),
        parseFloat(longEmpresa)
    );

    var Circulo = new google.maps.Circle({
        map: mapa,
        radius: radioEmpresa,
        strokeColor: color,
        strokeOpacity: 0.5,
        strokeWeight: 1,
        fillColor: color,
        fillOpacity: 0.2,
        visible: true,
        center: point
    });

    return Circulo;
}

//////////////////MAPA

function cargarRP83() {
    var UrlGeneral = NombreAplicacion + '/GeneralPost/ProcGeneralPost';
    Data = {
        Procedimiento: "ProcBoletoTransaccionReporteV2",
        Parametro: $('.datetimeRP83').val() + '|' + $('#selectRuta83').val() + '|' + $('#selectUnidad83').val() + '|' + $('#selectPersona83').val() + '|' + TIPO_CONSULTA,
        Indice: 83
    }

    $.getJSON(UrlGeneral, Data, function (Datos) {
        var indiceTablas = 0;

        $('#tbrp83 caption').empty();
        $('#tbrp83 thead').empty();
        $('#tbrp83 tbody').empty();
        $('#tbrp83 tfoot').empty();

        $('#Rp83Imp thead').empty();
        $('#Rp83Imp tbody').empty();
        $('#Rp83Imp tfoot').empty();

        var jsonCuerpoUnidades = Datos['dt0'];
        var jsonCuerpoDetalle = Datos['dt1'];
        var jsonCuerpoDetalleConductor = Datos['dt2'];

        if (jsonCuerpoUnidades.length == 0) {
            $('#tbrp83 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }

        var strCabecera = '';
        var strCabecera2 = '';
        var strCuerpo = '';
        var strCuerpo2 = '';
        var strFoot = '';
        var strFoot2 = '';

        //Armando la cabecera
        strCabecera = '<tr>' +
            '<th style="with: 50px">N</th>' +
            '<th>FECHA</th>' +
            '<th>RUTA</th>' +
            '<th>UNIDAD</th>' +
            '<th>CONDUCTOR</th>' +
            '<th>H.INI</th>' +
            '<th>H.FIN</th>' +
            '<th style="text-align: center">CCU</th>' +
            '<th style="text-align: right; width: 100px;">PROD</th>' +
            '</tr>';

        $('#tbrp83 thead').append(strCabecera);

        //*******************

        //Armando la cabecera imprimible
        strCabecera2 = '<tr>' +
            '<th align="left" style="with: 50px;">N</th>' +
            '<th align="left">FECHA</th>' +
            '<th align="left">RUTA</th>' +
            '<th align="left">UNIDAD</th>' +
            '<th align="left">CONDUCTOR</th>' +
            '<th align="left">H.INI</th>' +
            '<th align="left">H.FIN</th>' +
            '<th style="text-align: center">CCU</th>' +
            '<th style="text-align: right; width: 100px;">PROD</th>' +
            '</tr>';

        $('#Rp83Imp thead').append(strCabecera2);
        //*******************

        //Armando el cuerpo
        var totalFinal = 0;
        $.each(jsonCuerpoUnidades, function (i) {
            var colorFondo = (i % 2 == 0 ? '#eeeeee !important' : '#ffffff !important');
            var unidad = this.CodUnidad;
			unidadBus = this.Unidad;
            var totalFila = 0
             
            strCuerpo += '<tr style="background-color: ' + colorFondo + '">' +
                            '<td rowspan="' + (Number(this.CantidadCCU) + 1) + '" style="background-color: ' + colorFondo + ';vertical-align: middle; border-bottom: 1px solid gray;">' + (i + 1) + '</td>' +
                            '<td rowspan="' + (Number(this.CantidadCCU) + 1) + '" style="background-color: ' + colorFondo + ';vertical-align: middle; border-bottom: 1px solid gray;">' + this.FechaTransaccion + '</td>' +
                            '<td rowspan="' + (Number(this.CantidadCCU) + 1) + '" style="background-color: ' + colorFondo + ';vertical-align: middle; border-bottom: 1px solid gray;">' + this.NomRuta + '</td>' +
                            '<td rowspan="' + (Number(this.CantidadCCU) + 1) + '" style="background-color: ' + colorFondo + ';vertical-align: middle; border-bottom: 1px solid gray;">' + this.Unidad + '</td>';

            $.each(jsonCuerpoDetalle, function (j) {
                if (unidad == this.CodUnidad) {
                    var codPersona = this.CodPersona;
                    var cont = 0;
                    if (cont > 0) {
                        strCuerpo += '<tr style="background-color: ' + colorFondo + '">';
                    }
                    strCuerpo += '<td rowspan="' + (Number(this.CantidadCCU)) + '" style="background-color: ' + colorFondo + '; vertical-align: middle; border-left: 1px solid gray; border-right: 1px solid gray;" >' + this.Persona + '</td>';

                    $.each(jsonCuerpoDetalleConductor, function (k) {
                        if (Number(unidad) == this.CodUnidad && Number(codPersona) == Number(this.CodPersona)) {
                            
                            var color = (this.Validador == 1 ? 'black' : 'red');
                            var cont2 = 0;

                            if (cont2 > 0) {
                                strCuerpo = `<tr class="option" data-latitudInicio="${this.LatitudInicio}" data-longitudInicio="${this.LongitudInicio}"
                                data-latitudFin="${this.latitudFin}" 
                                data-longitudFin="${this.longitudFin}"
                                >`;
                            }
                              
                            strCuerpo += `<td title="${(this.Validador == 1 ? 'Validador' : 'Manual')}" style="background-color: ${colorFondo} ; color:${color}; cursor: pointer">${this.HorInicio}</td>
                                         <td title="${(this.Validador == 1 ? 'Validador' : 'Manual')}" style="background-color: ${colorFondo}; color:${color}; cursor: pointer">${(this.HorFin == null ? '' : this.HorFin)}</td>
                                         <td title="${(this.Validador == 1 ? 'Validador' : 'Manual')}" onclick="abrirMapa($(this))" data-ccu="${this.CCU}" data-latitudInicio="${this.LatitudInicio}" data-longitudInicio="${this.LongitudInicio}" data-latitudFin="${this.LatitudFin}" data-longitudFin="${this.LongitudFin}" data-unidadBus="${unidadBus}" style="text-align: center; background-color:${colorFondo}; color:${color}; cursor: pointer" >${this.CCU}<i class="fa fa-map-marker" style="margin-left: 10px; color:#EE3103" aria-hidden="true"></i></td>
                                         <td title="${(this.Validador == 1 ? 'Validador' : 'Manual')} " style="text-align: right; background-color: #dddddd; color:${color}; cursor: pointer">${Number(this.Produccion).toFixed(2)}</td>
                                        </tr>`;
                                               
                            totalFila += (this.Produccion == null || this.Produccion == '' ? Number(0) : Number(this.Produccion));
                            cont2++;
                        }
                    })
                    cont++;
                }
                
            })

            strCuerpo += '<tr id="total" style="background-color: #dddddd">' +
                            '<td colspan="4" style="background-color: #dddddd; border-bottom: 1px solid gray;border-top: 1px solid gray; border-left: 1px solid gray;">TOTAL</td>' +
                            '<td style="background-color: #dddddd; border-bottom: 1px solid gray;border-top: 1px solid gray; text-align: right">' + Number(totalFila).toFixed(2) + '</td>' +
                         '</tr>';

            totalFinal += Number(totalFila);
        })
        
        $('#tbrp83 tbody').append(strCuerpo);
        //*****************

        //Armando el cuerpo imprimible
        var totalFinal = 0;
        $.each(jsonCuerpoUnidades, function (i) {
            var colorFondo = (i % 2 == 0 ? '#eeeeee !important' : '#ffffff !important');
            var unidad = this.CodUnidad;
            var totalFila = 0
            strCuerpo2 += '<tr style="background-color: ' + colorFondo + '">' +
                '<td rowspan="' + (Number(this.CantidadCCU) + 1) + '" style="vertical-align: middle; border-bottom: 1px solid gray;">' + (i + 1) + '</td>' +
                '<td rowspan="' + (Number(this.CantidadCCU) + 1) + '" style="vertical-align: middle; border-bottom: 1px solid gray;">' + this.FechaTransaccion + '</td>' +
                '<td rowspan="' + (Number(this.CantidadCCU) + 1) + '" style="vertical-align: middle; border-bottom: 1px solid gray;">' + this.NomRuta + '</td>' +
                '<td rowspan="' + (Number(this.CantidadCCU) + 1) + '" style="vertical-align: middle; border-bottom: 1px solid gray;">' + this.Unidad + '</td>';

            $.each(jsonCuerpoDetalle, function (j) {
                if (unidad == this.CodUnidad) {
                    var codPersona = this.CodPersona;
                    var cont = 0;
                    if (cont > 0) {
                        strCuerpo2 += '<tr style="background-color: ' + colorFondo + '">';
                    }
                    strCuerpo2 += '<td rowspan="' + (Number(this.CantidadCCU)) + '" style="vertical-align: middle; border-left: 1px solid gray; border-right: 1px solid gray;">' + this.Persona + '</td>';

                    $.each(jsonCuerpoDetalleConductor, function (k) {
                        if (Number(unidad) == this.CodUnidad && Number(codPersona) == Number(this.CodPersona)) {
                            var cont2 = 0;
                            if (cont2 > 0) {
                                strCuerpo2 += '<tr style="background-color: ' + colorFondo + '">';
                            }
                            strCuerpo2 += '<td style="background-color: ' + colorFondo + '">' + this.HorInicio + '</td>' +
                                '<td style="background-color: ' + colorFondo + '">' + (this.HorFin == null ? '' : this.HorFin) + '</td>' +
                                '<td style="text-align: center; background-color: ' + colorFondo + '">' + this.CCU + '</td>' +
                                '<td style="text-align: right; background-color: #dddddd">' + Number(this.Produccion).toFixed(2) + '</td>' +
                                '</tr>';
                            totalFila += (this.Produccion == null || this.Produccion == '' ? Number(0) : Number(this.Produccion));
                            cont2++;
                        }

                    })
                    cont++;
                }
            })

            strCuerpo2 += '<tr style="background-color: #dddddd">' +
                '<td colspan="4" style="border-bottom: 1px solid gray;border-top: 1px solid gray;  border-left: 1px solid gray;">TOTAL</td>' +
                '<td style="border-bottom: 1px solid gray;border-top: 1px solid gray; text-align: right">' + Number(totalFila).toFixed(2) + '</td>' +
                '</tr>';

            totalFinal += Number(totalFila);

        })

        $('#Rp83Imp tbody').append(strCuerpo2);
        //*****************

        //Armando el foot
        strFoot = '<tr>' +
            '<th colspan="8">TOTAL</th>' +
            '<th style="text-align: right">' + totalFinal.toFixed(2) + '</th>' +
            '</tr>';

        $('#tbrp83 tfoot').append(strFoot);
        //*****************

        //Armando foot imprimible
        strFoot2 = '<tr>' +
            '<th colspan="8">TOTAL</th>' +
            '<th style="text-align: right">' + totalFinal.toFixed(2) + '</th>' +
            '</tr>';

        $('#Rp83Imp tfoot').append(strFoot);
        //**********************
        ObjUtil.DesbloquearPantalla();
    })
}

function cargarRP84() {
    Ruta = NombreAplicacion + '/./ReporteBoleto/ProcBoletoTransaccionReporteV2';
    Data = {
        Parametro: $('.datetimeRP84').val() + '|' + $('.datetimeRP84').val() + '|' + $('#selectRuta84').val(),
        Indice: 84
    }

    $.getJSON(Ruta, Data, function (Datos) {

        var indiceTablas = 0;

        $('#tbrp84 caption').empty();
        $('#tbrp84 thead').empty();
        $('#tbrp84 tbody').empty();
        $('#tbrp84 tfoot').empty();

        $('#Rp84Imp thead').empty();
        $('#Rp84Imp tbody').empty();
        $('#Rp84Imp tfoot').empty();

        $.each(Datos, function (index, value) {
            indiceTablas++;
        });

        if (indiceTablas != 2) {
            $('#tbrp84 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }

        var jsonDatos = Datos['dt0'];
        var jsonCabeceraDinamica = Datos['dt1'];


        var strHtmlThead = '';
        var strHtmlThead2 = '';
        var posicionDinamico = 9;

        strHtmlThead += '<tr>';

        strHtmlThead += '<th rowspan="2" style="vertical-align: middle">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'FECHA' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'HORA' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'RUTA' + '</th>';

        $.each(jsonCabeceraDinamica, function (i) {
            strHtmlThead += '<th colspan="2" style="text-align:center;" >' + this.Concepto.replace(' ', '.'); + '</th>';
        });

        strHtmlThead += '<th colspan="2" class="text-center" >TOTAL</th>';

        strHtmlThead += '</tr>';

        /*********** armando segundo row **********************/
        strHtmlThead += '<tr>';

        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead += '<th title="Cantidad" class="text-right" >CNT</th><th title="Importe" class="text-right" >IMP</th>';
        }

        strHtmlThead += '<th class="text-right" >T.CNT</th>';
        strHtmlThead += '<th class="text-right" >T.IMP</th>';

        strHtmlThead += '</tr>';

        //Cabecera del reporte 84 para imprimir
        strHtmlThead2 += '<tr>';

        strHtmlThead2 += '<th rowspan="2" style="vertical-align: middle" align="left">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle" align="left">' + 'FECHA' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle" align="left">' + 'HORA' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle" align="left">' + 'RUTA' + '</th>';

        $.each(jsonCabeceraDinamica, function (i) {
            strHtmlThead2 += '<th colspan="2" style="text-align:center;" >' + this.Concepto.replace(' ', '.'); + '</th>';
        });

        strHtmlThead2 += '<th colspan="2" class="text-center" >TOTAL</th>';

        strHtmlThead2 += '</tr>';

        /*********** armando segundo row imprimible **********************/
        strHtmlThead2 += '<tr>';

        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead2 += '<th title="Cantidad" class="text-right" align="right">CNT</th><th title="Importe" class="text-right" align="right">IMP</th>';
        }

        strHtmlThead2 += '<th class="text-right" align="right">T.CNT</th>';
        strHtmlThead2 += '<th class="text-right" align="right">T.IMP</th>';

        strHtmlThead2 += '</tr>';





        $('#tbrp84 thead').append(strHtmlThead);
        $('#Rp84Imp thead').append(strHtmlThead2);
        var strHtmlTbody;
        var strHtmlTbody2;
        var serviciosArr = [];
        var totalCantidad = 0;
        var totalProdd = 0;

        $.each(jsonDatos, function (i) {

            var objDatos = this;
            strHtmlTbody +=
                '<tr>' +
                '<td >' + (i + 1) + '</td>' +
                '<td >' + this.Fecha + '</td>' +
                '<td >' + this.Hora + '</td>' +
                '<td >' + this.NomRuta + '</td>';


            //Cuerpo reporte 84 imprimir
            strHtmlTbody2 +=
                '<tr>' +
                '<td >' + (i + 1) + '</td>' +
                '<td >' + this.Fecha + '</td>' +
                '<td >' + this.Hora + '</td>' +
                '<td >' + this.NomRuta + '</td>';
            /***************************************************************************************************************************/

            $.each(jsonCabeceraDinamica, function () {

                totalCantidad += Number(objDatos[this.Concepto] == null ? 0 : objDatos[this.Concepto].split('|')[0]);
                totalProdd += Number(objDatos[this.Concepto] == null ? 0 : objDatos[this.Concepto].split('|')[1]);

                strHtmlTbody += '<td class="text-right cantidad" >' + (objDatos[this.Concepto] == null || objDatos[this.Concepto] == '' ? 0 : objDatos[this.Concepto].split('|')[0]) + '</td>' +
                    '<td class="text-right importe" style="mso-number-format:0\.00" >' + (objDatos[this.Concepto] == null || objDatos[this.Concepto] == '' ? 0 : (objDatos[this.Concepto].split('|')[1] == null || objDatos[this.Concepto].split('|')[1] == '' ? 0 : objDatos[this.Concepto].split('|')[1])) + '</td>';

                //Cuerpo reporte 84 imprimir
                strHtmlTbody2 += '<td class="text-right cantidad"  align="right">' + (objDatos[this.Concepto] == null || objDatos[this.Concepto] == '' ? 0 : objDatos[this.Concepto].split('|')[0]) + '</td>' +
                    '<td class="text-right importe" style="mso-number-format:0\.00" align="right">' + (objDatos[this.Concepto] == null || objDatos[this.Concepto] == '' ? 0 : (objDatos[this.Concepto].split('|')[1] == null || objDatos[this.Concepto].split('|')[1] == '' ? 0 : objDatos[this.Concepto].split('|')[1])) + '</td>';
                /***************************************************************************************************************************/

            });



            strHtmlTbody += '<td style="border-left: 3px solid #6098b9;" class="text-right cantidad" >' + totalCantidad + '</td>' +
                '<td  class="text-right importe" style="mso-number-format:0\.00" >' + totalProdd.toFixed(2) + '</td>';

            strHtmlTbody += '</tr>';

            //Cuerpo reporte 84 imprimir
            strHtmlTbody2 += '<td style="border-left: 3px solid #6098b9;" class="text-right cantidad" align="right">' + totalCantidad + '</td>' +
                '<td class="text-right importe" style="mso-number-format:0\.00" align="right">' + totalProdd.toFixed(2) + '</td>';

            strHtmlTbody2 += '</tr>';
            /***************************************************************************************************************************/

            totalCantidad = 0;
            totalProdd = 0;
        });
        $('#tbrp84 tbody').append(strHtmlTbody);
        $('#Rp84Imp tbody').append(strHtmlTbody2);
        $('#iframeReporteRP84').addClass('hidden');

        var sumaTotalCantidades = ObjUtil.InicializarArreglo((jsonCabeceraDinamica.length + 8), 0); //inicializando de ceros al array que contendra los totalizados.
        var sumalTotalMontos = ObjUtil.InicializarArreglo((jsonCabeceraDinamica.length + 8), 0);

        /****************************** ***************************************/
        $('#tbrp84 > tbody  > tr').each(function () {
            $(this).find('.cantidad').each(function (i) {
                sumaTotalCantidades[i] += Number($(this).text());
            });
        });

        $('#tbrp84 > tbody  > tr').each(function () {
            $(this).find('.importe').each(function (i) {
                sumalTotalMontos[i] += Number($(this).text());
            });
        });



        var cantidadDeFilasEnTabla = $("#tbrp84 tbody tr:nth-child(2) td").length;
        var rwfoot = '';


        rwfoot += '<tr>';

        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    rwfoot += '<th ></th>';
                    break;
                case 1:
                    rwfoot += '<th></th>';
                    break;
                case 2:
                    rwfoot += '<th></th>';
                    break;
                case 3:
                    rwfoot += '<th></th>';
                    break;
                default:
                    rwfoot += "<th class='text-right " + (j % 2 == 0 ? 'cantidad' : 'monto') + "' style='text-align: right;" + (j % 2 != 0 ? 'mso-number-format:0.00' : '') + "' ></th>";
                    break;
            }
        }
        rwfoot += '</tr>';
        $("#tbrp84 tfoot").append(rwfoot);



        $("#tbrp84 tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count]);
        });

        var totalProdImp;
        $("#tbrp84 tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });


        //foot para imprimir 
        var Rp84Impfoot = '';


        Rp84Impfoot += '<tr>';

        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    Rp84Impfoot += '<th ></th>';
                    break;
                case 1:
                    Rp84Impfoot += '<th></th>';
                    break;
                case 2:
                    Rp84Impfoot += '<th></th>';
                    break;
                case 3:
                    Rp84Impfoot += '<th></th>';
                    break;
                default:
                    Rp84Impfoot += "<th class='text-right " + (j % 2 == 0 ? 'cantidad' : 'monto') + "' style='text-align: right;" + (j % 2 != 0 ? 'mso-number-format:0.00' : '') + "' ></th>";
                    break;
            }
        }

        Rp84Impfoot += '</tr>';
        $("#Rp84Imp tfoot").append(Rp84Impfoot);

        $("#Rp84Imp tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count]);
        });

        var totalProdImp;
        $("#Rp84Imp tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        //*********************

        ObjUtil.DesbloquearPantalla();
    });
}
function cargarRP85() {
    Ruta = NombreAplicacion + '/./ReporteBoleto/ProcBoletoTransaccionReporteV2';
    Data = {
        Parametro: $('.datetimeRP85').val() + '|' + $('#busquedaFin').val() + '|' + $('#selectRuta').val() + '|' + $('#selectUnidad').val() + '|' + ($('#selectPersona').val() == null ? 0 : $('#selectPersona').val()) + '|' + TIPO_CONSULTA + '|'+ $('#selSituacion85').val(),
        Indice: 85
    }

    $.getJSON(Ruta, Data, function (Datos) {
        var indiceTablas = 0;

        $('#tbrp85 caption').empty();
        $('#tbrp85 thead').empty();
        $('#tbrp85 tbody').empty();
        $('#tbrp85 tfoot').empty();

        $('#Rp85Imp thead').empty();
        $('#Rp85Imp tbody').empty();
        $('#Rp85Imp tfoot').empty();

        $.each(Datos, function (index, value) {
            indiceTablas++;
        });

        if (indiceTablas != 2) {
            $('#tbrp85 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }

        //var jsonResumen = Datos['dt0'];
        var jsonDatos = Datos['dt0'];
        var jsonCabeceraDinamica = Datos['dt1'];

        var strHtmlThead = '';
        var strHtmlThead2 = '';
        var posicionDinamico = 9;

        strHtmlThead += '<tr>';

        strHtmlThead +=
            '<th rowspan="2" style="vertical-align: middle">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'FECHA' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'PERSONA' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'RUTA' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle" title="Lado A" class="text-right" >' + 'A' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle" title="Lado B" class="text-right" >' + 'B' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle" title="Padrón">' + 'PAD' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle" title="Placa" >' + 'PLACA' + '</th>';
        //for (var i = 1; i < posicionDinamico; i++) {
        //    strHtmlThead += '<th></th>';
        //}

        $.each(jsonCabeceraDinamica, function (i) {
            //if (i >= posicionDinamico) {
            strHtmlThead += '<th colspan="2" style="text-align:center;" >' + this.NomBoleto.replace(' ', '.') + '</th>';
            //}
        });

        //$("<th colspan='2' class='textoDerecha' style='width: 80px;text-align:right;vertical-align: inherit;' data-sort='float' />").text('TOTAL').appendTo(row);
        strHtmlThead += '<th colspan="2" class="text-center" >TOTAL</th>';

        strHtmlThead += '</tr>';

        /*********** armando segundo row **********************/
        strHtmlThead += '<tr>';



        //Cabecera del reporte 85 para imprimir
        strHtmlThead2 += '<tr>' +
            '<th align="left" style="width: 30px !important">' + 'N' + '</th>' +
            '<th align="left" style="width: 80px !important">' + 'FECHA' + '</th>' +
            '<th align="left" style="width: 250px !important">' + 'PERSONA' + '</th>' +
            '<th align="left" style="width: 80px !important">' + 'RUTA' + '</th>' +
            '<th align="left" style="width: 80px !important" title="Lado A" >' + 'A' + '</th>' +
            '<th align="left" style="width: 80px !important" title="Lado B" >' + 'B' + '</th>' +
            '<th align="left" style="width: 80px !important" title="Padrón">' + 'PAD' + '</th>' +
            '<th align="left" style="width: 80px !important" title="Placa" >' + 'PLACA' + '</th>' +
            '<th align="left" style="width: 80px !important" title="Placa" >' + 'PRODUCCIÓN' + '</th>' +
            '</tr>';



        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead += '<th title="Cantidad" class="text-right" >CNT</th><th title="Importe" class="text-right" >IMP</th>';
        }

        strHtmlThead += '<th class="text-right" >T.CNT</th>';
        strHtmlThead += '<th class="text-right" >T.IMP</th>';

        strHtmlThead += '</tr>';
        $('#tbrp85 thead').append(strHtmlThead);
        $('#Rp85Imp thead').append(strHtmlThead2);
        var strHtmlTbody;
        var strHtmlTbody2;
        var serviciosArr = [];


        var totalCantidad = 0;
        var totalProdd = 0;
        var totalLA = 0;
        var totalLB = 0;
        $.each(jsonDatos, function (i) {

            var objDatos = this;
            strHtmlTbody +=
                '<tr>' +
                '<td >' + (i + 1) + '</td>' +
                '<td >' + this.Fecha + '</td>' +
                '<td style="width: 100px !important;" ><label style="font-weight: 100;width: 195px;white-space: nowrap;overflow: hidden;text-overflow: ellipsis;" title="' + this.Persona + '" >' + this.Persona + '</label></td>' +
                '<td >' + this.NomRuta + '</td>' +
                '<td class="cantidad" style="text-align: right;" >' + this.LadoA + '</td>' +
                '<td class="cantidad" style="text-align: right;" >' + this.LadoB + '</td>' +
                '<td >' + this.PadronUnidad + '</td>' +
                '<td style="width:140px;border-right: 3px solid #6098b9;" ><label style="width: 69px;font-weight: 100;" >' + this.PlacaUnidad + '</label></td>';
            totalLA += Number(this.LadoA == null || this.LadoA == '' ? 0 : this.LadoA);
            totalLB += Number(this.LadoB == null || this.LadoB == '' ? 0 : this.LadoB);


            $.each(jsonCabeceraDinamica, function () {

                totalCantidad += Number(objDatos[this.NomBoleto] == null ? 0 : objDatos[this.NomBoleto].split('|')[0]);
                totalProdd += Number(objDatos[this.NomBoleto] == null ? 0 : objDatos[this.NomBoleto].split('|')[1]);

                strHtmlTbody += '<td class="text-right cantidad" >' + objDatos[this.NomBoleto].split('|')[0] + '</td>' +
                    '<td class="text-right importe" style="mso-number-format:0\.00" >' + objDatos[this.NomBoleto].split('|')[1] + '</td>';

            });
            //Cuerpo reporte 85 imprimir
            strHtmlTbody2 +=
                '<tr>' +
                '<td >' + (i + 1) + '</td>' +
                '<td >' + this.Fecha + '</td>' +
                '<td style="width: 100px !important;" ><label style="font-weight: 100;width: 195px;white-space: nowrap;overflow: hidden;text-overflow: ellipsis;" title="' + this.Persona + '" >' + this.Persona + '</label></td>' +
                '<td >' + this.NomRuta + '</td>' +
                '<td class="cantidad"  >' + this.LadoA + '</td>' +
                '<td class="cantidad"  >' + this.LadoB + '</td>' +
                '<td >' + this.PadronUnidad + '</td>' +
                '<td style="width:140px;" ><label style="width: 69px;font-weight: 100;" >' + this.PlacaUnidad + '</label></td>' +
                '<td align="right" class="text-right importe" style="mso-number-format:0\.00" >' + totalProdd.toFixed(2) + '</td></tr>';
            /***************************************************************************************************************************/


            strHtmlTbody += '<td style="border-left: 3px solid #6098b9;" class="text-right cantidad" >' + totalCantidad + '</td>' +
                '<td  class="text-right importe" style="mso-number-format:0\.00" >' + totalProdd.toFixed(2) + '</td>';

            strHtmlTbody += '</tr>';

            totalCantidad = 0;
            totalProdd = 0;
        });
        $('#tbrp85 tbody').append(strHtmlTbody);
        $('#Rp85Imp tbody').append(strHtmlTbody2);
        $('#iframeReporteRP85').addClass('hidden');

        var sumaTotalCantidades = ObjUtil.InicializarArreglo((jsonCabeceraDinamica.length + 8), 0); //inicializando de ceros al array que contendra los totalizados.
        var sumalTotalMontos = ObjUtil.InicializarArreglo((jsonCabeceraDinamica.length + 8), 0);

        /****************************** ***************************************/
        $('#tbrp85 > tbody  > tr').each(function () {
            $(this).find('.cantidad').each(function (i) {
                sumaTotalCantidades[i] += Number($(this).text());
            });
        });

        $('#tbrp85 > tbody  > tr').each(function () {
            $(this).find('.importe').each(function (i) {
                sumalTotalMontos[i] += Number($(this).text());
            });
        });



        var cantidadDeFilasEnTabla = $("#tbrp85 tbody tr:nth-child(2) td").length;
        var rwfoot = '';


        rwfoot += '<tr>';

        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    rwfoot += '<th ></th>';
                    break;
                case 1:
                    rwfoot += '<th></th>';
                    break;
                case 2:
                    rwfoot += '<th></th>';
                    break;
                case 3:
                    rwfoot += '<th></th>';
                    break;
                case 4:
                    rwfoot += '<th class="text-right cantidad" style="text-align: right;"  ></th>';
                    break;
                case 5:
                    rwfoot += '<th class="cantidad" style="text-align: right;" ></th>';
                    break;
                case 6:
                    rwfoot += '<th></th>';
                    break;
                case 7:
                    rwfoot += '<th></th>';
                    break;
                default:
                    rwfoot += "<th class='text-right " + (j % 2 == 0 ? 'cantidad' : 'monto') + "' style='text-align: right;" + (j % 2 != 0 ? 'mso-number-format:0.00' : '') + "' ></th>";
                    break;
            }
        }
        rwfoot += '</tr>';
        $("#tbrp85 tfoot").append(rwfoot);



        $("#tbrp85 tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count]);
        });

        var totalProdImp;
        $("#tbrp85 tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });


        //foot para imprimir 
        var Rp85Impfoot = '';


        Rp85Impfoot += '<tr>' +
            '<th style="text-weigth: bold; font-size: 10px ;text-align: left; border-top: 1px solid black;">TOTAL</th>' +
            '<th style="border-top: 1px solid black;"></th>' +
            '<th style="border-top: 1px solid black;"></th>' +
            '<th style="border-top: 1px solid black;"></th>' +
            '<th style="text-align: left; font-size: 10px; border-top: 1px solid black">' + totalLA + '</th>' +
            '<th style="text-align: left; font-size: 10px; border-top: 1px solid black">' + totalLB + '</th>' +
            '<th style="border-top: 1px solid black;"></th>' +
            '<th style="border-top: 1px solid black;"></th>' +
            '<th class="monto" align="right" style="border-top: 1px solid black;">' + totalProdImp + '</th>' +
            '</tr>';
        //*********************
        $("#Rp85Imp tfoot").append(Rp85Impfoot);
        ObjUtil.DesbloquearPantalla();
    });
};

function cargarRP86() {
    Ruta = NombreAplicacion + '/./ReporteBoleto/ProcBoletoTransaccionReporteV2';
    Data = {
    Parametro: $('.datetimeRP86').val() + '|' + $('#busquedaFinRp86').val() + '|' + $('#selectRecorrido').val() + '|' + ($('#selectUnidadRP86').val() == null ? 0 : $('#selectUnidadRP86').val()),
    Indice: 86
    }

    $.getJSON(Ruta, Data, function (Datos) {

        var indiceTablas = 0;

        $('#tbrp86 caption').empty();
        $('#tbrp86 thead').empty();
        $('#tbrp86 tbody').empty();
        $('#tbrp86 tfoot').empty();
        $('#Rp86Imp thead').empty();
        $('#Rp86Imp tbody').empty();
        $('#Rp86Imp tfoot').empty();

        $.each(Datos, function (index, value) {
            indiceTablas++;
        });

        if (indiceTablas != 2) {
            $('#tbrp86 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }

        var jsonDatos = Datos['dt0'];
        var jsonCabeceraDinamica = Datos['dt1'];

        console.log(jsonDatos);
        console.log(jsonCabeceraDinamica);

        var strHtmlThead = '';
        var strHtmlThead2 = '';

        strHtmlThead += '<tr>';

        strHtmlThead +=
            '<th rowspan="2" style="vertical-align: middle">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'FECHA' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'HORA' + '</th>';

        $.each(jsonCabeceraDinamica, function (i) {
            strHtmlThead += '<th colspan="2" style="text-align:center;" >' + this.Control + '</th>';
        });

        strHtmlThead += '<th colspan="2" class="text-center" >TOTAL</th>';

        strHtmlThead += '</tr>';

        /*********** armando segundo row **********************/
        strHtmlThead += '<tr>';

        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead += '<th title="Cantidad" class="text-right" >CNT</th><th title="Importe" class="text-right" >IMP</th>';
        }

        strHtmlThead += '<th class="text-right" >T.CNT</th>';
        strHtmlThead += '<th class="text-right" >T.IMP</th>';

        strHtmlThead += '</tr>';

        //Cabecera imprimible
        strHtmlThead2 += '<tr>';

        strHtmlThead2 +=
            '<th rowspan="2" style="vertical-align: middle; text-align: left">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle; text-align: left">' + 'FECHA' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle; text-align: left">' + 'HORA' + '</th>';

        $.each(jsonCabeceraDinamica, function (i) {
            strHtmlThead2 += '<th colspan="2" style="text-align:center;" >' + this.Control + '</th>';
        });

        strHtmlThead2 += '<th colspan="2" class="text-center" >TOTAL</th>';

        strHtmlThead2 += '</tr>';

        /*********** armando segundo row **********************/
        strHtmlThead2 += '<tr>';

        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead2 += '<th title="Cantidad" style="text-align: right" class="text-right" >CNT</th><th title="Importe" style="text-align: right" class="text-right" >IMP</th>';
        }

        strHtmlThead2 += '<th style="text-align: right" class="text-right" >T.CNT</th>';
        strHtmlThead2 += '<th style="text-align: right" class="text-right" >T.IMP</th>';

        strHtmlThead2 += '</tr>';
        //*******************
        
        $('#tbrp86 thead').append(strHtmlThead);
        $('#Rp86Imp thead').append(strHtmlThead2);

        var strHtmlTbody;
        var strHtmlTbody2;
        var serviciosArr = [];

        var totalCantidad = 0;
        var totalProdd = 0;

        $.each(jsonDatos, function (i) {

            var objDatos = this;
            strHtmlTbody += '<tr>' +
                '<td >' + (i + 1) + '</td>' +
                '<td >' + this.Fecha + '</td>' +
                '<td >' + this.Hora + '</td>';

            strHtmlTbody2 += '<tr>' +
                '<td >' + (i + 1) + '</td>' +
                '<td >' + this.Fecha + '</td>' +
                '<td >' + this.Hora + '</td>';

            $.each(jsonCabeceraDinamica, function () {

                totalCantidad += Number(objDatos[this.Control] == null ? 0 : objDatos[this.Control].split('|')[0]);
                totalProdd += Number(objDatos[this.Control] == null ? 0 : objDatos[this.Control].split('|')[1]);

                strHtmlTbody += '<td class="text-right cantidad" >' + objDatos[this.Control].split('|')[0] + '</td>' +
                    '<td class="text-right importe" style="mso-number-format:0\.00" >' + objDatos[this.Control].split('|')[1] + '</td>';

                strHtmlTbody2 += '<td style="text-align: right" class="text-right cantidad" >' + objDatos[this.Control].split('|')[0] + '</td>' +
                    '<td style="text-align: right" class="text-right importe" style="mso-number-format:0\.00" >' + objDatos[this.Control].split('|')[1] + '</td>';
            });

            strHtmlTbody += '<td style="border-left: 3px solid #6098b9;" class="text-right cantidad" >' + totalCantidad + '</td>' +
                '<td  class="text-right importe" style="mso-number-format:0\.00" >' + totalProdd.toFixed(2) + '</td>' +
                '</tr>';

            strHtmlTbody2 += '<td style="text-align: right" class="text-right cantidad" >' + totalCantidad + '</td>' +
                '<td  class="text-right importe" style="mso-number-format:0\.00; text-align: right" >' + totalProdd.toFixed(2) + '</td>' +
                '</tr>';


            totalCantidad = 0;
            totalProdd = 0;
        });

        $('#tbrp86 tbody').append(strHtmlTbody);
        $('#Rp86Imp tbody').append(strHtmlTbody2);
        $('#iframeReporteRP86').addClass('hidden');

        var sumaTotalCantidades = ObjUtil.InicializarArreglo((jsonCabeceraDinamica.length + 3), 0); //inicializando de ceros al array que contendra los totalizados.
        var sumalTotalMontos = ObjUtil.InicializarArreglo((jsonCabeceraDinamica.length + 3), 0);

        /*********************************************************************/

        $('#tbrp86 > tbody  > tr').each(function () {
            $(this).find('.cantidad').each(function (i) {
                sumaTotalCantidades[i] += Number($(this).text());
            });
        });

        $('#tbrp86 > tbody  > tr').each(function () {
            $(this).find('.importe').each(function (i) {
                sumalTotalMontos[i] += Number($(this).text());
            });
        });

        var cantidadDeFilasEnTabla = $("#tbrp86 tbody > tr > td").length;
        var rwfoot = '';

        rwfoot += '<tr>';

        for (j = 0; j < cantidadDeFilasEnTabla; j++) {
            switch (j) {
                case 0:
                    rwfoot += '<th></th>';
                    break;
                case 1:
                    rwfoot += '<th></th>';
                    break;
                case 2:
                    rwfoot += '<th></th>';
                    break;
                default:
                    rwfoot += "<th class='text-right " + (j % 2 == 0 ? 'monto' : 'cantidad') + "' style='text-align: right;" + (j % 2 != 0 ? 'mso-number-format:0.00' : '') + "' ></th>";
                    break;
            }
        }

        rwfoot += '</tr>';

        $("#tbrp86 tfoot").append(rwfoot);
        $("#Rp86Imp tfoot").append(rwfoot);

        $("#tbrp86 tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count]);
        });

        var totalProdImp;

        $("#tbrp86 tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        $("#Rp86Imp tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count]);
        });

        var totalProdImp;
        $("#Rp86Imp tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        ObjUtil.DesbloquearPantalla();
    });
}

function cargarRP95() {
    Ruta = NombreAplicacion + '/./ReporteBoleto/ProcBoletoTransaccionReporteV2';
    Data = {
        Parametro: $('.datetimeRP95').val() + '|' + $('.datetimeRP95').val() + '|' + $('#selectRutaRP95').val() + '|' + $('#selectLadoRP95').val(),
        Indice: 95
    }

    $.getJSON(Ruta, Data, function (Datos) {
        var indiceTablas = 0;

        $('#tbrp95 caption').empty();
        $('#tbrp95 thead').empty();
        $('#tbrp95 tbody').empty();
        $('#tbrp95 tfoot').empty();
        $('#Rp95Imp thead').empty();
        $('#Rp95Imp tbody').empty();
        $('#Rp95Imp tfoot').empty();


        $.each(Datos, function (index, value) {
            indiceTablas++;
        });

        if (indiceTablas != 2) {
            $('#tbrp95 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }

        var jsonDatos = Datos['dt0'];
        var jsonCabeceraDinamica = Datos['dt1'];

        var strHtmlThead = '';
        var strHtmlThead2 = '';
        var posicionDinamico = 9;

        strHtmlThead += '<tr>';

        strHtmlThead += '<th rowspan="2" style="vertical-align: middle">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'F.SAL.' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'H.SAL.' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle;width: 10px;">' + 'IFc.' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'PADRON' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle; width: 90px">' + 'PLACA' + '</th>';

        $.each(jsonCabeceraDinamica, function (i) {
            strHtmlThead += '<th colspan="2" title="' + this.NomBoleto + '" style="text-align:center;width: 150px" ><div  style="width:150px; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;">' + this.NomBoleto.replace(' ', '.'); + '</div></th>';
        });

        strHtmlThead += '<th colspan="2" class="text-center" >TOTAL</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle; width: 200px">CONDUCTOR</th>';

        strHtmlThead += '</tr>';

        /*********** armando segundo row **********************/
        strHtmlThead += '<tr>';

        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead += '<th title="Cantidad" class="text-right" >CNT</th><th title="Importe" class="text-right" >IMP</th>';
        }

        strHtmlThead += '<th class="text-right" >T.CNT</th>';
        strHtmlThead += '<th class="text-right" >T.IMP</th>';

        strHtmlThead += '</tr>';

        //Cabecera del reporte 95 para imprimir
        strHtmlThead2 += '<tr>';

        strHtmlThead2 += '<th rowspan="2" style="vertical-align: middle">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'F.SAL.' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'H.SAL.' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'IFc' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'PADRON' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'PLACA' + '</th>';

        $.each(jsonCabeceraDinamica, function (i) {
            strHtmlThead2 += '<th colspan="2" style="text-align:center;" >' + this.NomBoleto.replace(' ', '.'); + '</th>';
        });

        strHtmlThead2 += '<th colspan="2" class="text-center" >TOTAL</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">CONDUCTOR</th>';

        strHtmlThead2 += '</tr>';

        /*********** armando segundo row imprimible **********************/
        strHtmlThead2 += '<tr>';

        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead2 += '<th title="Cantidad" class="text-right" align="right">CNT</th><th title="Importe" class="text-right" align="right">IMP</th>';
        }

        strHtmlThead2 += '<th class="text-right" align="right">T.CNT</th>';
        strHtmlThead2 += '<th class="text-right" align="right">T.IMP</th>';
        strHtmlThead2 += '</tr>';

        $('#tbrp95 thead').append(strHtmlThead);
        $('#Rp95Imp thead').append(strHtmlThead2);
        var strHtmlTbody;
        var strHtmlTbody2;
        var serviciosArr = [];
        var totalCantidad = 0;
        var totalProdd = 0;

        $.each(jsonDatos, function (i) {

            var objDatos = this;
            strHtmlTbody +=
                '<tr>' +
                '<td >' + (i + 1) + '</td>' +
                '<td >' + this.FechaSalida + '</td>' +
                '<td >' + this.HoraInicio + '</td>' +
                '<td >' + this.Frecuencia + '</td>' +
                '<td >' + this.PadronUnidad + '</td>' +
                '<td title="' + this.PlacaUnidad + '" style="width: 90px"><div style="width:100%; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;">' + this.PlacaUnidad + '</div></td>';

            //Cuerpo reporte 95 imprimir

            strHtmlTbody2 +=
                '<tr>' +
                '<td >' + (i + 1) + '</td>' +
                '<td >' + this.FechaSalida + '</td>' +
                '<td >' + this.HoraInicio + '</td>' +
                '<td >' + this.Frecuencia + '</td>'
                '<td >' + this.PadronUnidad + '</td>' +
                '<td >' + this.PlacaUnidad + '</td>';
            /***************************************************************************************************************************/

            $.each(jsonCabeceraDinamica, function () {

                totalCantidad += Number(objDatos[this.NomBoleto] == null || objDatos[this.NomBoleto] == '' ? Number(0) : Number(objDatos[this.NomBoleto].split('|')[0]));
                totalProdd += Number(objDatos[this.NomBoleto] == null || objDatos[this.NomBoleto] == '' ? Number(0) : Number(objDatos[this.NomBoleto].split('|')[1]));

                strHtmlTbody += '<td class="text-right cantidad" >' + (objDatos[this.NomBoleto] == null || objDatos[this.NomBoleto] == '' ? 0 : objDatos[this.NomBoleto].split('|')[0]) + '</td>' +
                    '<td class="text-right importe" style="mso-number-format:0\.00" >' + (objDatos[this.NomBoleto] == null || objDatos[this.NomBoleto] == '' ? 0 : (objDatos[this.NomBoleto].split('|')[1] == null || objDatos[this.NomBoleto].split('|')[1] == '' ? 0 : objDatos[this.NomBoleto].split('|')[1])) + '</td>';

                //Cuerpo reporte 95 imprimir
                strHtmlTbody2 += '<td class="text-right cantidad"  align="right">' + (objDatos[this.NomBoleto] == null || objDatos[this.NomBoleto] == '' ? 0 : objDatos[this.NomBoleto].split('|')[0]) + '</td>' +
                    '<td class="text-right importe" style="mso-number-format:0\.00" align="right">' + (objDatos[this.NomBoleto] == null || objDatos[this.NomBoleto] == '' ? 0 : (objDatos[this.NomBoleto].split('|')[1] == null || objDatos[this.NomBoleto].split('|')[1] == '' ? 0 : objDatos[this.NomBoleto].split('|')[1])) + '</td>';
                /***************************************************************************************************************************/
            });

            strHtmlTbody += '<td style="border-left: 3px solid #6098b9;" class="text-right cantidad" >' + totalCantidad + '</td>' +
                '<td  class="text-right importe" style="mso-number-format:0\.00" >' + totalProdd.toFixed(2) + '</td>' +
                '<td title="' + this.Conductor + '" style="max-width:200px" ><div style="width:100%; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;">' + this.Conductor + '</div></td>';

            strHtmlTbody += '</tr>';

            //Cuerpo reporte 95 imprimir
            strHtmlTbody2 += '<td style="border-left: 3px solid #6098b9;" class="text-right cantidad" align="right">' + totalCantidad + '</td>' +
                '<td class="text-right importe" style="mso-number-format:0\.00" align="right">' + totalProdd.toFixed(2) + '</td>' +
                '<td align="left">' + this.Conductor + '</td>';

            strHtmlTbody2 += '</tr>';
            /***************************************************************************************************************************/

            totalCantidad = 0;
            totalProdd = 0;
        });
        $('#tbrp95 tbody').append(strHtmlTbody);
        $('#Rp95Imp tbody').append(strHtmlTbody2);
        $('#iframeReporteRP95').addClass('hidden');

        var sumaTotalCantidades = ObjUtil.InicializarArreglo((jsonCabeceraDinamica.length + 6), 0); //inicializando de ceros al array que contendra los totalizados.
        var sumalTotalMontos = ObjUtil.InicializarArreglo((jsonCabeceraDinamica.length + 6), 0);

        /****************************** ***************************************/
        $('#tbrp95 > tbody  > tr').each(function () {
            $(this).find('.cantidad').each(function (i) {
                sumaTotalCantidades[i] += Number($(this).text());
            });
        });

        $('#tbrp95 > tbody  > tr').each(function () {
            $(this).find('.importe').each(function (i) {
                sumalTotalMontos[i] += Number($(this).text());
            });
        });

        var cantidadDeFilasEnTabla = $("#tbrp95 tbody tr:nth-child(2) td").length;
        var rwfoot = '';

        rwfoot += '<tr>';

        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    rwfoot += '<th ></th>';
                    break;
                case 1:
                    rwfoot += '<th></th>';
                    break;
                case 2:
                    rwfoot += '<th></th>';
                    break;
                case 3:
                    rwfoot += '<th></th>';
                    break;
                case 4:
                    rwfoot += '<th></th>';
                    break;
                case 5:
                    rwfoot += '<th></th>';
                    break;
                case (cantidadDeFilasEnTabla - 1):
                    rwfoot += '<th></th>';
                    break;
                default:
                    //rwfoot += "<th class='text-right " + (j % 2 == 0 ? 'monto' : 'cantidad') + "' style='text-align: right;" + (j % 2 != 0 ? 'mso-number-format:0.00' : '') + "' ></th>";
                    rwfoot += "<th class='text-right " + (j % 2 == 0 ? 'cantidad' : 'monto') + "' style='text-align: right;" + (j % 2 != 0 ? '' : 'mso-number-format:0.00') + "' ></th>";
                    break;
            }
        }
        rwfoot += '</tr>';
        $("#tbrp95 tfoot").append(rwfoot);



        $("#tbrp95 tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count]);
        });

        var totalProdImp;
        $("#tbrp95 tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });


        //foot para imprimir 
        var Rp95Impfoot = '';

        Rp95Impfoot += '<tr>';
        for (j = 0; j < cantidadDeFilasEnTabla; j++) {
            switch (j) {

                case 0:
                    Rp95Impfoot += '<th ></th>';
                    break;
                case 1:
                    Rp95Impfoot += '<th></th>';
                    break;
                case 2:
                    Rp95Impfoot += '<th></th>';
                    break;
                case 3:
                    Rp95Impfoot += '<th></th>';
                    break;
                case 4:
                    Rp95Impfoot += '<th></th>';
                    break;
                case 5:
                    Rp95Impfoot += '<th></th>';
                    break;
                case (cantidadDeFilasEnTabla - 1):
                    Rp95Impfoot += '<th></th>';
                    break;
                default:
                    //Rp95Impfoot += "<th class='text-right " + (j % 2 == 0 ? 'monto' : 'cantidad') + "' style='text-align: right;" + (j % 2 != 0 ? 'mso-number-format:0.00' : '') + "' ></th>";
                    Rp95Impfoot += "<th class='text-right " + (j % 2 == 0 ? 'cantidad' : 'monto') + "' style='text-align: right;" + (j % 2 != 0 ? '' : 'mso-number-format:0.00') + "' ></th>";
                    break;
            }
        };

        Rp95Impfoot += '</tr>';
        $("#Rp95Imp tfoot").append(Rp95Impfoot);

        $("#Rp95Imp tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count]);
        });

        var totalProdImp;
        $("#Rp95Imp tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        //*********************

        ObjUtil.DesbloquearPantalla();
    });
}

function cargarRP112() {
    Ruta = NombreAplicacion + '/./ReporteBoleto/CargarRp112';

    Data = {
        codRuta: $('#selectRuta112').val(),
        mes: $('#selectMes112').val(),
        year: $('#selectAnio112').val(),
        situacion: $('#selSituacion112').val(),
        indice: 112
    };
    
    $.getJSON(Ruta, Data, function (Datos) {
        console.log(Ruta);
        console.log(Data);
        
        var indiceTablas = 0;

        $('#tbrp112 caption').empty();
        $('#tbrp112 thead').empty();
        $('#tbrp112 tbody').empty();
        $('#tbrp112 tfoot').empty();
        $('#Rp112Imp thead').empty();
        $('#Rp112Imp tbody').empty();
        $('#Rp112Imp tfoot').empty();

        $.each(Datos, function (index, value) {
            indiceTablas++;
        });

        if (indiceTablas != 3) {
            $('#tbrp112 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }

        var jsonDatos = Datos['dt1'];
        var jsonCabeceraDinamica = Datos['dt2'];
        var strHtmlThead = '';
        var strHtmlThead2 = '';
        var posicionDinamico = 9;

        strHtmlThead += '<tr>';

        strHtmlThead += '<th rowspan="2" style="vertical-align: middle">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'PAD' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'PLACA' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'DIAS' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle; text-align: right">' + 'VTA' + '</th>';

        $.each(jsonCabeceraDinamica, function (i) {
            strHtmlThead += '<th colspan="2" title="' + this.ColumnaBoleto + '" style="text-align:center;width: 150px" ><div  style="width:150px; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;">' + this.ColumnaBoleto.replace(' ', '.') + '</div></th>';
        });

        strHtmlThead += '<th colspan="2" class="text-center" >TOTAL</th>';

        strHtmlThead += '</tr>';

        /*********** armando segundo row **********************/
        strHtmlThead += '<tr>';

        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead += '<th title="Cantidad" class="text-right" >CNT</th><th title="Importe" class="text-right" >IMP</th>';
        }

        strHtmlThead += '<th class="text-right" >T.CNT</th>';
        strHtmlThead += '<th class="text-right" >T.IMP</th>';

        strHtmlThead += '</tr>';

        //Cabecera del reporte 112 para imprimir
        strHtmlThead2 += '<tr>';

        strHtmlThead2 += 
            '<th rowspan="2" style="vertical-align: middle" align="left">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle" align="left">' + 'PAD' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle" align="left">' + 'PLACA' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle" align="left">' + 'DIAS' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle" align="right">' + 'VTA' + '</th>';

        $.each(jsonCabeceraDinamica, function (i) {
            strHtmlThead2 += '<th colspan="2" style="text-align:center;" >' + this.ColumnaBoleto.replace(' ', '.') + '</th>';
        });

        strHtmlThead2 += '<th colspan="2" class="text-center" >TOTAL</th>';

        strHtmlThead2 += '</tr>';

        /*********** armando segundo row imprimible **********************/
        strHtmlThead2 += '<tr>';

        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead2 += '<th title="Cantidad" class="text-right" align="right">CNT</th><th title="Importe" class="text-right" align="right">IMP</th>';
        }

        strHtmlThead2 += '<th class="text-right" align="right">T.CNT</th>';
        strHtmlThead2 += '<th class="text-right" align="right">T.IMP</th>';

        strHtmlThead2 += '</tr>';

        $('#tbrp112 thead').append(strHtmlThead);
        $('#Rp112Imp thead').append(strHtmlThead2);
        var strHtmlTbody;
        var strHtmlTbody2;
        var serviciosArr = [];
        var totalCantidad = 0;
        var totalProdd = 0;

        $.each(jsonDatos, function (i) {

            var objDatos = this;
            strHtmlTbody +=
                '<tr>' +
                '<td >' + (i + 1) + '</td>' +
                '<td >' + this.PadronUnidad + '</td>' +
                '<td title="' + this.PlacaUnidad + '" style="width: 90px"><div style="width:100%; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;">' + this.PlacaUnidad + '</div></td>' +
                '<td >' + (this.DiasxMes == null ? 0 : this.DiasxMes) + '</td>' +
                '<td class="text-right importe">' + (this.Vueltas == null ? 0 : this.Vueltas) + '</td>';

            //Cuerpo reporte 112 imprimir
            strHtmlTbody2 +=
                '<tr>' +
                '<td >' + (i + 1) + '</td>' +
                '<td >' + this.PadronUnidad + '</td>' +
                '<td >' + this.PlacaUnidad + '</td>' +
                '<td >' + this.DiasxMes + '</td>' +
                '<td align="right">' + this.Vueltas + '</td>';
            /***************************************************************************************************************************/

            $.each(jsonCabeceraDinamica, function () {

                totalCantidad += Number(objDatos[this.ColumnaBoleto] == null || objDatos[this.ColumnaBoleto] == '' ? Number(0) : Number(objDatos[this.ColumnaBoleto].split('|')[0]));
                totalProdd += Number(objDatos[this.ColumnaBoleto] == null || objDatos[this.ColumnaBoleto] == '' ? Number(0) : Number(objDatos[this.ColumnaBoleto].split('|')[1]));

                strHtmlTbody += '<td class="text-right cantidad" >' + (objDatos[this.ColumnaBoleto] == null || objDatos[this.ColumnaBoleto] == '' ? 0 : objDatos[this.ColumnaBoleto].split('|')[0]) + '</td>' +
                    '<td class="text-right importe" style="mso-number-format:0\.00" >' + (objDatos[this.ColumnaBoleto] == null || objDatos[this.ColumnaBoleto] == '' ? 0 : (objDatos[this.ColumnaBoleto].split('|')[1] == null || objDatos[this.ColumnaBoleto].split('|')[1] == '' ? 0 : Number(objDatos[this.ColumnaBoleto].split('|')[1]))).toFixed(2) + '</td>';

                //Cuerpo reporte 112 imprimir
                strHtmlTbody2 += '<td class="text-right cantidad"  align="right">' + (objDatos[this.ColumnaBoleto] == null || objDatos[this.ColumnaBoleto] == '' ? 0 : objDatos[this.ColumnaBoleto].split('|')[0]) + '</td>' +
                    '<td class="text-right importe" style="mso-number-format:0\.00" align="right">' + (objDatos[this.ColumnaBoleto] == null || objDatos[this.ColumnaBoleto] == '' ? 0 : (objDatos[this.ColumnaBoleto].split('|')[1] == null || objDatos[this.ColumnaBoleto].split('|')[1] == '' ? 0 : Number(objDatos[this.ColumnaBoleto].split('|')[1]))).toFixed(2) + '</td>';
                /***************************************************************************************************************************/

            });

            strHtmlTbody += '<td style="border-left: 3px solid #6098b9;" class="text-right cantidad" >' + totalCantidad + '</td>' +
                '<td  class="text-right importe" style="mso-number-format:0\.00" >' + totalProdd.toFixed(2) + '</td>';

            strHtmlTbody += '</tr>';

            //Cuerpo reporte 112 imprimir
            strHtmlTbody2 += '<td style="border-left: 3px solid #6098b9;" class="text-right cantidad" align="right">' + totalCantidad + '</td>' +
                '<td  class="text-right importe" style="mso-number-format:0\.00" align="right">' + totalProdd.toFixed(2) + '</td>';

            strHtmlTbody2 += '</tr>';
            /***************************************************************************************************************************/

            totalCantidad = 0;
            totalProdd = 0;
        });

        $('#tbrp112 tbody').append(strHtmlTbody);
        $('#Rp112Imp tbody').append(strHtmlTbody2);
        $('#iframeReporteRP112').addClass('hidden');

        var sumaTotalCantidades = ObjUtil.InicializarArreglo((jsonCabeceraDinamica.length + 4), 0); //inicializando de ceros al array que contendra los totalizados.
        var sumalTotalMontos = ObjUtil.InicializarArreglo((jsonCabeceraDinamica.length + 4), 0);

        /****************************** ***************************************/
        $('#tbrp112 > tbody  > tr').each(function () {
            $(this).find('.cantidad').each(function (i) {
                sumaTotalCantidades[i] += Number($(this).text());
            });
        });

        $('#tbrp112 > tbody  > tr').each(function () {
            $(this).find('.importe').each(function (i) {
                sumalTotalMontos[i] += Number($(this).text());
            });
        });

        var cantidadDeFilasEnTabla = $("#tbrp112 tbody tr:nth-child(2) td").length;
        var rwfoot = '';


        rwfoot += '<tr>';

        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    rwfoot += '<th ></th>';
                    break;
                case 1:
                    rwfoot += '<th></th>';
                    break;
                case 2:
                    rwfoot += '<th></th>';
                    break;
                case 3:
                    rwfoot += '<th></th>';
                    break;
                default:
                    rwfoot += "<th class='text-right " + (j % 2 == 0 ? 'monto' : 'cantidad') + "' style='text-align: right;" + (j % 2 != 0 ? 'mso-number-format:0.00' : '') + "' ></th>";
                    break;
            }
        }
        rwfoot += '</tr>';
        $("#tbrp112 tfoot").append(rwfoot);

        $("#tbrp112 tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count]);
        });

        var totalProdImp;
        $("#tbrp112 tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });


        //foot para imprimir 
        var Rp112Impfoot = '';


        Rp112Impfoot += '<tr>';

        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    Rp112Impfoot += '<th ></th>';
                    break;
                case 1:
                    Rp112Impfoot += '<th></th>';
                    break;
                case 2:
                    Rp112Impfoot += '<th></th>';
                    break;
                case 3:
                    Rp112Impfoot += '<th></th>';
                    break;
                default:
                    Rp112Impfoot += "<th class='text-right " + (j % 2 == 0 ? 'monto' : 'cantidad') + "' style='text-align: right;" + (j % 2 != 0 ? 'mso-number-format:0.00' : '') + "' ></th>";
                    break;
            }
        }

        Rp112Impfoot += '</tr>';
        $("#Rp112Imp tfoot").append(Rp112Impfoot);

        $("#Rp112Imp tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count]);
        });

        var totalProdImp;
        $("#Rp112Imp tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        //*********************

        ObjUtil.DesbloquearPantalla();
    });
}

// REPORTE 114

async function cargarRP114(codRP) {
    //console.log(codRP)
    $(`#iconCargar${codRP}`).css('display', '');
    const fechaInicio = document.querySelector(`#fecha-inicio-${codRP}`).value;
    const selectRuta = document.querySelector(`#selectRuta114`).value;
    const tablaRP114 = document.querySelector(`#tb${codRP}`);
    $(`#tb${codRP} thead`).empty();
    $(`#tb${codRP} tbody`).empty();
    const tbodyRP114 = tablaRP114.getElementsByTagName('tbody')[0];
    const urlBack = NombreAplicacion + '/GeneralPost/ProcGeneralPost';

    const Data = {
        Procedimiento: 'ProcSalidaReporteV3',
        Parametro: selectRuta + '|' + fechaInicio,
        indice: 50,
    }

    const response = await fetch(urlBack, DataFetch(Data, 'POST')).then(res => res.json());
    const jsonData = response['dt0'];
    if (jsonData.length === 0) {
        LimpiarTabla(2, codRP, false, 8);
        $(`#iconCargar${codRP}`).css('display', 'none');
        return;
    }

    let strHead = `
            <tr>
                <th style="text-align: center; border-left: solid 1px black; vertical-align: middle;" rowspan="2" >N</th>
                <th style="text-align: center; vertical-align: middle; border-left: solid 1px black;" rowspan="2">UNIDAD</th>
                <th style="text-align: center; border-left: solid 1px black; vertical-align: middle;" rowspan="2">T.</th>
                <th style="text-align: center; border-left: solid 1px black;" colspan="2">VUELTA</th>
                <th style="text-align: center;border-left: solid 1px black; vertical-align: middle;" rowspan="2">CONDUCTOR</th>
                <th style="text-align: center; border-left: solid 1px black; vertical-align: middle;" rowspan="2">AYUDANTE</th>
            </tr>
            <tr>
                    <th style="text-align: center; border-left: solid 1px black;" title="HoraInicio">H. INI.</th>
                    <th style="text-align: center;border-left: solid 1px black;" title="HoraFin">H. FIN</th>
            </tr>`;

    $(`#tb${codRP} thead`).append(strHead);

    jsonData.forEach((mofv, i) => {
        const tr = document.createElement('tr');
        tr.setAttribute('class', 'colorear option')
        tr.innerHTML = `
            <td data-sort="string" style="vertical-align: middle; text-align: center; border-right:0.5px solid;border-color:#ACADBF;">${mofv.N}</td>
            <td data-sort="string" style="vertical-align: middle; text-align: center; border-right:0.5px solid;border-color:#ACADBF;">${mofv.Unidad}</td>
            <td data-sort="string" style="vertical-align: middle; text-align: center; border-right:0.5px solid;border-color:#ACADBF;">${mofv.Terminal}</td>
            <td data-sort="string" style="vertical-align: middle; text-align: center; border-right:0.5px solid;border-color:#ACADBF;">${mofv.HoraInicio}</td>
            <td data-sort="string" style="vertical-align: middle; text-align: center; border-right:0.5px solid;border-color:#ACADBF;">${mofv.HoraFin}</td>
            <td data-sort="string" style="vertical-align: middle; text-align: center; border-right:0.5px solid;border-color:#ACADBF;">${mofv.Conductor}</td>
            <td data-sort="string" style="vertical-align: middle; text-align: center; border-right:0.5px solid;border-color:#ACADBF;">${mofv.Ayudante}</td>
            `
        tbodyRP114.appendChild(tr);
    })

    $(`#iconCargar${codRP}`).css('display', 'none');

    const table = tablaRP114
    let headerCell2 = null;
    for (let row of table.rows) {
        const firstCell2 = row.cells[1];
        if (headerCell2 === null || firstCell2.innerText !== headerCell2.innerText) {
            headerCell2 = firstCell2;
        } else {
            headerCell2.rowSpan++;
            firstCell2.remove();
        }
    }

    for (let row of table.rows) {
        const firstCell2 = row.cells[0];
        if (headerCell2 === null || firstCell2.innerText !== headerCell2.innerText) {
            headerCell2 = firstCell2;
        } else {
            headerCell2.rowSpan++;
            firstCell2.remove();
        }
    }

}

// REPORTE 114

function cargarRP115Unidad() {

    $(`#iconCargarRP115`).css('display', '');
    const codRuta = $('#selectRuta115').val() || 0;
    const selectUnidades = document.getElementById(`selectUnidadRP115`);
    const codUnidad = codRuta == 0 ? selectUnidades.value : 0;

    Ruta = NombreAplicacion + '/./ReporteBoleto/ProcBoletoTransaccionReporteV2';
    Data = {
        Parametro: $('.datetimeRP115').val() + '|' + $('#busquedaFin115').val() + '|' + codRuta + '|' + codUnidad,
        Indice: 115
    }

    $.getJSON(Ruta, Data, function (Datos) {
        var indiceTablas = 0;

        $('#tbRP115 caption').empty();
        $('#tbRP115 thead').empty();
        $('#tbRP115 tbody').empty();
        $('#tbRP115 tfoot').empty();

        $('#Rp115Imp thead').empty();
        $('#Rp115Imp tbody').empty();
        $('#Rp115Imp tfoot').empty();

        $.each(Datos, function (index, value) {
            indiceTablas++;
        });

        if (indiceTablas != 2) {
            $('#tbRP115 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }

        var jsonDatos = Datos['dt0'];
        var jsonCabeceraDinamica = Datos['dt1'];

        var strHtmlThead = '';
        var strHtmlThead2 = '';
        var posicionDinamico = 9;

        strHtmlThead += '<tr>';

        strHtmlThead += '<th rowspan="2" style="vertical-align: middle">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'PAD' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'UNIDAD' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle;text-align:center">' + 'CONDUCTOR' + '</th>';

        $.each(jsonCabeceraDinamica, function (i) {
            strHtmlThead += '<th colspan="3" title="' + this.ColumnaFecha + '" style="text-align:center;width: 230px" ><div  style="width:230px; white-space: nowrap; overflow:hidden; text-overflow: ellipsis; text-align: center">' + this.ColumnaFecha.replace(' ', '.'); + '</div></th>';
        });

        strHtmlThead += '<th rowspan="2" class="text-center" style="vertical-align: middle">T.VUEL.</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">T.PSJ.</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">T.PROD</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">D.OPER</th>';

        strHtmlThead += '</tr>';

        /*********** armando segundo row **********************/
        strHtmlThead += '<tr>';

        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead += '<th title="Vueltas" class="text-right" style="width:40px !important">V</th>' +
                '<th title="Pasajeros" class="text-right" style="width:40px !important">PSJ</th>' +
                '<th title="Importe" class="text-right" style="width:40px !important">IMP</th>';
        }

        strHtmlThead += '</tr>';

        //Cabecera del reporte 115 para imprimir
        strHtmlThead2 += '<tr>';

        strHtmlThead2 += '<th rowspan="2" style="vertical-align: middle">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'PAD' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'UNIDAD' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle;text-align:center">' + 'CONDUCTOR' + '</th>';

        $.each(jsonCabeceraDinamica, function (i) {
            strHtmlThead2 += '<th colspan="3" title="' + this.ColumnaFecha + '" style="text-align:center;" ><div  style="white-space: nowrap; overflow:hidden; text-overflow: ellipsis; text-align: center">' + this.ColumnaFecha.replace(' ', '.'); + '</div></th>';
        });

        strHtmlThead2 += '<th rowspan="2" class="text-center" style="vertical-align: middle">T.VUEL.</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">T.PSJ.</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">T.PROD</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">D.OPER</th>';

        strHtmlThead2 += '</tr>';

        /*********** armando segundo row imprimible **********************/
        strHtmlThead2 += '<tr>';

        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead2 += '<th title="Vueltas" class="text-right" align="right">V</th><th title="Pasajeros" class="text-right" align="right">PSJ</th><th title="Importe" class="text-right" align="right">IMP</th>';
        }

        strHtmlThead2 += '</tr>';

        $('#tbRP115 thead').append(strHtmlThead);
        $('#Rp115Imp thead').append(strHtmlThead2);
        var strHtmlTbody;
        var strHtmlTbody2;
        var serviciosArr = [];
        var totalVueltas = 0;
        var totalBoletos = 0;
        var totalProduccion = 0;
        var diasOperativos = 0;
        $.each(jsonDatos, function (i) {

            //Obteniendo los conductores
            var arrayConductores = this.Conductores.split('|');
            var titleConductores = '';
            var cantidadConductores = arrayConductores.length;
            var conductor = '';
            if (cantidadConductores == 1) {
                conductor = this.Conductores;
                titleConductores = this.Conductores;
            } else if (cantidadConductores > 1) {
                conductor = arrayConductores[0] + ' y ' + (cantidadConductores - 1) + ' más ...';
                $.each(arrayConductores, function () {
                    titleConductores += this + '<br />';
                })

                titleConductores = titleConductores.substr(0, titleConductores.length - 2);
            }
            //**************************

            var objDatos = this;
            strHtmlTbody +=
                '<tr onclick="PintarTr($(this))">' +
                '<td>' + (i + 1) + '</td>' +
                '<td style="text-align:center">' + (this.PadronUnidad) + '</td>' +
                '<td title="' + this.PlacaUnidad + '" style="width: 90px"><div style="width:100%; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;">' + this.PlacaUnidad + '</div></td>' +
                '<td align="center" title="' + titleConductores + '" class="infoTool" style="max-width:400px;cursor: pointer">' +
                '<div style="width:100%; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;text-align:left">' + conductor + '</div>' +
                '</td>';


            //Cuerpo reporte 115 imprimir
            strHtmlTbody2 +=
                '<tr>' +
                '<td align="center">' + (i + 1) + '</td>' +
                '<td align="center">' + (this.PadronUnidad) + '</td>' +
                '<td align="center" title="' + this.PlacaUnidad + '" style="width: 90px"><div style="width:100%; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;">' + this.PlacaUnidad + '</div></td>' +
                '<td align="center" title="' + this.Conductores + '" style="max-width:400px;">' +
                '<div style="width:100%; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;text-align:left">' + this.Conductores + '</div>' +
                '</td>';
            /***************************************************************************************************************************/

            $.each(jsonCabeceraDinamica, function () {

                totalVueltas += Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[0]));
                totalBoletos += Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[1]));
                totalProduccion += Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[2]));

                if (Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[0])) != 0) {
                    diasOperativos++;
                }

                strHtmlTbody += '<td class="text-right importe" style="mso-number-format:0\.00" data-contenido="' + (objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? 0 : (objDatos[this.ColumnaFecha].split('|')[0] == null || objDatos[this.ColumnaFecha].split('|')[0] == '' ? 0 : objDatos[this.ColumnaFecha].split('|')[0])) + '">' + (objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0).toFixed(1) : (objDatos[this.ColumnaFecha].split('|')[0] == null || objDatos[this.ColumnaFecha].split('|')[0] == '' ? Number(0).toFixed(1) : Number(objDatos[this.ColumnaFecha].split('|')[0]).toFixed(1))) + '</td>' +
                    '<td class="text-right importe" style="" data-contenido="' + Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? 0 : objDatos[this.ColumnaFecha].split('|')[1]).toFixed(0) + '">' + Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0).toFixed(0) : Number(objDatos[this.ColumnaFecha].split('|')[1])).toFixed(0) + '</td>' +
                    '<td class="text-right importe" style="mso-number-format:0\.00" data-contenido="' + (objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? 0 : (objDatos[this.ColumnaFecha].split('|')[2] == null || objDatos[this.ColumnaFecha].split('|')[2] == '' ? 0 : objDatos[this.ColumnaFecha].split('|')[2])) + '">' + Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : (objDatos[this.ColumnaFecha].split('|')[2] == null || objDatos[this.ColumnaFecha].split('|')[2] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[2]))).toFixed(2) + '</td>';

                const main_data = objDatos[this.ColumnaFecha];
                const is_main_null = [null, ''].includes(main_data);

                const vueltas = is_main_null ? '' : main_data.split('|')[0] == null || main_data.split('|')[0] == '' ? '' : main_data.split('|')[0];
                const pasajes = is_main_null ? '' : main_data.split('|')[1] == null || main_data.split('|')[1] == '' ? '' : Number(main_data.split('|')[1]).toFixed(0);
                const importe = is_main_null ? '' : main_data.split('|')[2] == null || main_data.split('|')[2] == '' ? '' : Number(main_data.split('|')[2]).toFixed(2);


                ////Cuerpo reporte 115 imprimir 
                strHtmlTbody2 += '<td align="right" class="text-right importe" style="mso-number-format:0\.00" >' + vueltas + '</td>' +
                    '<td align="right" class="text-right importe" >' + pasajes + '</td>' +
                    '<td align="right" class="text-right importe" style="mso-number-format:0\.00" >' + importe + '</td>';
                ///***************************************************************************************************************************/

            });

            strHtmlTbody += '<td  class="text-right importe" style="border-left: 3px solid #6098b9; mso-number-format:0\.00" data-contenido="' + totalVueltas.toFixed(1) + '">' + totalVueltas.toFixed(1) + '</td>' +
                '<td  class="text-right importe" style="mso-number-format:0\.00"data-contenido="' + totalBoletos + '">' + Number(totalBoletos).toFixed(0) + '</td>' +
                '<td  class="text-right importe" style="mso-number-format:0\.00" data-contenido="' + totalProduccion + '">' + Number(totalProduccion).toFixed(2) + '</td>' +
                '<td  class="text-right cantidad"  data-contenido="' + Number(diasOperativos) + '">' + diasOperativos + '</td>';

            strHtmlTbody += '</tr>';

            //Cuerpo reporte 115 imprimir
            strHtmlTbody2 += '<td align="right" class="text-right importe" style="border-left: 3px solid #6098b9; mso-number-format:0\.00" >' + totalVueltas.toFixed(1) + '</td>' +
                '<td align="right" class="text-right importe" >' + totalBoletos + '</td>' +
                '<td align="right" class="text-right importe" style="mso-number-format:0\.00" >' + totalProduccion.toFixed(2) + '</td>' +
                '<td align="right" class="text-right cantidad" >' + diasOperativos + '</td>';

            strHtmlTbody2 += '</tr>';
            /***************************************************************************************************************************/

            totalVueltas = 0;
            totalBoletos = 0;
            totalProduccion = 0;
            diasOperativos = 0;
        });
        $('#tbRP115 tbody').append(strHtmlTbody);
        $('#Rp115Imp tbody').append(strHtmlTbody2);
        $('#iframeReporteRP115').addClass('hidden');
        $(`#iconCargarRP115`).css('display', 'none');

        //var sumaTotalCantidades = ObjUtil.InicializarArreglo((jsonCabeceraDinamica.length + 7), 0); //inicializando de ceros al array que contendra los totalizados.
        //console.log(jsonCabeceraDinamica.length);
        var sumalTotalMontos = ObjUtil.InicializarArreglo(((jsonCabeceraDinamica.length * 3) + 8), 0);
        var sumaTotalCantidades = ObjUtil.InicializarArreglo((1), 0);
        /****************************** ***************************************/

        //$('#tbRP115 > tbody  > tr').each(function () {
        //    $(this).find('.cantidad').each(function (i) {
        //        sumaTotalCantidades[i] += Number($(this).text());
        //    });
        //});

        $('#tbRP115 > tbody  > tr').each(function () {
            $(this).find('.importe').each(function (i) {
                sumalTotalMontos[i] += Number($(this).attr('data-contenido'));
            });
        });

        $('#tbRP115 > tbody  > tr').each(function () {
            $(this).find('.cantidad').each(function (i) {
                sumaTotalCantidades[i] += Number($(this).attr('data-contenido'));
            });
        });

        var cantidadDeFilasEnTabla = $("#tbRP115 tbody tr:nth-child(2) td").length;
        var rwfoot = '';

        rwfoot += '<tr>';
        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    rwfoot += '<th ></th>';
                    break;
                case 1:
                    rwfoot += '<th></th>';
                    break;
                case 2:
                    rwfoot += '<th></th>';
                    break;
                case 3:
                    rwfoot += '<th></th>';
                    break;
                case (cantidadDeFilasEnTabla - 1):
                    rwfoot += "<th class='text-right cantidad' style='text-align: right;'></th>";
                    break;
                default:
                    rwfoot += "<th class='text-right " + (j % 2 == 0 ? 'monto' : 'monto') + "' style='text-align: right;" + (j % 2 != 0 ? 'mso-number-format:0.00' : 'mso-number-format:0.00') + "' ></th>";
                    break;
            }
        }
        rwfoot += '</tr>';
        $("#tbRP115 tfoot").append(rwfoot);



        //$("#tbRP115 tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
        //    $(this).html(sumaTotalCantidades[count]);
        //});

        var totalProdImp;
        var i = 0;
        var j = 1;
        var FactorSuma = 3;
        var ImporteTotal = 0;
        $("#tbRP115 tfoot th.monto").each(function (count) { // agregando totales de importes
            //
            ImporteTotal = 0;
            if (count == i) {
                ImporteTotal = sumalTotalMontos[count];
                i += FactorSuma;
                $(this).html(Number(ImporteTotal).toFixed(1));
            } else if (count == j) {
                ImporteTotal = sumalTotalMontos[count];
                j += FactorSuma;
                $(this).html(Number(ImporteTotal));
            } else {
                ImporteTotal = sumalTotalMontos[count];
                $(this).html(Number(ImporteTotal).toFixed(2));
            }

            //
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        $("#tbRP115 tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count]);
        });

        //foot para imprimir 
        var Rp115Impfoot = '';

        Rp115Impfoot += '<tr>';

        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    Rp115Impfoot += '<th ></th>';
                    break;
                case 1:
                    Rp115Impfoot += '<th></th>';
                    break;
                case 2:
                    Rp115Impfoot += '<th></th>';
                    break;
                case 3:
                    Rp115Impfoot += '<th></th>';
                    break;
                case (cantidadDeFilasEnTabla - 1):
                    Rp115Impfoot += "<th class='text-right cantidad' style='text-align: right;'></th>";
                    break;
                default:
                    Rp115Impfoot += "<th class='text-right " + (j % 2 == 0 ? 'monto' : 'monto') + "' style='text-align: right;" + (j % 2 != 0 ? 'mso-number-format:0.00' : 'mso-number-format:0.00') + "' ></th>";
                    break;
            }
        }

        Rp115Impfoot += '</tr>';
        $("#Rp115Imp tfoot").append(Rp115Impfoot);

        $("#Rp115Imp tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count]);
        });

        var totalProdImp;
        $("#Rp115Imp tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        //*********************

        $('.infoTool').tooltipster({
            multiple: true,
            contentAsHTML: true
        })

        ObjUtil.DesbloquearPantalla();
    });

}
/*cargarRP115Conductor*/

function cargarRP116() {
    var codigoReporte = 116;//115
    Ruta = NombreAplicacion + '/./ReporteBoleto/ProcBoletoTransaccionReporteV2';
    Data = {                                    //busquedaFin116
        Parametro: $('.datetimeRP' + codigoReporte).val() + '|' + $('#busquedaFin' + codigoReporte).val() + '|' + $('#selectRuta' + codigoReporte).val(),
        Indice: 116
    }

    $.getJSON(Ruta, Data, function (Datos) {
        var indiceTablas = 0;

        $('#tbrp' + codigoReporte + ' caption').empty();
        $('#tbrp' + codigoReporte + ' thead').empty();
        $('#tbrp' + codigoReporte + ' tbody').empty();
        $('#tbrp' + codigoReporte + ' tfoot').empty();

        $('#Rp' + codigoReporte + 'Imp thead').empty();
        $('#Rp' + codigoReporte + 'Imp tbody').empty();
        $('#Rp' + codigoReporte + 'Imp tfoot').empty();

        $.each(Datos, function (index, value) {
            indiceTablas++;
        });

        if (indiceTablas != 2) {
            $('#tbrp' + codigoReporte + ' caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }

        var jsonDatos = Datos['dt0'];
        var jsonCabeceraDinamica = Datos['dt1'];

        var strHtmlThead = '';
        var strHtmlThead2 = '';
        var posicionDinamico = 9;

        strHtmlThead += '<tr>';

        strHtmlThead += '<th rowspan="2" style="vertical-align: middle">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle;text-align:center">' + 'CONDUCTOR' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'UNIDADES' + '</th>';

        $.each(jsonCabeceraDinamica, function (i) {
            strHtmlThead += '<th colspan="3" title="' + this.ColumnaFecha + '" style="text-align:center;width: 230px" ><div  style="width:230px; white-space: nowrap; overflow:hidden; text-overflow: ellipsis; text-align: center">' + this.ColumnaFecha.replace(' ', '.'); + '</div></th>';
        });

        strHtmlThead += '<th rowspan="2" class="text-center" style="vertical-align: middle">T.VUEL.</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">T.PSJ.</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">T.PROD</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">D.OPER</th>';

        strHtmlThead += '</tr>';

        /*********** armando segundo row **********************/
        strHtmlThead += '<tr>';

        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead += '<th title="Vueltas" class="text-right" >V</th><th title="Pasajeros" class="text-right" >PSJ</th><th title="Importe" class="text-right" >IMP</th>';
        }

        strHtmlThead += '</tr>';

        //Cabecera del reporte 116 para imprimir
        strHtmlThead2 += '<tr>';

        strHtmlThead2 += '<th rowspan="2" style="vertical-align: middle">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle;text-align:center">' + 'CONDUCTOR' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'UNIDADES' + '</th>';

        $.each(jsonCabeceraDinamica, function (i) {
            strHtmlThead2 += '<th colspan="3" title="' + this.ColumnaFecha + '" style="text-align:center;" ><div  style="white-space: nowrap; overflow:hidden; text-overflow: ellipsis; text-align: center">' + this.ColumnaFecha.replace(' ', '.'); + '</div></th>';
        });

        strHtmlThead2 += '<th rowspan="2" class="text-center" style="vertical-align: middle">T.VUEL.</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">T.PSJ.</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">T.PROD</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">D.OPER</th>';

        strHtmlThead2 += '</tr>';

        /*********** armando segundo row imprimible **********************/
        strHtmlThead2 += '<tr>';

        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead2 += '<th title="Vueltas" class="text-right" align="right">V</th><th title="Pasajeros" class="text-right" align="right">PSJ</th><th title="Importe" class="text-right" align="right">IMP</th>';
        }

        strHtmlThead2 += '</tr>';





        $('#tbrp' + codigoReporte + ' thead').append(strHtmlThead);
        $('#Rp' + codigoReporte + 'Imp thead').append(strHtmlThead2);
        var strHtmlTbody;
        var strHtmlTbody2;
        var serviciosArr = [];
        var totalVueltas = 0;
        var totalBoletos = 0;
        var totalProduccion = 0;
        var diasOperativos = 0;
        $.each(jsonDatos, function (i) {

            //Obteniendo las unidades
            var arrayUnidades = this.Unidades.split(',');
            var titleUnidades = '';
            var cantidadUnidades = arrayUnidades.length;
            var unidad = '';
            if (cantidadUnidades == 1) {
                unidad = this.Unidades;
                titleUnidades = this.Unidades;
            } else if (cantidadUnidades > 1) {
                unidad = arrayUnidades[0] + ' y ' + (cantidadUnidades - 1) + ' más ...';
                $.each(arrayUnidades, function () {
                    titleUnidades += this + '<br />';
                })

                titleUnidades = titleUnidades.substr(0, titleUnidades.length - 2);
            }
            //***********************

            var objDatos = this;
            strHtmlTbody +=
                '<tr onclick="PintarTr($(this))">' +
                '<td align="center">' + (i + 1) + '</td>' +
                '<td align="center" title="' + this.Conductor + '" style="max-width:400px;">' +
                '<div style="width:100%; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;text-align:left">' + this.Conductor + '</div>' +
                '</td>' +
                '<td align="left" title="' + titleUnidades + '" class="infoTool" style="width: 90px; cursor: pointer"><div style="width:100%; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;">' + unidad + '</div></td>';


            //Cuerpo reporte 116 imprimir
            strHtmlTbody2 +=
                '<tr>' +
                '<td align="center">' + (i + 1) + '</td>' +
                '<td align="center" title="' + this.Conductor + '" style="max-width:400px;">' +
                '<div style="width:100%; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;text-align:left">' + this.Conductor + '</div>' +
                '</td>' +
                '<td align="left" title="' + this.Unidades + '" style="width: 90px"><div style="width:100%; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;">' + this.Unidades + '</div></td>';
            /***************************************************************************************************************************/

            $.each(jsonCabeceraDinamica, function () {

                totalVueltas += Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[0]));
                totalBoletos += Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[1]));
                totalProduccion += Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[2]));

                if (Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[0])) != 0) {
                    diasOperativos++;
                }
                strHtmlTbody += '<td class="text-right importe" style="mso-number-format:0\.00" data-contenido="' + (objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? 0 : (objDatos[this.ColumnaFecha].split('|')[0] == null || objDatos[this.ColumnaFecha].split('|')[0] == '' ? 0 : objDatos[this.ColumnaFecha].split('|')[0])) + '">' + Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : (objDatos[this.ColumnaFecha].split('|')[0] == null || objDatos[this.ColumnaFecha].split('|')[0] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[0]))).toFixed(1) + '</td>' +
                    '<td class="text-right importe" data-contenido="' + Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? 0 : objDatos[this.ColumnaFecha].split('|')[1]).toFixed(0) + '">' + Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? 0 : objDatos[this.ColumnaFecha].split('|')[1]).toFixed(0) + '</td>' +
                    '<td class="text-right importe" style="mso-number-format:0\.00" data-contenido="' + (objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? 0 : (objDatos[this.ColumnaFecha].split('|')[2] == null || objDatos[this.ColumnaFecha].split('|')[2] == '' ? 0 : objDatos[this.ColumnaFecha].split('|')[2])) + '">' + Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : (objDatos[this.ColumnaFecha].split('|')[2] == null || objDatos[this.ColumnaFecha].split('|')[2] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[2]))).toFixed(2) + '</td>';

                const columnaFecha = [null, ''].includes(objDatos[this.ColumnaFecha]) ? '' : objDatos[this.ColumnaFecha];
                const vueltas = columnaFecha == '' ? '' : [null, '', '0.0'].includes(objDatos[this.ColumnaFecha].split('|')[0]) ? '' : objDatos[this.ColumnaFecha].split('|')[0];
                const pasaje = columnaFecha == '' ? '' : [null, '', '0.0'].includes(objDatos[this.ColumnaFecha].split('|')[1]) ? '' : Number(objDatos[this.ColumnaFecha].split('|')[1]).toFixed(0);
                const importe = columnaFecha == '' ? '' : [null, '', '0.0'].includes(objDatos[this.ColumnaFecha].split('|')[2]) ? '' : Number(objDatos[this.ColumnaFecha].split('|')[2]).toFixed(2);

                ////Cuerpo reporte 116 imprimir
                strHtmlTbody2 += '<td align="right" class="text-right importe" style="mso-number-format:0\.00" >' + vueltas + '</td>' +
                    '<td align="right" class="text-right importe" >' + pasaje + '</td>' +
                    '<td align="right" class="text-right importe" style="mso-number-format:0\.00" >' + importe + '</td>';
                ///***************************************************************************************************************************/

            });



            strHtmlTbody += '<td  class="text-right importe" style="border-left: 3px solid #6098b9; mso-number-format:0\.00" data-contenido="' + totalVueltas.toFixed(1) + '">' + totalVueltas.toFixed(1) + '</td>' +
                '<td  class="text-right importe" style="mso-number-format:0\.00" data-contenido="' + totalBoletos + '">' + totalBoletos.toFixed(0) + '</td>' +
                '<td  class="text-right importe" style="mso-number-format:0\.00"  data-contenido="' + totalProduccion + '">' + totalProduccion.toFixed(2) + '</td>' +
                '<td  class="text-right cantidad" data-contenido="' + diasOperativos + '">' + diasOperativos + '</td>';
            strHtmlTbody += '</tr>';

            //Cuerpo reporte 116 imprimir
            strHtmlTbody2 += '<td align="right" class="text-right importe" style="border-left: 3px solid #6098b9; mso-number-format:0\.00" >' + totalVueltas.toFixed(1) + '</td>' +
                '<td align="right" class="text-right importe" >' + totalBoletos + '</td>' +
                '<td align="right" class="text-right importe" style="mso-number-format:0\.00" >' + totalProduccion.toFixed(2) + '</td>' +
                '<td align="right" class="text-right cantidad" >' + diasOperativos + '</td>';

            strHtmlTbody2 += '</tr>';
            /***************************************************************************************************************************/

            totalVueltas = 0;
            totalBoletos = 0;
            totalProduccion = 0;
            diasOperativos = 0;
        });
        $('#tbrp' + codigoReporte + ' tbody').append(strHtmlTbody);
        $('#Rp' + codigoReporte + 'Imp tbody').append(strHtmlTbody2);
        $('#iframeReporteRP' + codigoReporte + '').addClass('hidden');

        //var sumaTotalCantidades = ObjUtil.InicializarArreglo((jsonCabeceraDinamica.length + 7), 0); //inicializando de ceros al array que contendra los totalizados.
        //console.log(jsonCabeceraDinamica.length);
        var sumalTotalMontos = ObjUtil.InicializarArreglo(((jsonCabeceraDinamica.length * 3) + 7), 0);
        var sumaTotalCantidades = ObjUtil.InicializarArreglo((1), 0);
        /****************************** ***************************************/

        //$('#tbrp116 > tbody  > tr').each(function () {
        //    $(this).find('.cantidad').each(function (i) {
        //        sumaTotalCantidades[i] += Number($(this).text());
        //    });
        //});

        $('#tbrp' + codigoReporte + ' > tbody  > tr').each(function () {
            $(this).find('.importe').each(function (i) {
                sumalTotalMontos[i] += Number($(this).attr('data-contenido'));
            });
        });

        $('#tbrp' + codigoReporte + ' > tbody  > tr').each(function () {
            $(this).find('.cantidad').each(function (i) {
                sumaTotalCantidades[i] += Number($(this).attr('data-contenido'));
            });
        });

        var cantidadDeFilasEnTabla = $("#tbrp" + codigoReporte + " tbody tr:nth-child(2) td").length;
        var rwfoot = '';


        rwfoot += '<tr>';

        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    rwfoot += '<th ></th>';
                    break;
                case 1:
                    rwfoot += '<th></th>';
                    break;
                case 2:
                    rwfoot += '<th></th>';
                    break;
                case (cantidadDeFilasEnTabla - 1):
                    rwfoot += "<th class='text-right cantidad' style='text-align: right;'></th>";
                    break;
                default:
                    rwfoot += "<th class='text-right " + (j % 2 == 0 ? 'monto' : 'monto') + "' style='text-align: right;" + (j % 2 != 0 ? 'mso-number-format:0.00' : 'mso-number-format:0.00') + "' ></th>";
                    break;
            }
        }
        rwfoot += '</tr>';
        $("#tbrp" + codigoReporte + " tfoot").append(rwfoot);

        var totalProdImp;
        var i = 0;
        var j = 1;
        var FactorSuma = 3;
        var ImporteTotal = 0;
        $("#tbrp" + codigoReporte + " tfoot th.monto").each(function (count) { // agregando totales de importes
            ImporteTotal = 0;
            if (count == i) {
                ImporteTotal = sumalTotalMontos[count];
                i += FactorSuma;
                $(this).html(Number(ImporteTotal).toFixed(1));
            } else if (count == j) {
                ImporteTotal = sumalTotalMontos[count];
                j += FactorSuma;
                $(this).html(Number(ImporteTotal));
            } else {
                ImporteTotal = sumalTotalMontos[count];
                $(this).html(Number(ImporteTotal).toFixed(2));
            }

            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        $("#tbrp" + codigoReporte + " tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count]);
        });

        //foot para imprimir 
        var Rp116Impfoot = '';

        Rp116Impfoot += '<tr>';

        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    Rp116Impfoot += '<th ></th>';
                    break;
                case 1:
                    Rp116Impfoot += '<th></th>';
                    break;
                case 2:
                    Rp116Impfoot += '<th></th>';
                    break;
                case (cantidadDeFilasEnTabla - 1):
                    Rp116Impfoot += "<th class='text-right cantidad' style='text-align: right;'></th>";
                    break;
                default:
                    Rp116Impfoot += "<th class='text-right " + (j % 2 == 0 ? 'monto' : 'monto') + "' style='text-align: right;" + (j % 2 != 0 ? 'mso-number-format:0.00' : 'mso-number-format:0.00') + "' ></th>";
                    break;
            }
        }

        Rp116Impfoot += '</tr>';
        $("#Rp" + ' + codigoReporte + ' + "Imp tfoot").append(Rp116Impfoot);

        var totalProdImp;
        var i = 0;
        var j = 1;
        var FactorSuma = 3;
        var ImporteTotal = 0;
        $("#Rp" + codigoReporte + "Imp tfoot th.monto").each(function (count) { // agregando totales de importes
            //
            ImporteTotal = 0;
            if (count == i) {
                ImporteTotal = sumalTotalMontos[count];
                i += FactorSuma;
                $(this).html(Number(ImporteTotal).toFixed(1));
            } else if (count == j) {
                ImporteTotal = sumalTotalMontos[count];
                j += FactorSuma;
                $(this).html(Number(ImporteTotal));
            } else {
                ImporteTotal = sumalTotalMontos[count];
                $(this).html(Number(ImporteTotal).toFixed(2));
            }
            $(this).html(ImporteTotal);
            //
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        $("#Rp" + codigoReporte + "Imp tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count]);
        });

        var totalProdImp;
        $("#Rp" + codigoReporte + "Imp tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        //*********************
        $('.infoTool').tooltipster({
            multiple: true,
            contentAsHTML: true
        })

        ObjUtil.DesbloquearPantalla();
    });
}

function cargarSelectPadronRP117() {
    var UrlGeneral = NombreAplicacion + '/GeneralPost/ProcGeneralPost';
    Data = {
        Procedimiento: "ProcUnidadV2",
        Parametro: $('#selectRuta117').val(),
        Indice: 14
    }
    $.getJSON(UrlGeneral, Data, function (Datos) {
        $('#selectPadron117').empty();
        $('#selectPadron117').append('<option value="0">--TODOS--</option>');
        jsonData = Datos['dt0'];
        $.each(jsonData, function () {
            $('#selectPadron117').append('<option value="' + this.CodUnidad + '"> ' + this.PadronUnidad + '</option>');
        })
        $('#selectPadron117').select2();
    });
}

function RutaPadron() {
    let selectRuta = document.getElementById('selectRuta117');
    selectRuta.addEventListener('change', () => cargarSelectPadronRP117());
}

function cargarRP117() {
    var UrlGeneral = NombreAplicacion + '/GeneralPost/ProcGeneralPost';
    Data = {
        Procedimiento: "ProcSalidaReporteV3",
        Parametro: $('#selectRuta117').val() + '|' + $('#selectPadron117').val() + '|' + $('.datetimeRP117 ').val() + '|' + $('#busquedaFin117').val()+'|'+$('#selSituacion117').val(),
        Indice: 15
    }
    $.getJSON(UrlGeneral, Data, function (Datos) {
        $('#tbrp117 caption').empty();
        $('#tbrp117 thead').empty();
        $('#tbrp117 tbody').empty();
        $('#tbrp117 tfoot').empty();
        $('#Rp117Imp thead').empty();
        $('#Rp117Imp tbody').empty();
        $('#Rp117Imp tfoot').empty();

        var jsonData = Datos['dt0'];
        var jsonCabecera = Datos['dt1'];
        var strCabecera = '';
        var strCuerpo = '';
        var strFoot = '';
        var totalBoletos = 0;
        var totalProduccion = 0;
        var strCabecera2 = '';
        var strCuerpo2 = '';
        var strFoot2 = '';
        console.log(jsonData)

        if (jsonData?.length == 0) {
            $('#tbrp117 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }
        strCabecera = '<tr>' +
            '<th style="width: 50px">N</th>' +
            '<th style="width: 150px">PAD</th>' +
            '<th style="width: 80px">PLACA</th>';

        $.each(jsonCabecera, function (i) {
            strCabecera += `<th style="text-align: right"> ${this.FechaTransaccion ? this.FechaTransaccion : ''} </th>`;
        })

        strCabecera += '<th style="text-align: right">TOTAL</th>' +
            '</tr>';


        strCabecera2 = '<tr>' +
            '<th align="left" style="width: 50px">N</th>' +
            '<th align="left" style="width: 150px">PAD</th>' +
            '<th align="left" style="width: 80px; white-space: nowrap">PLACA</th>';

        $.each(jsonCabecera, function (i) {
            strCabecera2 += '<th align="right">' + this.FechaTransaccion + '</th>';
        })

        strCabecera2 += '<th align="right">TOTAL</th>' +
            '</tr>';

        $('#tbrp117 thead').append(strCabecera);
        $('#Rp117Imp thead').append(strCabecera2);

        $.each(jsonData, function (i) {
            var obj = this;
            var totalFila = 0;
            var totalFila2 = 0;
            strCuerpo += '<tr>' +
                '<td>' + (i + 1) + '</td>' +
                '<td>' + this.PadronUnidad + '</td>' +
                '<td style=" white-space: nowrap">' + this.PlacaUnidad + '</td>';
            $.each(jsonCabecera, function (j) {
                strCuerpo += '<td class="monto" style="text-align: right">' + Number(obj[this.FechaTransaccion]).toFixed(2) + '</td>';
                totalFila += (obj[this.FechaTransaccion] == '' || obj[this.FechaTransaccion] == null ? Number(0) : Number(obj[this.FechaTransaccion]))
            })

            strCuerpo += '<td class="monto" style="text-align: right">' + Number(totalFila).toFixed(2) + '</td>' +
                '</tr>';

            strCuerpo2 += '<tr>' +
                '<td>' + (i + 1) + '</td>' +
                '<td>' + this.PadronUnidad + '</td>' +
                '<td>' + this.PlacaUnidad + '</td>';

            $.each(jsonCabecera, function (j) {
                strCuerpo2 += '<td class="monto" style="text-align: right">' + Number(obj[this.FechaTransaccion]).toFixed(2) + '</td>';
                totalFila2 += (obj[this.FechaTransaccion] == '' || obj[this.FechaTransaccion] == null ? Number(0) : Number(obj[this.FechaTransaccion]))
            })
            strCuerpo2 += '<td class="monto" style="text-align: right">' + Number(totalFila2).toFixed(2) + '</td>' +
                '</tr>';

        })

        $('#tbrp117 tbody').append(strCuerpo);
        $('#Rp117Imp tbody').append(strCuerpo2);

        var sumalTotalMontos = ObjUtil.InicializarArreglo((jsonCabecera.length + 3), 0);

        $('#tbrp117 > tbody  > tr').each(function () {
            $(this).find('.monto').each(function (i) {
                sumalTotalMontos[i] += Number($(this).text());
            });
        });

        var cantidadDeFilasEnTabla = $("#tbrp117 tbody tr:nth-child(2) td").length;
        var rwfoot = '';

        rwfoot += '<tr>';

        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    rwfoot += '<th></th>';
                    break;
                case 1:
                    rwfoot += '<th></th>';
                    break;
                case 2:
                    rwfoot += '<th></th>';
                    break;
                default:
                    rwfoot += "<th class='text-right monto' style='text-align: right; mso-number-format:0.00' ></th>";
                    break;
            }
        }
        rwfoot += '</tr>';
        $("#tbrp117 tfoot").append(rwfoot);
        $("#Rp117Imp tfoot").append(rwfoot);

        var totalProdImp;

        $("#tbrp117 tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        $("#Rp117Imp tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        //***********************        

        ObjUtil.DesbloquearPantalla();
    })
}

function cargarRP118() {
    var UrlGeneral = NombreAplicacion + '/GeneralPost/ProcGeneralPost';
    Data = {
        Procedimiento: "ProcRecaudoReportesV3",
        Parametro: $('.datetimeRP118').val() + '|' + $('#busquedaFin118').val() + '|' + $('#selectRuta118').val(),
        Indice: 10
    }

    $.getJSON(UrlGeneral, Data, function (Datos) {

        $('#tbrp118 caption').empty();
        $('#tbrp118 thead').empty();
        $('#tbrp118 tbody').empty();
        $('#tbrp118 tfoot').empty();

        $('#Rp118Imp thead').empty();
        $('#Rp118Imp tbody').empty();
        $('#Rp118Imp tfoot').empty();

        var jsonData = Datos['dt0'];
        var jsonCabeceraDinamica = Datos['dt1'];

        var strCabecera = '';
        var strCuerpo = '';
        var strFoot = '';

        var totalBoletos = 0;
        var totalProduccion = 0;

        var strCabecera2 = '';
        var strCuerpo2 = '';
        var strFoot2 = '';

        if (jsonData.length == 0) {
            $('#tbrp118 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }

        strCabecera = '<tr>' +
            '<th style="width: 30px">N</th>' +
            '<th style="width: 155px; text-align: center;">TDOC-SERIE-NUM</th>' +
            '<th >FECHA</th>' +
            '<th >F.PROD.</th>' +
            '<th >RUTA</th>' +
            '<th style="width:115px">USUARIO</th>' +
            '<th style="width:135px">SUCURSAL</th>' +
            '<th style="width:150px">UNIDAD</th>' +
            '<th >CONDUCTOR</th>' +
            '<th >DNI</th>';


        $.each(jsonCabeceraDinamica, function (i) {
            strCabecera += '<th style="text-align:right;" >' + this.NomArticulo.replace(/ /gi, '.') + '</th>';
        });

        strCabecera += '<th style="text-align:right;">TOTAL</th>' +
            '</tr>';

        strCabecera2 = '<tr>' +
            '<th width="30px" style="width: 50px; text-align: left" >N</th>' +
            '<th width="200px" style="text-align: center;">TDOC-SERIE-NUM</th>' +
            '<th width="50px" style="text-align: left">FECHA</th>' +
            '<th width="50px" style="text-align: left">F.PROD.</th>' +
            '<th width="50px" style="text-align: center">RUTA</th>' +
            '<th width="50px" style="text-align: left">USUARIO</th>' +
            '<th width="150px" style="text-align: left">SUCURSAL</th>' +
            '<th width="100px" style="text-align: left">UNIDAD</th>' +
            '<th width="350px" style="text-align: left">CONDUCTOR</th>' +
            '<th width="50px" style="text-align: left">DNI</th>';


        $.each(jsonCabeceraDinamica, function (i) {
            strCabecera2 += '<th width="50px" style="text-align:right;" >' + this.NomArticulo.replace(/ /gi, '.') + '</th>';
        });

        strCabecera2 += '<th width="50px" style="text-align:right;">TOTAL</th>' +
            '</tr>';

        $('#tbrp118 thead').append(strCabecera);
        $('#Rp118Imp thead').append(strCabecera2);

        $.each(jsonData, function (i) {
            var objDatos = this;
            strCuerpo += '<tr>' +
                '<td>' + (i + 1) + '</td>' +
                '<td style="text-align: center;">' + this.Documento + '</td>' +
                '<td>' + this.Fecha + '</td>' +
                '<td>' + this.FechaProduccion + '</td>' +
                '<td>' + this.NomRuta + '</td>' +
                '<td title="' + this.NomUsuario + '" style="width:115px"><div style="width:110px; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;">' + this.NomUsuario + '</div></td>' +
                '<td title="' + this.NomSucursal + '" style="width:115px"><div style="width:110px; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;">' + this.NomSucursal + '</div></td>' +
                '<td title="' + this.NomUnidad + '" style="width:150px"><div style="width:145px; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;">' + this.NomUnidad + '</div></td>' +
                '<td>' + this.NomConductor + '</td>' +
                '<td>' + this.NroDocumento + '</td>';

            $.each(jsonCabeceraDinamica, function () {
                strCuerpo += '<td class="text-right importe" >' + Number(objDatos[this.NomArticulo]).toFixed(2) + '</td>';
            });

            strCuerpo += '<td class="text-right importe">' + Number(this.MontoTotalRecaudo).toFixed(2) + '</td>' +
                '</tr>'

            strCuerpo2 += '<tr>' +
                '<td >' + (i + 1) + '</td>' +
                '<td style="text-align: center;">' + this.Documento + '</td>' +
                '<td>' + this.Fecha + '</td>' +
                '<td>' + this.FechaProduccion + '</td>' +
                '<td align="center">' + this.NomRuta + '</td>' +
                '<td>' + this.NomUsuario + '</div></td>' +
                '<td>' + this.NomSucursal + '</div></td>' +
                '<td>' + this.NomUnidad + '</div></td>' +
                '<td>' + this.NomConductor + '</td>' +
                '<td>' + this.NroDocumento + '</td>';

            $.each(jsonCabeceraDinamica, function () {
                strCuerpo2 += '<td align="right" class="text-right importe" >' + Number(objDatos[this.NomArticulo]).toFixed(2) + '</td>';
            });

            strCuerpo2 += '<td align="right" class="text-right importe">' + Number(this.MontoTotalRecaudo).toFixed(2) + '</td>' +
                '</tr>'


        })

        $('#tbrp118 tbody').append(strCuerpo);
        $('#Rp118Imp tbody').append(strCuerpo2);
        $('#iframeReporteRP118').addClass('hidden');

        var sumalTotalMontos = ObjUtil.InicializarArreglo((jsonCabeceraDinamica.length + 10), 0);

        /****************************** ***************************************/

        $('#tbrp118 > tbody  > tr').each(function () {
            $(this).find('.importe').each(function (i) {
                sumalTotalMontos[i] += Number($(this).text());
            });
        });



        var cantidadDeFilasEnTabla = $("#tbrp118 tbody tr:nth-child(2) td").length;
        var rwfoot = '';


        rwfoot += '<tr>';
        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    rwfoot += '<th></th>';
                    break;
                case 1:
                    rwfoot += '<th></th>';
                    break;
                case 2:
                    rwfoot += '<th></th>';
                    break;
                case 3:
                    rwfoot += '<th></th>';
                    break;
                case 4:
                    rwfoot += '<th></th>';
                    break;
                case 5:
                    rwfoot += '<th></th>';
                    break;
                case 6:
                    rwfoot += '<th></th>';
                    break;
                case 7:
                    rwfoot += '<th></th>';
                    break;
                case 8:
                    rwfoot += '<th></th>';
                    break;
                case 9:
                    rwfoot += '<th></th>';
                    break;
                default:
                    rwfoot += "<th class='text-right importe' style='text-align: right;mso-number-format:0.00' ></th>";
                    break;
            }
        }
        rwfoot += '</tr>';
        $("#tbrp118 tfoot").append(rwfoot);
        $("#Rp118Imp tfoot").append(rwfoot);

        $("#tbrp118 tfoot th.importe").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        $("#Rp118Imp tfoot th.importe").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        ObjUtil.DesbloquearPantalla();
    })
}

function cargarRP119() { //ejecuta reporte 119
    var UrlGeneral = NombreAplicacion + '/GeneralPost/ProcGeneralPost';
    Data = {
        Procedimiento: "ProcRecaudoReportesV3",
        Parametro: $('.datetimeRP119').val() + '|' + $('#txtLado119').val() + '|' + $('#selectRuta119 ').val(),
        Indice: 11
    }

    $.post(UrlGeneral, Data, function (Datos) {
        var dataRpta = Datos['dt0'];
        $('#tbrp119 caption').empty();
        $('#tbrp119 thead').empty();
        $('#tbrp119 tbody').empty();
        $('#tbrp119 tfoot').empty();

        //$('#Rp118Imp thead').empty();
        //$('#Rp118Imp tbody').empty();


        var strCabecera = '<tr>' +
            //'<th align="left" style="width: 30px">N</th>' +
            //'<th  align="left"  >RUTA</th>' +
            //'<th align="left" style="width: 155px; text-align: left;">FECHA</th>' +
            //'<th  align="left"  >H.SALIDA</th>' +
            //'<th  align="left"  >IF</th>' +
            //'<th  align="left"  >UNIDAD</th>' +
            //'<th align="left" >CONDUCTOR</th>' +
            //'<th align="right"  style="width:115px">PRODUCCIÓN</th>' +
            '<th align="left" style="width: 30px">N</th>' +
            '<th align="left" style="width: 155px; text-align: left;">FECHA</th>' +
            '<th  align="left"  >RUTA</th>' +
            '<th  align="left"  >LADO</th>' +
            '<th  align="left"  >PADRON</th>' +
            '<th  align="left"  >PLACA</th>' +
            '<th  align="left"  title="HoraSalida">H.Salida</th>' +
            '<th  align="left"  >IF</th>' +
            '<th align="left" >CONDUCTOR</th>' +
            '<th align="right"  style="width:115px">PRODUCCIÓN</th>' +
            '</tr>';
        $('#tbrp119 thead').append(strCabecera);
        var strHTMLtabla = '';
        //console.log("--->", dataRpta)
        if (dataRpta.length == 0) {
            $('#tbrp119 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }
        var sumatoriaProduccion = 0;///thi.ProduccionViaje 
        $.each(dataRpta, function (i) {
            strHTMLtabla += '<tr>' +
                '<td>' + (i + 1) + '</td>' +
                '<td  align="left"  >' + this.Fecha + '</td>' +
                '<td  align="left"  >' + this.NomRuta + '</td>' +
                '<td  align="left" >' + this.Lado + '</td>' +
                '<td  align="left" >' + this.Padron + '</td>' +
                '<td  align="left" >' + this.Unidad + '</td>' +
                '<td  align="left" >' + this.HoraSalida + '</td>' +
                '<td  align="left" >' + this.IntervaloFrecuencia + '</td>' +
                '<td>' + this.Conductor + '</td>' +
                '<td align="right" class="text-right">' + (!this.ProduccionViaje ? '0.00' : this.ProduccionViaje.toFixed(2)) + '</td>' +
                '</tr>';
            sumatoriaProduccion += (!this.ProduccionViaje ? 0 : Number(this.ProduccionViaje.toFixed(2)));
        });

        $('#tbrp119 tbody').append(strHTMLtabla);
        $('#tbrp119 tfoot').append('<tr>' +
            '<th colspan="9"></th>' +
            '<th style="text-align:right">' + sumatoriaProduccion.toFixed(2) + '</th>' +
            '</tr>');
        ObjUtil.DesbloquearPantalla();
    }, 'JSON');
}

function cargarRP120() {

    var UrlGeneral = NombreAplicacion + '/GeneralPost/ProcGeneralPost';

    Data = {
        Procedimiento: "ProcSalidaReporteV3",
        //Parametro: $('.datetimeRP119').val() + '|' + $('#txtLado119').val(),
        Parametro: $('.datetimeRP120').val() + '|' + $('#selectRuta120').val(),
        Indice: 10
    }

    $.post(UrlGeneral, Data, function (Datos) {
        var dataRpta = Datos['dt0'];
        var dataResumen = Datos['dt1'][0];
        var dataResumenViajes = Datos['dt2'];
        //
        $('#tbrp120 caption').empty();
        $('#tbrp120 thead').empty();
        $('#tbrp120 tbody').empty();
        $('#tbrp120 tfoot').empty();

        ////$('#Rp118Imp thead').empty();
        ////$('#Rp118Imp tbody').empty();
        var strCabecera = '<tr>' +
            '<th align="left" style="width: 20px;text-align:left;"  >N</th>' +
            '<th align="left" style="width: 60px; text-align: left;">PAD</th>' +
            '<th align="left" style="width: 100px; text-align: left;">PLACA</th>' +
            '<th  align="right" style="width:80px;text-align: right;"  >VIAJES</th>' +
            '<th  align="left" style="width:80px;text-align:right;"  >PASAJEROS</th>' +
            '<th align="left" style="width:80px;text-align:right"   >PRODUCCIÓN</th>' +
            '<th align="right" style="width:80px"  >H.INICIO</th>' +
            '<th align="right"  style="width:80px" >H.FIN</th>' +
            '<th align="right"  style="width:80px" >H.OPERADAS</th>' +
            '<th align="right" style="text-align:right;"  >CONDUCTOR</th>' +
            '</tr>';
        $('#tbrp120 thead').append(strCabecera);


        var strHTMLtabla = '';

        //console.log("--->", dataRpta)
        if (dataRpta.length == 0) {
            $('#tbrp120 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }
        var totalViajes = 0;
        var totalProduccion = 0;
        var totalPasajeros = 0;
        $.each(dataRpta, function (i) {
            strHTMLtabla += '<tr>' +
                '<td align="left" style="text-align:left;">' + (i + 1) + '</td>' +
                '<td  align="left"  >' + this.PadronUnidad + '</td>' +
                '<td  align="left"  >' + this.PlacaUnidad + '</td>' +
                '<td  align="right" style="text-align:right;"  >' + this.Viajes + '</td>' +
                '<td  align="right" style="text-align:right;" >' + (!this.Pasajeros ? '' : this.Pasajeros) + '</td>' +
                '<td  align="right" style="text-align:right;">' + (!this.Produccion ? '' : this.Produccion.toFixed(2)) + '</td>' +
                '<td align="right" style="text-align:right;">' + this.HoraInicio + '</td>' +
                '<td align="right" style="text-align:right;">' + this.HoraFin + '</td>' +
                '<td align="right" style="text-align:right;" >' + this.HorasOperadas + '</td>' +
                '<td  style="text-align:right;"  >' + this.Conductor + '</td>' +
                '</tr>';
            totalViajes += Number(this.Viajes);
            totalPasajeros += Number(this.Pasajeros);
            totalProduccion += Number(this.Produccion);
        });
        $('#tbrp120 tbody').append(strHTMLtabla);

        //totales
        var strHTMLtfoot = '';
        strHTMLtfoot += '<tr>' +
            '<th colspan="3">TOTALES</th>' +
            '<th style="text-align:right;" >' + totalViajes + '</th>' +
            '<th style="text-align:right;" >' + totalPasajeros + '</th>' +
            '<th style="text-align:right;" >' + totalProduccion.toFixed(2) + '</th>' +
            '<th></th>' +
            '<th></th>' +
            '<th></th>' +
            '<th></th>' +
            '</tr>';
        $('#tbrp120 tfoot').append(strHTMLtfoot);

        /*********************** Resumen DATA **************************************/
        $('#tbresumen120 tbody').empty();
        var flotaTotal = dataResumen.FlotaTotal;
        var flotaOperativa = dataResumen.FlotaOperativa;
        var flotaInoperativa = dataResumen.FlotaInoperativa;
        var promPasajeroUnidad = dataResumen.PromedioPasajerosUnidad;
        var promProduccionUnidad = dataResumen.PromedioProduccionUnidad;
        var promViajeUnidad = dataResumen.PromedioViajesUnidad;

        /****************************** %(CALCULO PORCENTAJES) **************************/
        var porcentajeOperativa = (flotaTotal == 0 ? 0 : (Number(flotaOperativa) * 100) / flotaTotal);
        var porcentajeInoperativa = (flotaTotal == 0 ? 0 : (Number(flotaInoperativa) * 100) / flotaTotal);

        var strHTMLresumen = '<tr>' +
            '<th style="text-align:center;" colspan="3" >RESUMEN FLOTA</th>' +
            '</tr>';


        strHTMLresumen += '<tr>' +
            '<td><strong>Flota total</strong></td>' +
            '<td style="text-align:right" >' + flotaTotal + '</td>' +
            '<td style="text-align:right" >100 %</td>' +
            '</tr>';
        //
        strHTMLresumen += '<tr>' +
            '<td><strong>Flota operativa</strong></td>' +
            '<td style="text-align:right" >' + flotaOperativa + '</td>' +
            '<td style="text-align:right;width:90px;">' + porcentajeOperativa.toFixed(2) + ' %</td>' +
            '</tr>';
        //
        strHTMLresumen += '<tr>' +
            '<td><strong>Flota inoperativa</strong></td>' +
            '<td style="text-align:right" >' + flotaInoperativa + '</td>' +
            '<td style="text-align:right;width:90px;" >' + porcentajeInoperativa.toFixed(2) + ' %</td>' +
            '</tr>';
        //
        var totalViajesParaPromedio = 0
        $.each(dataResumenViajes, function () {
            totalViajesParaPromedio += Number(this.Unidades);
        });

        strHTMLresumen += '<tr>' +
            '<th style="text-align:center;" colspan="3" >RESUMEN VIAJES</th>' +
            '</tr>';

        var strResumenViajes = '';
        $.each(dataResumenViajes, function () {
            var porcentajeViajes = (Number(this.Unidades) * 100) / totalViajesParaPromedio;

            strHTMLresumen += '<tr>' +
                '<td><strong>UNDS ' + this.Viajes + ' VLTAS </strong></td>' +
                '<td style="text-align:right">' + this.Unidades + '</td>' +
                '<td style="text-align:right">' + porcentajeViajes.toFixed(2) + ' %</td>' +
                '</tr>';
        });
        //
        strHTMLresumen += '<tr>' +
            '<th style="text-align:center;" colspan="3" >PROMEDIOS</th>' +
            '</tr>';

        strHTMLresumen += '<tr>' +
            '<td><strong>Prom pasajero unidad</strong></td>' +
            '<td></td>' +
            '<td style="text-align:right">' + promPasajeroUnidad + '</td>' +
            '</tr>';
        //
        strHTMLresumen += '<tr>' +
            '<td><strong>Prom Producción Unidad</strong></td>' +
            '<td></td>' +
            '<td style="text-align:right">' + promProduccionUnidad + '</td>' +
            '</tr>';
        //
        strHTMLresumen += '<tr>' +
            '<td><strong>Prom viaje unidad</strong></td>' +
            '<td></td>' +
            '<td style="text-align:right">' + promViajeUnidad + '</td>' +
            '</tr>';

        $('#tbresumen120 tbody').append(strHTMLresumen + strResumenViajes);
        ObjUtil.DesbloquearPantalla();
    }, 'JSON');
}

function cargarRP121() {

    var UrlGeneral = NombreAplicacion + '/GeneralPost/ProcGeneralPost';
    //
    Data = {
        Procedimiento: "ProcSalidaReporteV3",
        Parametro: $('.datetimeRP121').val() + '|' + $('#selectRuta121').val() + '|' + $('#txtLado121').val(),
        Indice: 11
    }

    //
    $.post(UrlGeneral, Data, function (Datos) {
        var dataRpta = Datos['dt0'];
        $('#tbrp121 caption').empty();
        $('#tbrp121 thead').empty();
        $('#tbrp121 tbody').empty();

        var strCabecera = '<tr>' +
            '<th align="left" style="width: 20px;text-align:left;">N</th>' +
            '<th align="left" style="width: 60px; text-align: left;">PAD</th>' +
            '<th align="left" style="width: 100px; text-align: left;">PLACA</th>' +
            '<th  align="left" style="width:100px"  >H.INICIO</th>' +
            '<th  align="left" style="width:100px"  >H.FIN</th>' +
            '<th align="left" style="width:100px" >IFC</th>' +
            '<th align="right" style="text-align:right;"  >CONDUCTOR</th>' +
            '<th align="right"  style="width:115px">ESTADO</th>' +
            '</tr>';
        $('#tbrp121 thead').append(strCabecera);

        var strHTMLtabla = '';
        //console.log("--->", dataRpta)
        if (dataRpta.length == 0) {
            $('#tbrp121 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }

        $.each(dataRpta, function (i) {
            strHTMLtabla += '<tr>' +
                '<td align="left" style="text-align:left;" >' + (i + 1) + '</td>' +
                '<td  align="left"  >' + this.PadronUnidad + '</td>' +
                '<td  align="left"  >' + this.PlacaUnidad + '</td>' +
                '<td  align="left" >' + this.HoraInicio + '</td>' +
                '<td  align="left" >' + (!this.HoraFin ? '' : this.HoraFin) + '</td>' +
                '<td>' + this.Ifc + '</td>' +
                '<td align="right">' + this.Conductor + '</td>' +
                '<td align="right" >' + this.NomEstado + '</td>' +
                '</tr>';
        });
        $('#tbrp121 tbody').append(strHTMLtabla);
        ObjUtil.DesbloquearPantalla();
    }, 'JSON');
}

function cargarRP122() {

    var UrlGeneral = NombreAplicacion + '/GeneralPost/ProcGeneralPost';
    //
    Data = {
        Procedimiento: "ProcReporteVelocidadControl",
        Parametro: $('.datetimeRP122').val() + '|' + $('#selectRuta122').val() + '|' + $('#txtLado122').val(),
        Indice: 10
    }

    //
    $.post(UrlGeneral, Data, function (Datos) {

        var jsonData = Datos['dt0'];
        var jsonCabecera = Datos['dt1'];
        $('#tbrp122 caption').empty();
        $('#tbrp122 thead').empty();
        $('#tbrp122 tbody').empty();

        var strCabecera = '<tr>' +
            '<th align="left" style="width: 20px;text-align:left;">N</th>' +
            '<th align="left" style="width: 60px; text-align: left;">PAD</th>' +
            '<th align="left" style="width: 100px; text-align: left;">PLACA</th>';
        $.each(jsonCabecera, function () {
            strCabecera += '<th align="center" style="width: 100px; text-align: center;white-space:nowrap">' + this.NomControl + '</th>';
        })

        strCabecera += '</tr>';

        $('#tbrp122 thead').append(strCabecera);

        var strHTMLtabla = '';

        if (jsonData.length == 0) {
            $('#tbrp122 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }

        $.each(jsonData, function (i) {
            var objDatos = this;
            strHTMLtabla += '<tr>' +
                '<td align="left" style="text-align:left;" >' + (i + 1) + '</td>' +
                '<td align="left"  style="white-space:nowrap">' + this.PadronUnidad + '</td>' +
                '<td align="left"  style="white-space:nowrap">' + this.PlacaUnidad + '</td>';
            $.each(jsonCabecera, function () {

                strHTMLtabla += '<td align="center" style="width: 100px; text-align: center;">' + (objDatos[this.NomControl] == undefined ? '' : objDatos[this.NomControl]) + '</td>';
            })

            strHTMLtabla += '</tr>';

        });

        $('#tbrp122 tbody').append(strHTMLtabla);
        ObjUtil.DesbloquearPantalla();
    }, 'JSON');
}

function cargarRP123() {

    var UrlGeneral = NombreAplicacion + '/GeneralPost/ProcGeneralPost';

    Data = {
        Procedimiento: "ProcSalidaReporteV3",
        //Parametro: $('.datetimeRP119').val() + '|' + $('#txtLado119').val(),
        Parametro: $('.datetimeRP123').val() + '|' + $('#busquedaFin123').val() + '|' + $('#selectRuta123').val(),
        Indice: 13
    }
    //
    $.post(UrlGeneral, Data, function (Datos) {

        var dataRpta = Datos['dt0'];
        var dataCabecera = Datos['dt1'];

        $('#tbrp123 caption').empty();
        $('#tbrp123 thead').empty();
        $('#tbrp123 tbody').empty();
        $('#tbrp123 tfoot').empty();

        var strCabecera = '<tr>' +
            '<th align="left" style="width: 20px">N</th>' +
            '<th align="left" style="width: 155px; text-align: left;">FECHA SALIDA</th>';
        $.each(dataCabecera, function (n, cabecera) {
            strCabecera += '<th style="text-align:right;" title="Viaje ' + cabecera.Viajes + '" >' + ' V' + cabecera.Viajes + '</th>';
        });

        strCabecera += '<th align="left" style="width:180px;text-align:right;" >TOTAL UNIDADES</th>' +
            '</tr>';

        $('#tbrp123 thead').append(strCabecera);
        var strHTMLtabla = '';
        //console.log("--->", dataRpta)

        if (dataRpta.length == 0) {
            $('#tbrp123 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }

        var totalViajesrp23 = 0;
        $.each(dataRpta, function (i, data) {
            strHTMLtabla += '<tr>' +
                '<td>' + (i + 1) + '</td>' +
                '<td  align="left" >' + data.FechaSalida + '</td>';
            $.each(dataCabecera, function (n, cabecera) {
                strHTMLtabla += '<td class="viaje' + '_' + (n + 1) + '" style="text-align:right;">' + data[Number(cabecera.Viajes)] + '</td>';
            });
            strHTMLtabla += '<td style="text-align:right;">' + data.TotalUnidades + '</td>';
            strHTMLtabla += '</tr>';
            totalViajesrp23 += Number(data.TotalUnidades);
        });
        $('#tbrp123 tbody').append(strHTMLtabla);
        /************** TFOOT ****************/
        var strHTMLtfoot = '';
        var viajeTotales = [];
        strHTMLtfoot += '<tr>'
        strHTMLtfoot += '<th></th>';
        strHTMLtfoot += '<th></th>';

        $.each(dataCabecera, function (n, cabecera) {
            var totalSumaViaje = 0;
            $.each($('.viaje_' + (n + 1)), function () {
                totalSumaViaje += Number($(this).text());
            });
            strHTMLtfoot += '<th style="text-align:right" >' + totalSumaViaje + '</th>';
        });
        strHTMLtfoot += '<th style="text-align:right" >' + totalViajesrp23 + '</th>';
        strHTMLtfoot += '</tr>'
        $('#tbrp123 tfoot').append(strHTMLtfoot);
        ObjUtil.DesbloquearPantalla();
    }, 'JSON');
}

function cargarRP124() {
    var UrlGeneral = NombreAplicacion + '/GeneralPost/ProcGeneralPost';

    Data = {
        Procedimiento: "ProcSalidaReporteV3",
        //Parametro: $('.datetimeRP119').val() + '|' + $('#txtLado119').val(),
        Parametro: $('.datetimeRP124').val() + '|' + $('#selectRuta124').val(),
        Indice: 12
    }
    //
    $.post(UrlGeneral, Data, function (Datos) {
        var dataRpta = Datos['dt0'];
        var dataResumenRP124 = Datos['dt1'];

        $('#tbrp124 caption').empty();
        $('#tbrp124 thead').empty();
        $('#tbrp124 tbody').empty();

        ////$('#Rp118Imp thead').empty();
        ////$('#Rp118Imp tbody').empty();
        var strCabecera = '<tr>' +
            '<th align="left" style="width: 20px">N</th>' +
            '<th align="left" style="width: 155px; text-align: left;">PADRÓN</th>' +
            '<th align="left" style="width: 155px; text-align: left;">PLACA</th>' +
            '<th  align="right" style="width:80px;text-align:right;"  >VIAJES</th>' +
            '</tr>';
        $('#tbrp124 thead').append(strCabecera);
        var strHTMLtabla = '';
        //
        if (dataRpta.length == 0) {
            $('#tbrp124 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }
        //
        $.each(dataRpta, function (i) {
            strHTMLtabla += '<tr>' +
                '<td>' + (i + 1) + '</td>' +
                '<td  align="left" >' + this.PadronUnidad + '</td>' +
                '<td  align="left" >' + this.PlacaUnidad + '</td>' +
                '<td  align="right" style="text-align:right" >' + this.Viajes + '</td>' +
                '</tr>';
        });
        $('#tbrp124 tbody').append(strHTMLtabla);

        /****************** RESUMEN  ***********************************/
        $('#tbresumen124 tbody').empty();
        var strHTMLresumen = '';

        strHTMLresumen += '<tr>' +
            '<th class="text-center;" colspan="2">RESUMEN FLOTA</th>' +
            '</tr>';

        strHTMLresumen += '<tr>' +
            '<td>Flota total</td>' +
            '<td style="text-align:right" >' + dataResumenRP124[0].FlotaTotal + '</td>' +
            '</tr>';

        strHTMLresumen += '<tr>' +
            '<td>Flota operativa</td>' +
            '<td style="text-align:right" >' + dataResumenRP124[0].FlotaOperativa + '</td>' +
            '</tr>';

        strHTMLresumen += '<tr>' +
            '<td>Flota inoperativa</td>' +
            '<td style="text-align:right" >' + dataResumenRP124[0].FlotaInoperativa + '</td>' +
            '</tr>';

        $('#tbresumen124 tbody').append(strHTMLresumen)
        ObjUtil.DesbloquearPantalla();
    }, 'JSON');
}

function cargarRP125() { // aun no se usa
    Ruta = NombreAplicacion + '/./ReporteBoleto/ProcBoletoTransaccionReporteV2';
    Data = {
        Parametro: $('.datetimeRP125').val() + '|' + $('#busquedaFin125').val() + '|' + $('#selectRuta125').val(),
        Indice: 125
    }

    $.getJSON(Ruta, Data, function (Datos) {

        var indiceTablas = 0;

        $('#tbrp125 caption').empty();
        $('#tbrp125 thead').empty();
        $('#tbrp125 tbody').empty();
        $('#tbrp125 tfoot').empty();

        $('#Rp125Imp thead').empty();
        $('#Rp125Imp tbody').empty();
        $('#Rp125Imp tfoot').empty();

        $.each(Datos, function (index, value) {
            indiceTablas++;
        });

        if (indiceTablas != 2) {
            $('#tbrp125 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }

        var jsonDatos = Datos['dt0'];
        var jsonCabeceraDinamica = Datos['dt1'];


        var strHtmlThead = '';
        var strHtmlThead2 = '';
        var posicionDinamico = 9;

        strHtmlThead += '<tr>';

        strHtmlThead += '<th rowspan="2" style="vertical-align: middle">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'PAD' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'UNIDAD' + '</th>';

        $.each(jsonCabeceraDinamica, function (i) {
            strHtmlThead += '<th colspan="3" title="' + this.ColumnaFecha + '" style="text-align:center;width: 300px" ><div  style="width:300px; white-space: nowrap; overflow:hidden; text-overflow: ellipsis; text-align: center">' + this.ColumnaFecha.replace(' ', '.'); + '</div></th>';
        });

        strHtmlThead += '<th rowspan="2" class="text-center" style="vertical-align: middle">T.VUEL.</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">T.CANT.B.</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">T.PROD</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">D.OPER</th>';

        strHtmlThead += '</tr>';

        /*********** armando segundo row **********************/
        strHtmlThead += '<tr>';

        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead += '<th title="Vueltas" class="text-right" >V</th><th title="Boletos" class="text-right" >BOL</th><th title="Importe" class="text-right" >IMP</th>';
        }

        strHtmlThead += '</tr>';

        //Cabecera del reporte 125 para imprimir
        strHtmlThead2 += '<tr>';

        strHtmlThead2 += '<th rowspan="2" style="vertical-align: middle">' + 'N' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'PAD' + '</th>' +
            '<th rowspan="2" style="vertical-align: middle">' + 'UNIDAD' + '</th>';

        $.each(jsonCabeceraDinamica, function (i) {
            strHtmlThead2 += '<th colspan="3" title="' + this.ColumnaFecha + '" style="text-align:center;" ><div  style="white-space: nowrap; overflow:hidden; text-overflow: ellipsis; text-align: center">' + this.ColumnaFecha.replace(' ', '.'); + '</div></th>';
        });

        strHtmlThead2 += '<th rowspan="2" class="text-center" style="vertical-align: middle">T.VUEL.</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">T.CANT.B.</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">T.PROD</th>' +
            '<th rowspan="2" class="text-center" style="vertical-align: middle">D.OPER</th>';

        strHtmlThead2 += '</tr>';

        /*********** armando segundo row imprimible **********************/
        strHtmlThead2 += '<tr>';

        for (var i = 0; i < jsonCabeceraDinamica.length; i++) {
            strHtmlThead2 += '<th title="Vueltas" class="text-right" align="right">V</th>' +
                '<th title="Boletos" class="text-right" align="right">BOL</th>' +
                '<th title="Importe" class="text-right" align="right">IMP</th>';
        }

        strHtmlThead2 += '</tr>';





        $('#tbrp125 thead').append(strHtmlThead);
        $('#Rp125Imp thead').append(strHtmlThead2);
        var strHtmlTbody;
        var strHtmlTbody2;
        var serviciosArr = [];
        var totalVueltas = 0;
        var totalBoletos = 0;
        var totalProduccion = 0;
        var diasOperativos = 0;


        $.each(jsonDatos, function (i) {

            var objDatos = this;
            strHtmlTbody +=
                '<tr>' +
                '<td>' + (i + 1) + '</td>' +
                '<td>' + this.PadronUnidad + '</td>' +
                '<td title="' + this.PlacaUnidad + '" style="width: 90px"><div style="width:100%; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;">' + this.PlacaUnidad + '</div></td>';


            //Cuerpo reporte 125 imprimir
            strHtmlTbody2 +=
                '<tr>' +
                '<td align="center">' + (i + 1) + '</td>' +
                '<td align="center">' + this.PadronUnidad + '</td>' +
                '<td align="center" title="' + this.PlacaUnidad + '" style="width: 90px"><div style="width:100%; white-space: nowrap; overflow:hidden; text-overflow: ellipsis;">' + this.PlacaUnidad + '</div></td>';
            /***************************************************************************************************************************/

            $.each(jsonCabeceraDinamica, function () {

                totalVueltas += Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[0]));
                totalBoletos += Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[1]));
                totalProduccion += Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[2]));

                if (Number(objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? Number(0) : Number(objDatos[this.ColumnaFecha].split('|')[0])) != 0) {
                    diasOperativos++;
                }

                strHtmlTbody += '<td class="text-right importe" style="mso-number-format:0\.00" >' + (objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? 0 : (objDatos[this.ColumnaFecha].split('|')[0] == null || objDatos[this.ColumnaFecha].split('|')[0] == '' ? 0 : objDatos[this.ColumnaFecha].split('|')[0])) + '</td>' +
                    '<td class="text-right importe" >' + (objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? 0 : objDatos[this.ColumnaFecha].split('|')[1]) + '</td>' +
                    '<td class="text-right importe" style="mso-number-format:0\.00" >' + (objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? 0 : (objDatos[this.ColumnaFecha].split('|')[2] == null || objDatos[this.ColumnaFecha].split('|')[2] == '' ? 0 : objDatos[this.ColumnaFecha].split('|')[2])) + '</td>';

                ////Cuerpo reporte 125 imprimir
                strHtmlTbody2 += '<td align="right" class="text-right importe" style="mso-number-format:0\.00" >' + (objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? 0 : (objDatos[this.ColumnaFecha].split('|')[0] == null || objDatos[this.ColumnaFecha].split('|')[0] == '' ? 0 : objDatos[this.ColumnaFecha].split('|')[0])) + '</td>' +
                    '<td align="right" class="text-right importe" >' + (objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? 0 : objDatos[this.ColumnaFecha].split('|')[1]) + '</td>' +
                    '<td align="right" class="text-right importe" style="mso-number-format:0\.00" >' + (objDatos[this.ColumnaFecha] == null || objDatos[this.ColumnaFecha] == '' ? 0 : (objDatos[this.ColumnaFecha].split('|')[2] == null || objDatos[this.ColumnaFecha].split('|')[2] == '' ? 0 : objDatos[this.ColumnaFecha].split('|')[2])) + '</td>';
                ///***************************************************************************************************************************/

            });



            strHtmlTbody += '<td  class="text-right importe" style="border-left: 3px solid #6098b9; mso-number-format:0\.00" >' + totalVueltas.toFixed(2) + '</td>' +
                '<td  class="text-right importe" style="mso-number-format:0\.00">' + totalBoletos + '</td>' +
                '<td  class="text-right importe" style="mso-number-format:0\.00" >' + totalProduccion.toFixed(2) + '</td>' +
                '<td  class="text-right importe" style="mso-number-format:0\.00" >' + diasOperativos + '</td>';

            strHtmlTbody += '</tr>';

            //Cuerpo reporte 125 imprimir
            strHtmlTbody2 += '<td align="right" class="text-right importe" style="border-left: 3px solid #6098b9; mso-number-format:0\.00" >' + totalVueltas.toFixed(2) + '</td>' +
                '<td align="right" class="text-right importe" >' + totalBoletos + '</td>' +
                '<td align="right" class="text-right importe" style="mso-number-format:0\.00" >' + totalProduccion.toFixed(2) + '</td>' +
                '<td align="right" class="text-right importe" style="mso-number-format:0\.00" >' + diasOperativos + '</td>';

            strHtmlTbody2 += '</tr>';
            /***************************************************************************************************************************/

            totalVueltas = 0;
            totalBoletos = 0;
            totalProduccion = 0;
            diasOperativos = 0;
        });
        $('#tbrp125 tbody').append(strHtmlTbody);
        $('#Rp125Imp tbody').append(strHtmlTbody2);
        $('#iframeReporteRP125').addClass('hidden');

        //var sumaTotalCantidades = ObjUtil.InicializarArreglo((jsonCabeceraDinamica.length + 7), 0); //inicializando de ceros al array que contendra los totalizados.
        //console.log(jsonCabeceraDinamica.length);
        var sumalTotalMontos = ObjUtil.InicializarArreglo(((jsonCabeceraDinamica.length * 3) + 7), 0);

        /****************************** ***************************************/

        //$('#tbrp125 > tbody  > tr').each(function () {
        //    $(this).find('.cantidad').each(function (i) {
        //        sumaTotalCantidades[i] += Number($(this).text());
        //    });
        //});

        $('#tbrp125 > tbody  > tr').each(function () {
            $(this).find('.importe').each(function (i) {
                sumalTotalMontos[i] += Number($(this).text());
            });
        });

        var cantidadDeFilasEnTabla = $("#tbrp125 tbody tr:nth-child(2) td").length;
        var rwfoot = '';


        rwfoot += '<tr>';

        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    rwfoot += '<th ></th>';
                    break;
                case 1:
                    rwfoot += '<th></th>';
                    break;
                case 2:
                    rwfoot += '<th></th>';
                    break;
                default:
                    rwfoot += "<th class='text-right " + (j % 2 == 0 ? 'monto' : 'monto') + "' style='text-align: right;" + (j % 2 != 0 ? 'mso-number-format:0.00' : 'mso-number-format:0.00') + "' ></th>";
                    break;
            }
        }
        rwfoot += '</tr>';
        $("#tbrp125 tfoot").append(rwfoot);



        //$("#tbrp125 tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
        //    $(this).html(sumaTotalCantidades[count]);
        //});

        var totalProdImp;
        $("#tbrp125 tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });


        //foot para imprimir 
        var Rp125Impfoot = '';

        Rp125Impfoot += '<tr>';

        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    Rp125Impfoot += '<th ></th>';
                    break;
                case 1:
                    Rp125Impfoot += '<th></th>';
                    break;
                case 2:
                    Rp125Impfoot += '<th></th>';
                    break;
                default:
                    Rp125Impfoot += "<th class='text-right " + (j % 2 == 0 ? 'monto' : 'monto') + "' style='text-align: right;" + (j % 2 != 0 ? 'mso-number-format:0.00' : 'mso-number-format:0.00') + "' ></th>";
                    break;
            }
        }

        Rp125Impfoot += '</tr>';
        $("#Rp125Imp tfoot").append(Rp125Impfoot);

        $("#Rp125Imp tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count]);
        });

        var totalProdImp;
        $("#Rp125Imp tfoot th.monto").each(function (count) { // agregando totales de importes
            $(this).html(sumalTotalMontos[count].toFixed(2));
            totalProdImp = sumalTotalMontos[count].toFixed(2);
        });

        //*********************

        ObjUtil.DesbloquearPantalla();
    });
}

function cargarRP126() {
    var UrlGeneral = NombreAplicacion + '/GeneralPost/ProcGeneralPost';
    var fechaConsulta = $('.datetimeRP126').val();
    var Data = {
        Procedimiento: 'ProcUsuarioTipoUnidadV1',
        Parametro: fechaConsulta,
        Indice: 12
    }

    $.getJSON(UrlGeneral, Data, function (Datos) {
        var jsonData = Datos['dt0'];
        var dataResumenRP126 = Datos['dt1'];
        var strCabecera = '';
        var strCuerpo = '';
        $('#tbrp126 thead').empty();
        $('#tbrp126 tbody').empty();
        //Armando la cabecera
        strCabecera += '<tr>' +
            '<th>N</th>' +
            '<th style="text-align:left">FECHA</th>' +
            '<th style="text-align:left">PAD</th>' +
            '<th style="text-align:left">UNIDAD</th>' +
            '<th style="text-align:right">VIAJES</th>' +
            '<th style="text-align:right">PROD.TOTAL</th>' +
            '<th style="width: 50px"></th>' +
            '</tr>';
        //*******************

        $('#tbrp126 thead').append(strCabecera);

        $.each(jsonData, function (i) {
            strCuerpo += '<tr class="option" data-codunidad="' + this.CodUnidad + '" data-padron="' + this.PadronUnidad + '" data-unidad="' + this.PlacaUnidad + '">' +
                '<td style="text-align:left">' + (Number(i) + 1) + '</td>' +
                '<td style="text-align:left">' + fechaConsulta + '</td>' +
                '<td style="text-align:left">' + this.PadronUnidad + '</td>' +
                '<td style="white-space: nowrap;text-align:left">' + this.PlacaUnidad + '</td>' +
                '<td style="text-align:right">' + this.Viajes + '</td>' +
                '<td style="text-align:right">' + Number(this.ProduccionTotal).toFixed(2) + '</td>' +
                '<td><i class="fa fa-search" aria-hidden="true" style="cursor:pointer" onclick="verDetalleRP126($(this).parent().parent())"></i></td>' +
                '</tr>';
        })

        $('#tbrp126 tbody').append(strCuerpo);

        /****************** RESUMEN  ***********************************/
        $('#tbresumen124 tbody').empty();
        var strHTMLresumen = '';

        strHTMLresumen += '<tr>' +
            '<th class="text-center;" colspan="2">RESUMEN FLOTA</th>' +
            '</tr>';

        strHTMLresumen += '<tr>' +
            '<td>Flota total</td>' +
            '<td style="text-align:right" >' + dataResumenRP126[0].FlotaTotal + '</td>' +
            '</tr>';

        strHTMLresumen += '<tr>' +
            '<td>Flota operativa</td>' +
            '<td style="text-align:right" >' + dataResumenRP126[0].FlotaOperativa + '</td>' +
            '</tr>';

        strHTMLresumen += '<tr>' +
            '<td>Flota inoperativa</td>' +
            '<td style="text-align:right" >' + dataResumenRP126[0].FlotaInoperativa + '</td>' +
            '</tr>';

        strHTMLresumen += '<tr>' +
            '<th class="text-center;" colspan="2">PROMEDIOS</th>' +
            '</tr>';

        strHTMLresumen += '<tr>' +
            '<td>Prom pasajero unidad</td>' +
            '<td style="text-align:right" >' + dataResumenRP126[0].PromedioPasajerosUnidad + '</td>' +
            '</tr>';

        strHTMLresumen += '<tr>' +
            '<td>Prom Producción Unidad</td>' +
            '<td style="text-align:right" >' + dataResumenRP126[0].PromedioProduccionUnidad + '</td>' +
            '</tr>';

        strHTMLresumen += '<tr>' +
            '<td>Prom viaje unidad</td>' +
            '<td style="text-align:right" >' + dataResumenRP126[0].PromedioViajesUnidad + '</td>' +
            '</tr>';

        $('#tbresumen124 tbody').append(strHTMLresumen)

        ObjUtil.DesbloquearPantalla();
    })
}

function cargarRP127() {

    var UrlGeneral = NombreAplicacion + '/GeneralPost/ProcGeneralPost';
    //
    Data = {
        Procedimiento: "ProcReporteVelocidadControl",
        Parametro: $('.datetimeRP127').val() + '|' + $('#selectRuta127').val() + '|' + $('#txtLado127').val(),
        Indice: 11
    }

    //
    $.post(UrlGeneral, Data, function (Datos) {
        var jsonData = Datos['dt0'];
        var jsonCabecera = Datos['dt1'];
        $('#tbrp127 caption').empty();
        $('#tbrp127 thead').empty();
        $('#tbrp127 tbody').empty();
        $('#tbrp127 tfoot').empty();

        var strCabecera = '<tr>' +
            '<th align="left" style="width: 20px; text-align:left;">N</th>' +
            '<th align="left" style="width: 20px; text-align:left;">CONTROLES</th>';

        $.each(jsonCabecera, function () {
            strCabecera += '<th align="center" style="width: 100px; text-align: center;white-space:nowrap">' + (this.Horas).split(' ')[1] + '</th>';
        })

        strCabecera += '<th style="text-align:center;">TOTAL</th>' +
            '</tr>';

        $('#tbrp127 thead').append(strCabecera);

        var strHTMLtabla = '';

        if (jsonData.length == 0) {
            $('#tbrp127 caption').append('<p class="text-center">No hay informacion para mostrar</p>');
            ObjUtil.DesbloquearPantalla();
            return;
        }

        var totalControl = 0;
        var cont = 0;
        $.each(jsonData, function (i) {
            var objDatos = this;
            strHTMLtabla += '<tr>' +
                '<td align="left" style="text-align:left;" >' + (i + 1) + '</td>' +
                '<td align="left" style="text-align:left;white-space:nowrap" >' + this.NomControl + '</td>';

            $.each(jsonCabecera, function () {
                if (objDatos[this.Horas] > 0) {
                    totalControl += Number(objDatos[this.Horas]);
                    cont++;
                }
                strHTMLtabla += '<td class="cantidad" align="center" style="width: 100px; text-align: center;">' + (objDatos[this.Horas] == undefined ? '' : Number(objDatos[this.Horas]).toFixed(2)) + '</td>';
            })

            strHTMLtabla += '<td class="cantidad" style="text-align:center;">' + Number(totalControl / cont).toFixed(2) + '</td' +
                '</tr>';

        });

        $('#tbrp127 tbody').append(strHTMLtabla);

        //Totales TFOOT
        var sumaTotalCantidades = ObjUtil.InicializarArreglo((jsonCabecera.length + 2), 0);
        var contTotalCantidades = ObjUtil.InicializarArreglo((jsonCabecera.length + 2), 0);

        $('#tbrp127 > tbody > tr').each(function (i) {
            $(this).find('.cantidad').each(function (j) {

                if (Number($(this).text()) > 0) {
                    sumaTotalCantidades[j] += Number($(this).text());
                    contTotalCantidades[j]++;
                }
            });
        });

        var cantidadDeFilasEnTabla = $("#tbrp127 tbody tr:nth-child(2) td").length;
        var rwfoot = '';

        rwfoot += '<tr>';

        for (j = 0; j < cantidadDeFilasEnTabla; j++) {

            switch (j) {

                case 0:
                    rwfoot += '<th ></th>';
                    break;
                case 1:
                    rwfoot += '<th></th>';
                    break;
                default:
                    rwfoot += "<th class='text-center " + (j % 2 == 0 ? 'cantidad' : 'cantidad') + "' style='text-align: center;" + (j % 2 != 0 ? 'mso-number-format:0.00' : 'mso-number-format:0.00') + "' ></th>";
                    break;
            }
        }
        rwfoot += '</tr>';
        $("#tbrp127 tfoot").append(rwfoot);

        $("#tbrp127 tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(sumaTotalCantidades[count] == 0 ? 0.00 : Number(sumaTotalCantidades[count] / contTotalCantidades[count]).toFixed(2));
        });

        ObjUtil.DesbloquearPantalla();

    }, 'JSON');
}

//******************************************************************************************************
function cargarRP128() {
    var resultadoLimiteFecha = ObjUtil.ComprobarRangoFecha($('#txtFechaInicio').val(), $('#txtFechaFin').val(), 365);
    const tbRP = 'tbRP128'

    if (resultadoLimiteFecha != true) {
        ObjUtil.MostrarMensaje('La consulta no puede ser mayor a 1 año', 0);
        LimpiarTabla(2, 'RP128');
        $('#iconCargar').css('display', 'none');
        return;
    }

    var AñoInicio = parseInt($('#txtFechaInicio').val().split('/')[2]);
    var AñoFin = parseInt($('#txtFechaFin').val().split('/')[2]);
    var MostrarMes = ObtenerMes($('#selMes').val()) + ' - ' + AñoInicio;
    var MesInicio = parseInt($('#txtFechaInicio').val().split('/')[1], 10);
    var MesFin = parseInt($('#txtFechaFin').val().split('/')[1], 10);
    var DiaInicio = parseInt($('#txtFechaInicio').val().split('/')[0], 10);
    var DiaFin = parseInt($('#txtFechaFin').val().split('/')[0], 10);
    var MesInicioLetra;
    var MesFinLetra;
    var ArrayNumMeses = [];
    var ArrayLetrasMeses = [];
    var ObjNomMeses = {};

    if (MesInicio != MesFin && AñoInicio == AñoFin) {
        MesInicioLetra = ObtenerMes(MesInicio).toUpperCase();
        MesFinLetra = ObtenerMes(MesFin).toUpperCase();

        for (var i = MesInicio; i <= MesFin; i++) {
            var ObjAux = {
                MesNumero: i,
                Año: AñoInicio,
            }
            ArrayNumMeses.push(ObjAux);
        }

        //ArrayNumMeses.push(i + '|' + AñoInicio);
    } else if (AñoInicio != AñoFin) {
        for (var i = MesInicio; i <= 12; i++) {
            var ObjAux = {
                MesNumero: i,
                Año: AñoInicio,
            }
            ArrayNumMeses.push(ObjAux);
        }
        for (var i = 1; i <= MesFin; i++) {
            var ObjAux = {
                MesNumero: i,
                Año: AñoFin,
            }
            ArrayNumMeses.push(ObjAux);
        }
    }

    $.each(ArrayNumMeses, function (i) {
        //Ejemplo ----> [nombreMes - año] --> [Enero - 2020]  ObtenerMes(mes)
        ObjNomMeses = {
            MesLetra: ObtenerMes(this.MesNumero),
            Año: this.Año,
        }
        ArrayLetrasMeses.push(ObjNomMeses);
    })

    $('#iconCargar').css('display', '');
    var FechaIncioStamp = convertDatetoTimeStamp($('#txtFechaInicio').val() + ' 00:00:00');
    var FechaFinStamp = convertDatetoTimeStamp($('#txtFechaFin').val() + ' 00:00:00');

    if (FechaIncioStamp > FechaFinStamp) {
        ObjUtil.MostrarMensaje('La fecha de inicio no puede ser mayor a la fecha de fin', 0);
        $('#txtFechaFin').focus();
        $('#iconCargar').css('display', 'none');
        LimpiarTabla(2, 'RP128');
        return;
    }
    var Data = {
        Procedimiento: 'ProcReporteConin',
        Parametro: $('#selMes').val() + '|' + $('#selAño').val() + '|' + $('#selTipoConsulta').val() + '|' + $('#txtFechaInicio').val() + '|' + $('#txtFechaFin').val() + '|' + $('#selTipoEntidad').val(),
        Indice: 10
    }

    $.getJSON(urlGeneral, Data, function (Datos) {
        var jsonData = Datos['dt0'];
        var jsonCabecera = Datos['dt1'];
        var strCabecera = '';
        var strCuerpo = '';
        var strFooter = '';
        var SumaPorPersona = 0;
        var ArrayFechas = [];

        if (jsonData.length == 0) {
            $('#iconCargar').css('display', 'none');
            LimpiarTabla(2, 'rp128');
            return;
        }

        $('#' + tbRP + ' thead').empty();
        $('#' + tbRP + ' tbody').empty();
        $('#' + tbRP + ' tfoot').empty();
        //Armando la cabecera
        strCabecera += '<tr>' +
            '<th rowspan="2" style="width:30px!important;"><p style="margin-bottom:24px">N°</p></th>' +
            '<th rowspan="2" style="text-align:' + ($('#selTipoEntidad').val() == 1 ? 'center' : 'left') + ';width:' + ($('#selTipoEntidad').val() == 1 ? '250px' : '100px') + '!important;border-right:4px solid #000000 !important"><p style="margin-bottom:24px">' + ($('#selTipoEntidad').val() == 1 ? 'CONDUCTOR' : 'UNIDAD') + '</p></th>';

        //Si tipo consulta es rango de fechas y el año de inicio es diferente al año final
        if ($('#selTipoConsulta').val() == 0 && AñoInicio != AñoFin) {

            $.each(ArrayLetrasMeses, function (i) {

                //ObtenerPrimerUltimoDia(mes, año) --> respuesta DiaInicio|DiaFin
                var UltimoDiaMesInicio = obtenerPrimerUltimoDia(ArrayNumMeses[i].MesNumero, ArrayNumMeses[i].Año).split('|')[1];
                //UltimoDiaMesInicio = Ultimo dia del mes que se envia en numero

                // Si los meses son iguales al mes de inicio y sus años son iguales a su año inicio // es para completar el primer mes en la cabecera
                if (ArrayNumMeses[i].MesNumero == MesInicio && ArrayNumMeses[i].Año == AñoInicio) {
                    strCabecera += '<th colspan="' + Number(UltimoDiaMesInicio - DiaInicio + 1) + '" style="text-align:center;border-bottom:1px solid #000000 !important;border-right:1px solid #000000 !important">' + this.MesLetra + ' - ' + this.Año + '</th>';

                    // Si los meses son iguales al mes de fin y sus años son iguales a su año fin // es para completar el ultimo mes en la cabecera
                } else if (ArrayNumMeses[i].MesNumero == MesFin && ArrayNumMeses[i].Año == AñoFin) {
                    strCabecera += '<th colspan="' + Number(DiaFin) + '" style="text-align:center;border-bottom:1px solid #000000 !important;border-right:1px solid #000000 !important">' + this.MesLetra + ' - ' + this.Año + '</th>';

                    // Esto es para completar los demas meses entre el inicio y fin los cuales tendran un colspan del ultimo dia
                } else {
                    strCabecera += '<th colspan="' + Number(obtenerPrimerUltimoDia(ArrayNumMeses[i].MesNumero, ArrayNumMeses[i].Año).split('|')[1]) + '" style="text-align:center;border-bottom:1px solid #000000 !important;border-right:1px solid #000000 !important">' + this.MesLetra + ' - ' + this.Año + '</th>';
                }
            })

            // Entrara aqui cuando la consulta de por rango de fechas pero sera de un solo año y los meses distintos
        } else if ($('#selTipoConsulta').val() == 0 && AñoInicio == AñoFin && MesInicio != MesFin) {
            $.each(ArrayLetrasMeses, function (i) {

                var UltimoDiaMesInicio = obtenerPrimerUltimoDia(ArrayNumMeses[i].MesNumero, ArrayNumMeses[i].Año).split('|')[1];
                //var PrimerDiaMesFin = obtenerPrimerUltimoDia(ArrayNumMeses[i]).split('|')[0];
                if (ArrayNumMeses[i].MesNumero == MesInicio && ArrayNumMeses[i].Año == AñoInicio) {
                    strCabecera += '<th colspan="' + Number(UltimoDiaMesInicio - DiaInicio + 1) + '" style="text-align:center;border-bottom:1px solid #000000 !important;border-right:1px solid #000000 !important">' + this.MesLetra + ' - ' + this.Año + '</th>';
                } else if (ArrayNumMeses[i].MesNumero == MesFin && ArrayNumMeses[i].Año == AñoFin) {
                    strCabecera += '<th colspan="' + Number(DiaFin) + '" style="text-align:center;border-bottom:1px solid #000000 !important;border-right:1px solid #000000 !important">' + this.MesLetra + ' - ' + this.Año + '</th>';
                } else {
                    strCabecera += '<th colspan="' + Number(obtenerPrimerUltimoDia(ArrayNumMeses[i].MesNumero, ArrayNumMeses[i].Año).split('|')[1]) + '" style="text-align:center;border-bottom:1px solid #000000 !important;border-right:1px solid #000000 !important">' + this.MesLetra + ' - ' + this.Año + '</th>';
                }
            })

            // Entrara aqui cuando la consulta de por rango de fechas pero sera de un solo año y los meses iguales        
        } else if ($('#selTipoConsulta').val() == 0 && MesInicio == MesFin && AñoInicio == AñoFin) {
            strCabecera += '<th colspan="' + (jsonCabecera.length) + '" style="text-align:center;border-bottom:1px solid #000000 !importan">' + MostrarMes + '</th>'

            // Esto es para la consulta por mes
        } else {
            strCabecera += '<th colspan="' + (jsonCabecera.length) + '" style="text-align:center;border-bottom:1px solid #000000 !importan">' + MostrarMes + '</th>'
        }

        strCabecera += '<th rowspan="2" title="Total por persona" style="width:50px!important;border-left:4px solid #000000"><p style="margin-bottom:24px">TOTAL</p></th>' +
            '</tr>';

        strCabecera += '<tr>';
        $.each(jsonCabecera, function () {

            strCabecera += (FechaActualInvertida == this.FechaIncidencia.split('|')[0] ? '<th style="background-color:#4A4A48; ' + (FechaActualInvertida == this.FechaIncidencia.split('|')[0] ? 'border-right:2px solid #4A4A48; border-left:2px solid #4A4A48;' : '') + '" ><p style="text-align:center">' + this.FechaIncidencia.split('-')[2].split('|')[1] + '</p><p style="text-align:center;font-size:15px">' + this.FechaIncidencia.split('-')[2].split('|')[0] + '</p></th>' : '<th style="' + (this.FechaIncidencia.split('-')[2].split('|')[0] == obtenerPrimerUltimoDia(this.FechaIncidencia.split('-')[1], this.FechaIncidencia.split('-')[0]).split('|')[1] && $('#selTipoConsulta').val() == 0 ? 'border-right:1px solid #000000' : '') + '"><p style="text-align:center; ">' + this.FechaIncidencia.split('-')[2].split('|')[1] + '</p><p style="text-align:center;font-size:15px">' + this.FechaIncidencia.split('-')[2].split('|')[0] + '</p></th>');
        })
        strCabecera += '</tr>';
        //*********************

        //Armando el cuerpo

        $.each(jsonData, function (i) {
            SumaPorPersona = 0;
            var objCuerpo = this;
            strCuerpo += '<tr onclick="pintarTD($(this))" class="option" data-entidad = "' + this.CodEntidad + '" data-nomusuario = "' + this.Entidad + '" style="height:2.5em;vertical-align:middle; ">' +
                '<td style="vertical-align:middle;cursor:default">' + (i + 1) + '</td>' +
                '<td style="white-space:nowrap;vertical-align:middle;cursor:default; border-right:4px solid #6098b9">' + this.Entidad + '</td>';

            $.each(jsonCabecera, function (j) {

                SumaPorPersona += objCuerpo[this.FechaIncidencia.split('|')[0]];
                strCuerpo += (objCuerpo[this.FechaIncidencia.split('|')[0]] > 0 ? '<td class="cantidad" data-fecha = "' + this.FechaIncidencia.split('|')[0] + '" style=" ' + (FechaActualInvertida == this.FechaIncidencia.split('|')[0] ? 'border-right:2px solid #4A4A48; border-left:2px solid #4A4A48;' : '') + '  vertical-align:middle;text-align:center; cursor:pointer;text-decoration: ; color:#4F73F9;' + (this.FechaIncidencia.split('-')[2].split('|')[0] == obtenerPrimerUltimoDia(this.FechaIncidencia.split('-')[1], this.FechaIncidencia.split('-')[0]).split('|')[1] && $('#selTipoConsulta').val() == 0 ? 'border-right:1px solid #000000' : '') + '" onclick="DetallePivot($(this).parent(), $(this) )">' + objCuerpo[this.FechaIncidencia.split('|')[0]] + '</td>' : '<td class="cantidad" style=" ' + (FechaActualInvertida == this.FechaIncidencia.split('|')[0] ? 'border-right:2px solid #4A4A48; border-left:2px solid #4A4A48;' : '') + ' vertical-align:middle;text-align:center; cursor:default;' + (this.FechaIncidencia.split('-')[2].split('|')[0] == obtenerPrimerUltimoDia(this.FechaIncidencia.split('-')[1], this.FechaIncidencia.split('-')[0]).split('|')[1] && $('#selTipoConsulta').val() == 0 ? 'border-right:1px solid #000000' : '') + ' ">' + objCuerpo[this.FechaIncidencia.split('|')[0]] + '</td>');
                ArrayFechas.push(this.FechaIncidencia.split('|')[0]);
            })

            strCuerpo += '<td  class="cantidad" style="vertical-align:middle;text-align:center; width:50px!important; border-left:4px solid #6098b9">' + SumaPorPersona + '</td>' +
                '</tr>';

        })

        //console.log(ArrayFechas);
        $('#' + tbRP + ' thead').append(strCabecera);
        $('#' + tbRP + ' tbody').append(strCuerpo);

        var SumaPorDia = ObjUtil.InicializarArreglo((jsonCabecera.length + 3), 0); //inicializando de ceros al array que contendra los totalizados.

        $('#' + tbRP + ' > tbody  > tr').each(function () {
            $(this).find('.cantidad').each(function (i) {
                SumaPorDia[i] += Number($(this).text());
            });
        });

        var cantidadDeColumnasEnTabla = $("#" + tbRP + " tbody tr:nth-child(1) td").length;
        var rwfoot = '';
        rwfoot += '<tr>';

        for (j = 0; j < cantidadDeColumnasEnTabla; j++) {

            if (cantidadDeColumnasEnTabla == 4 && fechaActual == $('#txtFechaInicio').val() && fechaActual == $('#txtFechaFin').val()) {
                switch (j) {

                    case 0:
                        rwfoot += '<th></th>';
                        break;
                    case 1:
                        rwfoot += '<th  style="text-align: center;white-space:nowrap">TOTAL POR DIA</th>';
                        break;
                    case 2:
                        rwfoot += '<th class="cantidad" style="text-align: center;background-color:#4A4A48; border-left:2px solid #4A4A48; border-right:2px solid #4A4A48" ></th>';
                        break;
                    case 3:
                        rwfoot += '<th class="cantidad" style="text-align: center;" ></th>';
                        break;
                }
            } else {
                switch (j) {

                    case 0:
                        rwfoot += '<th></th>';
                        break;
                    case 1:
                        rwfoot += '<th  style="text-align: center;white-space:nowrap">TOTAL POR DIA</th>';
                        break;
                    default:
                        rwfoot += '<th class="cantidad" style="text-align: center;' + (ArrayFechas[j - 2] == FechaActualInvertida ? 'background-color:#4A4A48; border-left:2px solid #4A4A48; border-right:2px solid #4A4A48' : '') + ' " ></th>';
                        break;
                }
            }
        }

        rwfoot += '</tr>';

        $("#" + tbRP + " tfoot").append(rwfoot);

        $("#" + tbRP + " tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            $(this).html(SumaPorDia[count]);
        });
        //*****************

        $('#iconCargar').css('display', 'none');
    })
}

function TipoConsulta(select, RP) {
    if ($(`#${select}`).val() == 1) {
        $('.RangoFecha' + RP + '').css('display', 'none');
        $('.Mes' + RP + '').css('display', '');
    } else {
        $('.RangoFecha' + RP + '').css('display', '');
        $('.Mes' + RP + '').css('display', 'none');
    }
    if (RP == '') { RP = 'rp128' }
    LimpiarTabla(1, RP);
}

function DetallePivot(tr, element) {

    $('#tableDetallePivot thead').empty();
    $('#tableDetallePivot tbody').empty();

    var CodEntidad = tr.attr('data-entidad');
    var NomUsuario = tr.attr('data-nomusuario');
    var fecha = element.attr('data-fecha');
    ;
    var Data = {
        Procedimiento: 'ProcReporteConin',
        Parametro: fecha + '|' + $('#selTipoEntidad').val() + '|' + CodEntidad,
        Indice: 11
    }

    $.getJSON(urlGeneral, Data, function (Datos) {
        var JsonData = Datos['dt0'];
        var strCuerpo = '';
        var strCabecera = '';

        strCabecera = '<tr>' +
            '<th style="width:30px">N°</th>' +
            '<th style="text-align:center">RUTA</th>' +
            '<th style="width:100px; text-align:' + ($('#selTipoEntidad').val() == 1 ? 'center' : 'center') + '" >' + ($('#selTipoEntidad').val() == 1 ? 'UNIDAD' : 'CONDUCTOR') + '</th>' +
            '<th title="Hora Incidencia" style="width:150px;white-space:nowrap; text-align:center">H. INCIDENCIA</th>' +
            '<th title="Tipo de dispositivo" style="width:150px;white-space:nowrap; text-align:center">T. DISPOSITIVO</th>' +
            '<th title="Incidencia" style="width:200px;white-space:nowrap; text-align:left">INCIDENCIA</th>' +
            '<th title="Tipo incidencia" style="width:150px;white-space:nowrap;text-align:left">T. INCIDENCIA</th>' +
            '<th title="Comentario incidencia" style="width:150px;white-space:nowrap">C. INCIDENCIA</th>' +
            '<th title="Comentario solución" style="width:150px;white-space:nowrap">C. SOLUCIÓN</th>' +
            '<th style="width:30px"><i title="Imagen" class="fa fa-camera" style="cursor:pointer" aria-hidden="true" "></i></th>' +
            '<th style="width:30px"><i title="Localización" class="fa fa-map-marker" style="cursor:pointer" aria-hidden="true" "></i></th>' +
            '</tr>';

        $.each(JsonData, function (i) {
            strCuerpo += '<tr onclick="pintarTD($(this))" class="option" style="cursor:default"  data-latitud = "' + this.LatitudIncidencia + '" data-longitud = "' + this.LongitudIncidencia + '" data-imagenincidencia = "' + this.Imagenes + '">' +
                '<td>' + (i + 1) + '</td>' +
                '<td style=" text-align:center;white-space:nowrap;">' + this.Ruta + '</div></td>' +
                '<td style=" text-align:' + ($('#selTipoEntidad').val() == 1 ? 'left' : 'center') + ';white-space:nowrap"> ' + this.Entidad + '</td>' +
                '<td style=" text-align:center;white-space:nowrap" title="' + this.FechaHora + '">' + this.FechaHora + '</td>' +
                '<td style=" text-align:center;white-space:nowrap" title="' + this.NomDispositivoTipo + '">' + this.NomDispositivoTipo + '</td>' +
                '<td style=" text-align:left;max-width:200px;" title="' + this.NomIncidenciaConcepto + '"><div style="width:100%; overflow:hidden; white-space:nowrap;text-overflow: ellipsis;">' + this.NomIncidenciaConcepto + '</div></td>' +
                '<td style=" text-align:left;white-space:nowrap" title="' + this.NomIncidenciaConceptoTipo + '">' + this.NomIncidenciaConceptoTipo + '</td>' +
                '<td title="' + this.ComentarioIncidencia + '" style="max-width:150px;"><div style="width:100%; overflow:hidden; white-space:nowrap;text-overflow: ellipsis;">' + this.ComentarioIncidencia + '</div></td>' +
                '<td title="' + this.ComentarioSolucion + '" style="max-width:150px;"><div style="width:100%; overflow:hidden; white-space:nowrap;text-overflow: ellipsis;">' + this.ComentarioSolucion + '</div></td>' +
                '<td style="width:30px">' + (this.Imagenes == '' ? '' : '<i title="Ver Imagen" class="fa fa-camera" style="cursor:pointer" aria-hidden="true" onclick="ImagenIncidencia($(this).parent().parent())"></i>') + '</td>' +
                '<td style="width:30px"><i title="Ver localización" class="fa fa-map-marker" style="cursor:pointer" aria-hidden="true" onclick="AbrirMapa($(this).parent().parent(),2)"></i></td>' +
                '</tr>';
        })

        $('#tableDetallePivot thead').append(strCabecera);
        $('#tableDetallePivot tbody').append(strCuerpo);
    })

    $('#DivDetallePivot').dialog({
        title: 'Detalle Incidencias [ ' + NomUsuario + ' ]'
    });
    $('#DivDetallePivot').parent().position({
        my: "center",
        at: "center",
        of: window
    });
    $('#DivDetallePivot').dialog('open');

}

function AbrirMapa(tr, Tipo) {
    var Titulo = '';

    if (Tipo == 1) {
        Titulo = 'Lugar de Liquidación'
    } else if (Tipo == 2) {
        Titulo = 'Lugar de Incidencia'
    } else if (Tipo == 3) {
        Titulo = 'Lugar de Evación'
    }
    var latitud = Number(tr.attr('data-latitudInicio'));
    var longitud = Number(tr.attr('data-longitudInicio'));

    try {
        initMap(Number(latitud), Number(longitud));

    } catch (err) {

    }

    $('#DialogMapa').dialog({
        title: Titulo,
        close: function () {
            //limpiarModal();
        }
    })

    $('#DialogMapa').dialog('open');

}

function initMap(latitud, longitud) {
    try {
        if (latitud == undefined || longitud == undefined) {
            console.log('Longitud o latitud is undefined');
        } else {
            //var Localizacion = { lat: Number(latitud), lng: Number(longitud) }
            var pointDef = new google.maps.LatLang(parseFloat("36.5"), parseFloat("-83.2"));

            mapa = new google.maps.Map(document.getElementById('divGoogleMaps'), {
                center: pointDef,
                zoom: 16
            });

            var marker = new google.maps.Marker({
                position: Localizacion,
                map: mapa
            })
        }
    } catch (err) {
        console.error(err);
    }
}

function ImagenIncidencia(tr) {

    var strImagen = '';
    var urlImagen = tr.attr('data-imagenincidencia');
    var separandoImagenes = urlImagen.split("*");
    var numImagenes = separandoImagenes.length;

    if (separandoImagenes[1] == undefined) {
        strImagen += '<figure><img id="imagenIncidencia" src="http://abexacloud.com/conin/ImagenesIncidencias/' + urlImagen + '" alt="Imagen" style="height:100%;"/></figure>';
        $('#contenedorImagenes').html(strImagen);
    } else {
        $.each(separandoImagenes, function (i) {
            // momento cultural abexa parte 1 17/12/2019
            //  i = index   , si hay 2 imagenes,  sale ---> 0  despues 1|
            strImagen += '<figure><img id="imagenIncidencia' + (i + 1) + '" src="http://abexacloud.com/conin/ImagenesIncidencias/' + separandoImagenes[i] + '" alt="Imagen" style="height:100%; "/></figure>'

        });
        $('#contenedorImagenes').html(strImagen);
    }

    $('#divMostrarImagen').dialog({

        close: function () {

        }
    })

    //funcion para el felxbox
    $('#contenedorImagenes').flexgal();
    $('#divMostrarImagen').dialog('open');


    //cuando se haga click en la imagen se cambia el z-index del divMostrarImagen
    $('.image-rate').click(function () {

    })

    $('#fullimage').click(function () {
        $('#divMostrarImagen').focus();
        $('#DivDetallePivot').dialog({
            closeOnEscape: true
        });
        $('#divMostrarImagen').dialog({
            closeOnEscape: true,

        });
    })


}

function pintarTD(tr) {
    $('.option').css('background-color', '');

    tr.css('background-color', '#acd4ef');

    if (tr.hasClass('optionCondicional')) {
        tr.removeClass('optionCondicional');
        tr.css('background-color', '');
    } else {
        $('.option').removeClass('optionCondicional');
        tr.addClass('optionCondicional');
        tr.css('background-color', '#acd4ef');
    }

}

function LimpiarTabla(tipo, RP, limpiarHeader = true, columnas = 3) {
    var strCuerpo = '';
    var strCabecera = '';

    $('#tb' + RP + ' tbody').empty();
    $('#tb' + RP + ' tfoot').empty();

    if (limpiarHeader) {
        $('#tb' + RP + ' thead').empty();

        strCabecera += '<tr>' +
            '<th style="width:30px!important">N°</th>' +
            '<th style="width:250px!important">' + ($('#selTipoEntidad').val() == 1 ? 'CONDUCTOR' : 'UNIDAD') + '</th>' +
            '<th title="Total por persona" style="width:50px!important">TOTAL</th>' +
            '</tr>';
    }

    if (tipo == 1) {
        strCuerpo = '<tr>' +
            `<td colspan="${limpiarHeader ? 3 : columnas}" style="text-align:center">Presione el boton Procesar ...</td>` +
            '</tr>';
    } else {
        strCuerpo = '<tr>' +
            `<td colspan="${limpiarHeader ? 3 : columnas}" style="text-align:center">No hay información con los datos seleccionados</td>` +
            '</tr>';
    }

    $('#tb' + RP + ' thead').append(strCabecera);
    $('#tb' + RP + ' tbody').append(strCuerpo);


}

function exportarDetalle() {
    var PrimerUltimoDia = obtenerPrimerUltimoDia($('#selMes').val(), $('#selAño').val());
    var DiaInicio = PrimerUltimoDia.split('|')[0];
    var DiaFin = PrimerUltimoDia.split('|')[1];
    var Mes = ($('#selMes').val() < 10 ? '0' + $('#selMes').val() : $('#selMes').val());
    var Año = $('#selAño').val();
    var FechaInicioMes = DiaInicio + '/' + Mes + '/' + Año;
    var FechaFinMes = DiaFin + '/' + Mes + '/' + Año;

    var opciones = {
        sistema: 'REPORTE SOPORTE',
        title: 'REPORTE SOPORTE',
        filename: 'REPORTE SOPORTE',
        empresa: nomEmpresa,
    }

    var parametros = {
        ruc: Ruc,
        nomUsuario: NomUsuario,
        fechaInicio: ($('#selTipoConsulta').val() == 1 ? FechaInicioMes + ' al ' + FechaFinMes : ($('#txtFechaInicio').val() == $('#txtFechaFin').val() ? $('#txtFechaInicio').val() : $('#txtFechaInicio').val() + ' al ' + $('#txtFechaFin').val())),
    }

    fnExcelReport("tbrp128", "", opciones, parametros, "REPORTE SOPORTE");
}

function obtenerPrimerUltimoDia(Mes, Año) {
    var date = new Date();
    var primerDia = new Date(date.getFullYear(), Mes - 1, 1);
    var ultimoDia = new Date(date.getFullYear(), Mes, 0);
    var DiaInicio = (primerDia.getDate() < 10 ? '0' + primerDia.getDate() : primerDia.getDate());
    var DiaFin;
    if (Año % 4 == 0 && Mes == 2) {
        DiaFin = 29;
    } else if (Año % 4 != 0 && Mes == 2) {
        DiaFin = 28;
    } else {
        DiaFin = (ultimoDia.getDate() < 10 ? '0' + ultimoDia.getDate() : ultimoDia.getDate());
    }
    return DiaInicio + '|' + DiaFin;
}

function ObtenerMes(val) {
    var NombreMes = '';
    if (val == 1) {
        NombreMes = 'Enero';
    } else if (val == 2) {
        NombreMes = 'Febrero';
    } else if (val == 3) {
        NombreMes = 'Marzo';
    } else if (val == 4) {
        NombreMes = 'Abril';
    } else if (val == 5) {
        NombreMes = 'Mayo';
    } else if (val == 6) {
        NombreMes = 'Junio';
    } else if (val == 7) {
        NombreMes = 'Julio';
    } else if (val == 8) {
        NombreMes = 'Agosto';
    } else if (val == 9) {
        NombreMes = 'Setiembre';
    } else if (val == 10) {
        NombreMes = 'Octubre';
    } else if (val == 11) {
        NombreMes = 'Noviembre';
    } else if (val == 12) {
        NombreMes = 'Diciembre';
    }

    return NombreMes;
}
//******************************************************************************************************

//**********************************REPORTE 129******************************************

function cargarRP129() {
    let codRp = 'RP129';
    var resultadoLimiteFecha = ObjUtil.ComprobarRangoFecha($('#txtFechaInicio' + codRp + '').val(), $('#txtFechaFin' + codRp + '').val(), 365);
    const selectUnidad = document.getElementById(`selectUnidad${codRp}`);

    if (resultadoLimiteFecha != true) {
        ObjUtil.MostrarMensaje('La consulta no puede ser mayor a 1 año', 0);
        LimpiarTabla(2, codRp);
        $('#iconCargar' + codRp).css('display', 'none');
        return;
    }

    var AñoInicio = parseInt($('#txtFechaInicio' + codRp + '').val().split('/')[2]);
    var AñoFin = parseInt($('#txtFechaFin' + codRp + '').val().split('/')[2]);
    var MostrarMes = ObtenerMes($('#selMes' + codRp + '').val()) + ' - ' + AñoInicio;
    var MesInicio = parseInt($('#txtFechaInicio' + codRp + '').val().split('/')[1], 10);
    var MesFin = parseInt($('#txtFechaFin' + codRp + '').val().split('/')[1], 10);
    var DiaInicio = parseInt($('#txtFechaInicio' + codRp + '').val().split('/')[0], 10);
    var DiaFin = parseInt($('#txtFechaFin' + codRp + '').val().split('/')[0], 10);
    var MesInicioLetra;
    var MesFinLetra;
    var ArrayNumMeses = [];
    var ArrayLetrasMeses = [];
    var ObjNomMeses = {};

    if (MesInicio != MesFin && AñoInicio == AñoFin) {
        MesInicioLetra = ObtenerMes(MesInicio).toUpperCase();
        MesFinLetra = ObtenerMes(MesFin).toUpperCase();

        for (var i = MesInicio; i <= MesFin; i++) {
            var ObjAux = {
                MesNumero: i,
                Año: AñoInicio,
            }
            ArrayNumMeses.push(ObjAux);
        }

        //ArrayNumMeses.push(i + '|' + AñoInicio);
    } else if (AñoInicio != AñoFin) {
        for (var i = MesInicio; i <= 12; i++) {
            var ObjAux = {
                MesNumero: i,
                Año: AñoInicio,
            }
            ArrayNumMeses.push(ObjAux);
        }
        for (var i = 1; i <= MesFin; i++) {
            var ObjAux = {
                MesNumero: i,
                Año: AñoFin,
            }
            ArrayNumMeses.push(ObjAux);
        }
    }

    $.each(ArrayNumMeses, function (i) {
        //Ejemplo ----> [nombreMes - año] --> [Enero - 2020]  ObtenerMes(mes)
        ObjNomMeses = {
            MesLetra: ObtenerMes(this.MesNumero),
            Año: this.Año,
        }
        ArrayLetrasMeses.push(ObjNomMeses);
    })

    $('#iconCargar' + codRp + '').css('display', '');
    var FechaIncioStamp = convertDatetoTimeStamp($('#txtFechaInicio' + codRp + '').val() + ' 00:00:00');
    var FechaFinStamp = convertDatetoTimeStamp($('#txtFechaFin' + codRp + '').val() + ' 00:00:00');

    if (FechaIncioStamp > FechaFinStamp) {
        ObjUtil.MostrarMensaje('La fecha de inicio no puede ser mayor a la fecha de fin', 0);
        $('#txtFechaFin' + codRp + '').focus();
        $('#iconCargar' + codRp + '').css('display', 'none');
        LimpiarTabla(2, codRp);
        return;
    }
    var Data = {
        Procedimiento: 'dbo.ProcReporteCantidadVuelta',
        Parametro: $('#selMes' + codRp + '').val() + '|' + $('#selAño' + codRp + '').val() + '|' + $('#selTipoConsulta' + codRp + '').val() + '|' + $('#txtFechaInicio' + codRp + '').val() + '|' + $('#txtFechaFin' + codRp + '').val() + '|' + $('#selTipoEntidad' + codRp).val() + '|' + selectUnidad.value,
        Indice: 10
    }

    $.getJSON(urlGeneral, Data, function (Datos) {
        var jsonData = Datos['dt0'];
        var jsonCabecera = Datos['dt1'];
        var strCabecera = '';
        var strCuerpo = '';
        var strFooter = '';

        let strCabeceraResumen = ''
        let strCuerpoResumen = ''
        let strFooterResumen = ''

        var SumaPorPersona = 0;
        var ArrayFechas = [];

        if (jsonData.length == 0) {
            $('#iconCargar' + codRp + '').css('display', 'none');
            LimpiarTabla(2, codRp);
            return;
        }

        $('#tb' + codRp + ' thead').empty();
        $('#tb' + codRp + ' tbody').empty();
        $('#tb' + codRp + ' tfoot').empty();
        //Armando la cabecera
        strCabecera += '<tr>' +
            '<th rowspan="2" style="width:30px!important;"><p style="margin-bottom:24px">N°</p></th>' +
            '<th rowspan="2" style="vertical-align:middle;text-align:center;width:150px!important;border-right:4px solid #000000 !important"><p style="">PLACA</p></th>';

        //Si tipo consulta es rango de fechas y el año de inicio es diferente al año final
        if ($('#selTipoConsulta' + codRp + '').val() == 0 && AñoInicio != AñoFin) {

            $.each(ArrayLetrasMeses, function (i) {

                //ObtenerPrimerUltimoDia(mes, año) --> respuesta DiaInicio|DiaFin
                var UltimoDiaMesInicio = obtenerPrimerUltimoDia(ArrayNumMeses[i].MesNumero, ArrayNumMeses[i].Año).split('|')[1];
                //UltimoDiaMesInicio = Ultimo dia del mes que se envia en numero

                // Si los meses son iguales al mes de inicio y sus años son iguales a su año inicio // es para completar el primer mes en la cabecera
                if (ArrayNumMeses[i].MesNumero == MesInicio && ArrayNumMeses[i].Año == AñoInicio) {
                    strCabecera += '<th colspan="' + Number(UltimoDiaMesInicio - DiaInicio + 1) + '" style="text-align:center;border-bottom:1px solid #000000 !important;border-right:1px solid #000000 !important">' + this.MesLetra + ' - ' + this.Año + '</th>';

                    // Si los meses son iguales al mes de fin y sus años son iguales a su año fin // es para completar el ultimo mes en la cabecera
                } else if (ArrayNumMeses[i].MesNumero == MesFin && ArrayNumMeses[i].Año == AñoFin) {
                    strCabecera += '<th colspan="' + Number(DiaFin) + '" style="text-align:center;border-bottom:1px solid #000000 !important;border-right:1px solid #000000 !important">' + this.MesLetra + ' - ' + this.Año + '</th>';

                    // Esto es para completar los demas meses entre el inicio y fin los cuales tendran un colspan del ultimo dia
                } else {
                    strCabecera += '<th colspan="' + Number(obtenerPrimerUltimoDia(ArrayNumMeses[i].MesNumero, ArrayNumMeses[i].Año).split('|')[1]) + '" style="text-align:center;border-bottom:1px solid #000000 !important;border-right:1px solid #000000 !important">' + this.MesLetra + ' - ' + this.Año + '</th>';
                }
            })

            // Entrara aqui cuando la consulta de por rango de fechas pero sera de un solo año y los meses distintos
        } else if ($('#selTipoConsulta' + codRp + '').val() == 0 && AñoInicio == AñoFin && MesInicio != MesFin) {
            $.each(ArrayLetrasMeses, function (i) {

                var UltimoDiaMesInicio = obtenerPrimerUltimoDia(ArrayNumMeses[i].MesNumero, ArrayNumMeses[i].Año).split('|')[1];
                //var PrimerDiaMesFin = obtenerPrimerUltimoDia(ArrayNumMeses[i]).split('|')[0];
                if (ArrayNumMeses[i].MesNumero == MesInicio && ArrayNumMeses[i].Año == AñoInicio) {
                    strCabecera += '<th colspan="' + Number(UltimoDiaMesInicio - DiaInicio + 1) + '" style="text-align:center;border-bottom:1px solid #000000 !important;border-right:1px solid #000000 !important">' + this.MesLetra + ' - ' + this.Año + '</th>';
                } else if (ArrayNumMeses[i].MesNumero == MesFin && ArrayNumMeses[i].Año == AñoFin) {
                    strCabecera += '<th colspan="' + Number(DiaFin) + '" style="text-align:center;border-bottom:1px solid #000000 !important;border-right:1px solid #000000 !important">' + this.MesLetra + ' - ' + this.Año + '</th>';
                } else {
                    strCabecera += '<th colspan="' + Number(obtenerPrimerUltimoDia(ArrayNumMeses[i].MesNumero, ArrayNumMeses[i].Año).split('|')[1]) + '" style="text-align:center;border-bottom:1px solid #000000 !important;border-right:1px solid #000000 !important">' + this.MesLetra + ' - ' + this.Año + '</th>';
                }
            })

            // Entrara aqui cuando la consulta de por rango de fechas pero sera de un solo año y los meses iguales        
        } else if ($('#selTipoConsulta' + codRp + '').val() == 0 && MesInicio == MesFin && AñoInicio == AñoFin) {
            strCabecera += '<th colspan="' + (jsonCabecera.length) + '" style="text-align:center;border-bottom:1px solid #000000 !importan">' + MostrarMes + '</th>'

            // Esto es para la consulta por mes
        } else {
            strCabecera += '<th colspan="' + (jsonCabecera.length) + '" style="text-align:center;border-bottom:1px solid #000000 !importan">' + MostrarMes + '</th>'
        }

        strCabecera += '<th rowspan="2" title="Total por unidad" style="width:50px!important;border-left:4px solid #000000"><p style="margin-bottom:24px">TOTAL</p></th>' +
            '</tr>';

        strCabecera += '<tr>';
        $.each(jsonCabecera, function () {

            strCabecera += (FechaActualInvertida == this.FechaSalida.split('|')[0] ? '<th style="background-color:#4A4A48; ' + (FechaActualInvertida == this.FechaSalida.split('|')[0] ? 'border-right:2px solid #4A4A48; border-left:2px solid #4A4A48;' : '') + '" ><p style="text-align:center">' + this.FechaSalida.split('-')[2].split('|')[1] + '</p><p style="text-align:center;font-size:15px">' + this.FechaSalida.split('-')[2].split('|')[0] + '</p></th>' : '<th style="' + (this.FechaSalida.split('-')[2].split('|')[0] == obtenerPrimerUltimoDia(this.FechaSalida.split('-')[1], this.FechaSalida.split('-')[0]).split('|')[1] && $('#selTipoConsulta').val() == 0 ? 'border-right:1px solid #000000' : '') + '"><p style="text-align:center; ">' + this.FechaSalida.split('-')[2].split('|')[1] + '</p><p style="text-align:center;font-size:15px">' + this.FechaSalida.split('-')[2].split('|')[0] + '</p></th>');
        })
        strCabecera += '</tr>';
        //*********************

        //Armando el cuerpo

        $.each(jsonData, function (i) {
            SumaPorPersona = 0;
            var objCuerpo = this;
            strCuerpo += '<tr onclick="pintarTD($(this))" class="option colorear" style="height:2.5em;vertical-align:middle; ">' +
                '<td style="vertical-align:middle;cursor:default">' + (i + 1) + '</td>' +
                '<td style="text-align:center;white-space:nowrap;vertical-align:middle;cursor:default; border-right:4px solid #6098b9">' + this.Placa + '</td>';

            $.each(jsonCabecera, function (j) {

                const num = objCuerpo[this.FechaSalida.split('|')[0]] == 0 ? '' : objCuerpo[this.FechaSalida.split('|')[0]];

                SumaPorPersona += Number(objCuerpo[this.FechaSalida.split('|')[0]]);
                strCuerpo += (objCuerpo[this.FechaSalida.split('|')[0]] > 0 ? '<td class="cantidad" data-fecha = "' + this.FechaSalida.split('|')[0] + '" style=" ' + (FechaActualInvertida == this.FechaSalida.split('|')[0] ? 'border-right:2px solid #4A4A48; border-left:2px solid #4A4A48;' : '') + '  vertical-align:middle;text-align:center; cursor:pointer;text-decoration: ; color:#4F73F9;' + (this.FechaSalida.split('-')[2].split('|')[0] == obtenerPrimerUltimoDia(this.FechaSalida.split('-')[1], this.FechaSalida.split('-')[0]).split('|')[1] && $('#selTipoConsulta').val() == 0 ? 'border-right:1px solid #000000' : '') + '">' + num + '</td>' : '<td class="cantidad" style=" ' + (FechaActualInvertida == this.FechaSalida.split('|')[0] ? 'border-right:2px solid #4A4A48; border-left:2px solid #4A4A48;' : '') + ' vertical-align:middle;text-align:center; cursor:default;' + (this.FechaSalida.split('-')[2].split('|')[0] == obtenerPrimerUltimoDia(this.FechaSalida.split('-')[1], this.FechaSalida.split('-')[0]).split('|')[1] && $('#selTipoConsulta').val() == 0 ? 'border-right:1px solid #000000' : '') + ' ">' + num + '</td>');
                ArrayFechas.push(this.FechaSalida.split('|')[0]);
            })

            strCuerpo += '<td  class="cantidad" style="vertical-align:middle;text-align:center; width:50px!important; border-left:4px solid #6098b9">' + SumaPorPersona.toFixed(1) + '</td>' +
                '</tr>';

        })

        //console.log(ArrayFechas);
        $('#tb' + codRp + ' thead').append(strCabecera);
        $('#tb' + codRp + ' tbody').append(strCuerpo);

        var SumaPorDia = ObjUtil.InicializarArreglo((jsonCabecera.length + 1), 0); //inicializando de ceros al array que contendra los totalizados.

        $('#tb' + codRp + ' > tbody  > tr').each(function () {
            $(this).find('.cantidad').each(function (i) {
                SumaPorDia[i] += Number($(this).text());
            });
        });

        var cantidadDeColumnasEnTabla = $("#tb" + codRp + " tbody tr:nth-child(1) td").length;
        var rwfoot = '';
        rwfoot += '<tr>';

        for (j = 0; j < cantidadDeColumnasEnTabla; j++) {
            if (cantidadDeColumnasEnTabla == 4 && fechaActual == $('#txtFechaInicio' + codRp + '').val() && fechaActual == $('#txtFechaFin' + codRp + '').val()) {
                switch (j) {

                    case 0:
                        rwfoot += '';
                        break;
                    case 1:
                        rwfoot += '<th colspan="2" style="text-align: center;white-space:nowrap">TOTAL POR DIA</th>';
                        break;
                    case 2:
                        rwfoot += '<th class="cantidad" style="text-align: center;background-color:#4A4A48; border-left:2px solid #4A4A48; border-right:2px solid #4A4A48" ></th>';
                        break;
                    case 3:
                        rwfoot += '<th class="cantidad" style="text-align: center;" ></th>';
                        break;
                }
            } else {
                switch (j) {

                    case 0:
                        rwfoot += '';
                        break;
                    //case 1:
                    //    rwfoot += '';
                    //    break;
                    case 1:
                        rwfoot += '<th colspan="2" style="text-align: center;white-space:nowrap">TOTAL POR DIA</th>';
                        break;
                    default:
                        rwfoot += '<th class="cantidad" style="text-align: center;' + (ArrayFechas[j - 2] == FechaActualInvertida ? 'background-color:#4A4A48; border-left:2px solid #4A4A48; border-right:2px solid #4A4A48' : '') + ' " ></th>';
                        break;
                }
            }
        }

        rwfoot += '</tr>';
        $("#tb" + codRp + " tfoot").append(rwfoot);
        $("#tb" + codRp + " tfoot th.cantidad").each(function (count) { // agregando totales de cantidad
            const suma = SumaPorDia[count].toFixed(1) == 0 ? '' : SumaPorDia[count].toFixed(1);
            $(this).html(suma);
        });
        //*****************


        //ARMANDO RESUMEN ===================================================================================
        $('#tbResumenRP129 thead').empty()
        $('#tbResumenRP129 tbody').empty()
        $('#tbResumenRP129 tfoot').empty()

        let arrayVueltas = []

        strCabeceraResumen += `<tr>
                                    <th colspan="2" style="text-align:center;width:150px">VUELTAS</th>
                                    <th colspan="${Number(jsonCabecera.length) + 1}" style="text-align:center">CANTIDAD DE UNIDADES</th>
                                </tr>`

        $('#tbResumenRP129 thead').append(strCabeceraResumen)

        //INSERTANDO VUELTAS EN EL ARRAY       

        $.each(jsonData, function (i) {
            var objCuerpo = this;
            $.each(jsonCabecera, function (j) {
                let Vuelta = Number(objCuerpo[this.FechaSalida.split('|')[0]]);
                if (Vuelta >= 0) {
                    let existeDato = arrayVueltas.indexOf(Vuelta)
                    if (existeDato < 0) {
                        arrayVueltas.push(Vuelta)
                    }
                }
            })
        })
        //ORDENAR ARRAY DE MENOR A MAYOR
        function comparar(a, b) { return a - b; }
        arrayVueltas.sort(comparar);

        var SumaPorDiaResumen
        let arrayUnidadesPorVuelta = []
        arrayVueltas.map(function (data, j) {
            SumaPorDiaResumen = ObjUtil.InicializarArreglo(jsonCabecera.length, 0);
            $('#tb' + codRp + ' > tbody  > tr').each(function () {
                $(this).find('.cantidad').each(function (i) {
                    let cantVuelta = Number($(this).text())
                    //data.toFixed(1)
                    if (i != SumaPorDiaResumen.length) {
                        if (cantVuelta == data.toFixed(1)) {
                            SumaPorDiaResumen[i] += 1
                        }
                    }
                });
            })

            arrayUnidadesPorVuelta.push(SumaPorDiaResumen)
        });

        let sumaUnidadesPorVuelta = 0;

        arrayVueltas.map(function (data, i) {
            if (Number(data) > 0) {
                sumaUnidadesPorVuelta = 0

                strCuerpoResumen += `<tr onclick="PintarTr($(this))" class="option colorear">
                                    <td colspan="2" style="text-align:center;border-right: 4px solid #6098b9;font-weight:700">${data.toFixed(1)}</td>`;

                arrayUnidadesPorVuelta[i].map(function (dataCabecera, j) {
                    sumaUnidadesPorVuelta += Number(dataCabecera)
                    strCuerpoResumen += `<td class="cantidadResumen" style="text-align:center;${dataCabecera > 0 ? 'color:#4F73F9' : ''}">${dataCabecera > 0 ? dataCabecera : ''}</td>`;
                })

                strCuerpoResumen += `<td  class="cantidadResumen" style="text-align:center;border-left: 4px solid #6098b9">${sumaUnidadesPorVuelta == 0 ? '' : sumaUnidadesPorVuelta}</td>
                                <tr>`;
            }
        })

        $('#tbResumenRP129 tbody').append(strCuerpoResumen)


        var SumaOperativosResumen = ObjUtil.InicializarArreglo((jsonCabecera.length + 1), 0); //inicializando de ceros al array que contendra los totalizados.
        var SumaInoperativosResumen = ObjUtil.InicializarArreglo((jsonCabecera.length + 1), 0); //inicializando de ceros al array que contendra los totalizados.

        $('#tbResumenRP129 > tbody  > tr').each(function (j) {
            $(this).find('.cantidadResumen').each(function (i) {
                SumaOperativosResumen[i] += Number($(this).text());
            });
        });

        var cantidadDeColumnasEnTablaResumen = $("#tbResumenRP129 tbody tr:nth-child(1) td").length;

        var rwfoot = '';
        rwfoot += '<tr>';

        for (j = 0; j < cantidadDeColumnasEnTablaResumen; j++) {
            if (cantidadDeColumnasEnTablaResumen == 3 && fechaActual == $('#txtFechaInicio' + codRp + '').val() && fechaActual == $('#txtFechaFin' + codRp + '').val()) {
                switch (j) {

                    case 0:
                        rwfoot += '<th colspan="2" style="text-align: center;white-space:nowrap">OPERATIVOS</th>';
                        break;
                    case 1:
                        rwfoot += '<th class="cantidadResumen" style="text-align: center;background-color:#4A4A48; border-left:2px solid #4A4A48; border-right:2px solid #4A4A48" ></th>';
                        break;
                    case 2:
                        rwfoot += '<th class="cantidadResumen" style="text-align: center;" ></th>';
                        break;
                }
            } else {
                switch (j) {


                    case 0:
                        rwfoot += '<th colspan="2" style="text-align: center;white-space:nowrap">OPERATIVOS</th>';
                        break;
                    default:
                        rwfoot += '<th class="cantidadResumen" style="text-align: center;' + (ArrayFechas[j - 1] == FechaActualInvertida ? 'background-color:#4A4A48; border-left:2px solid #4A4A48; border-right:2px solid #4A4A48' : '') + ' " ></th>';
                        break;
                }
            }
        }

        rwfoot += '</tr>';

        arrayUnidadesPorVuelta[0].map(function (dataCabecera, i) {
            SumaInoperativosResumen[i] = dataCabecera
        })

        rwfoot += '<tr>';

        for (j = 0; j < cantidadDeColumnasEnTablaResumen; j++) {
            if (cantidadDeColumnasEnTablaResumen == 3 && fechaActual == $('#txtFechaInicio' + codRp + '').val() && fechaActual == $('#txtFechaFin' + codRp + '').val()) {
                switch (j) {
                    case 0:
                        rwfoot += '<th colspan="2" style="text-align: center;white-space:nowrap">INOPERATIVOS</th>';
                        break;
                    case 1:
                        rwfoot += '<th class="cantidadResumen2" style="text-align: center;background-color:#4A4A48; border-left:2px solid #4A4A48; border-right:2px solid #4A4A48" ></th>';
                        break;
                    case 2:
                        rwfoot += '<th class="cantidadResumen2" style="text-align: center;" ></th>';
                        break;
                }
            } else {
                switch (j) {


                    case 0:
                        rwfoot += '<th colspan="2" style="text-align: center;white-space:nowrap">INOPERATIVOS</th>';
                        break;
                    default:
                        rwfoot += '<th class="cantidadResumen2" style="text-align: center;' + (ArrayFechas[j - 1] == FechaActualInvertida ? 'background-color:#4A4A48; border-left:2px solid #4A4A48; border-right:2px solid #4A4A48' : '') + ' " ></th>';
                        break;
                }
            }
        }

        rwfoot += '</tr>';

        $("#tbResumenRP129 tfoot").append(rwfoot);
        $("#tbResumenRP129 tfoot th.cantidadResumen").each(function (count) { // agregando totales de cantidadOperativasResumen
            $(this).html(SumaOperativosResumen[count] > 0 ? SumaOperativosResumen[count] : '');
        });

        let sumaUnidadesInoperativas = 0

        $("#tbResumenRP129 tfoot th.cantidadResumen2").each(function (count) { // agregando totales de cantidadInoperativosResumen
            sumaUnidadesInoperativas += Number(SumaInoperativosResumen[count])
            $(this).html(SumaInoperativosResumen[count] > 0 ? SumaInoperativosResumen[count] : '');
            if (count + 1 == SumaInoperativosResumen.length) {
                $(this).html(sumaUnidadesInoperativas > 0 ? sumaUnidadesInoperativas : '')
            }
        });

        //ARMANDO RESUMEN ===================================================================================



        $('#iconCargar' + codRp + '').css('display', 'none');
    })
}

function verResumenRP129() {

    $('#divResumenRP129').dialog({
        buttons: {
            //"Cerrar": () => {
            //    $('#divResumenRP129').dialog('close');
            //}
        },
        close: () => {
        }
    })

    $('#divResumenRP129').dialog("open");

}

function exportarDetalleRP129() {
    var opciones = {
        sistema: 'REPORTE DE VUELTAS POR UNIDAD',
        title: 'REPORTE DE VUELTAS POR UNIDAD',
        filename: 'REPORTE DE VUELTAS POR UNIDAD',
        empresa: nomEmpresa,
    }

    var parametros = {
        ruc: Ruc,
        nomUsuario: NomUsuario,

    }
    fnExcelReportDosTablas("tbRP129", "tbResumenRP129", opciones, parametros, "REPORTE DE VUELTAS POR UNIDAD")
}

async function searchUnit(rp) {
    const selectRuta = document.getElementById(`selTipoEntidad${rp}`);
    const selectUnidad = document.getElementById(`selectUnidad${rp}`);

    const request = {
        Procedimiento: "dbo.ProcReporteCantidadVuelta",
        Parametro: selectRuta.value,
        Indice: 12
    }

    const response = await fetch(urlGeneral, DataFetch(request, "POST")).then(res => res.json());
    const data = response["dt0"];

    selectUnidad.innerHTML = "";

    const option = document.createElement("option");
    option.value = 0;
    option.textContent = "Todos";

    selectUnidad.appendChild(option);

    data.forEach(unidad => {
        const option = document.createElement("option");
        option.value = unidad.CodUnidad;
        option.textContent = unidad.NomUnidad;

        selectUnidad.appendChild(option);
    })

    $(`#selectUnidad${rp}`).select2();

    LimpiarTabla(1, rp);
}

//**********************************REPORTE 129******************************************


//*******************************************REPORTE 130*********************************************************************
let arrayTablaRP130 = []
let codigoQR = ''

function cargarRP130() {
    $('#iconCargarRP130').css('display', '');

    const RP130 = 'RP130'

    $(`#tb${RP130} thead`).empty()
    $(`#tb${RP130} tbody`).empty()
    $(`#tb${RP130} tfoot`).empty()


    let codRuta = document.getElementById(`selTipoEntidad${RP130}`).value
    let fechaInicio = document.getElementById(`txtFechas${RP130}`).value
    let Ejecutado = document.getElementById(`selectEjecutado${RP130}`).value
    //let viajes = document.getElementById(`selectViajes${RP130}`).value
    let lado = document.getElementById(`selLado${RP130}`).value

    if (arrayTablaRP130.length != 0) {
        ListarRP130()
    } else {
        let Data = {
            Procedimiento: 'ProcLiquidacionSubsidio',
            Parametro: `${codRuta}|${fechaInicio}|${Ejecutado}|${lado}`,//${fechaFin}|
            Indice: 14
        }

        fetch(UrlGeneral, DataFetch(Data, 'POST')).then(res => res.json())
            .then(Datos => {
                arrayTablaRP130 = Datos
                ListarRP130()
            })
    }
}

function ListarRP130() {
    const RP130 = 'RP130'
    let fechaInicio = document.getElementById(`txtFechas${RP130}`).value

    let agrupados = document.getElementById(`selectAgrupado${RP130}`).value

    const jsonData = arrayTablaRP130['dt0']
    codigoQR = arrayTablaRP130['dt1'].length == 0 ? '' : arrayTablaRP130['dt1'][0].CodigoQr

    //DATOS PARA IMPRESION Y EXPORTANCION===========================
    document.getElementById("qrcode").innerHTML = ""
    let qrcode = new QRCode(document.getElementById("qrcode"), {
        text: `ID: ${codigoQR}
                   Usuario: ${NomUsuario}
                   ${fechaActual}`,
        width: 110,
        height: 110,
        colorDark: "#000000",
        colorLight: "#ffffff",
        correctLevel: QRCode.CorrectLevel.H
    });

    let strCabecera = ''
    let strCuerpo = ''
    let strFooter = ''
    let sumaImportePropietario = 0
    let sumaComercial = 0
    let sumaLimite = 0
    let sumaNoComercial = 0
    let sumaImporteOperador = 0
    let sumaImporteTotal = 0
    let contador = 0

    //sumas agrupadas
    let sumaComercialAgrupada = 0
    let sumaComercialLimitado = 0
    let sumaNoComercialAgrupada = 0
    let sumaImportePropietarioAgrupada = 0
    let sumaImporteOperadorAgrupada = 0
    let sumaImporteTotalAgrupada = 0
    let sumaViajesAgrupada = 0
    let sumaLadoA = 0
    let sumaLadoB = 0
    let serviciosAgrupada = ''
    let horaInicio = ''
    let horaFin = ''

    strCabecera += `<tr>
                        <th style="vertical-align:middle;text-align:center" rowspan="3">N°</th>
                        <th style="vertical-align:middle;text-align:center" rowspan="3">FECHA</th>
                        <th colspan="${agrupados == 1 ? 14 : 13}"></th>
                        <th style="text-align:center" colspan="2">SUBSIDIO</th>
                    </tr>`

    strCabecera += `<tr>
                        <th style="text-align:center" colspan="3">UNIDAD</th>
                        <th style="text-align:center" colspan="2" class="hide-subsidio">CONDUCTOR</th>
                        <th style="text-align:center" colspan="${agrupados == 1 ? 4 : 3}">OPERACIÓN</th>
                        <th style="text-align:center" colspan="2">KILOMETRAJE</th>
                        ${agrupados == 1 ? '<th style="text-align:center" colspan="1" rowspan="2">PROMEDIO <p>ADHERENCIA</p></th>' : ''}
                        <th rowspan="2" style="white-space:nowrap;vertical-align:middle; text-align:center">FACTOR</th>
                        <th colspan="2" style="white-space:nowrap;text-align:center">PROPIETARIO</th>
                        <th colspan="2" style="white-space:nowrap;text-align:center">OPERADOR</th>
                        <th rowspan="2" style="white-space:nowrap;text-align:center;vertical-align:middle">IMP. TOTAL</th>
                    </tr >`

    strCabecera += `<tr>
                        <th style="white-space:nowrap;text-align:center">TIPO</th>
                        <th style="white-space:nowrap; text-align:center">ASIE.</th>
                        <th style="white-space:nowrap; text-align:center" class="hide-subsidio">PADRON</th>
                        <th style="white-space:nowrap; text-align:center">PLACA</th>
                        <th style="white-space:nowrap" class="hide-subsidio">CODIGO</th>
                        <th style="white-space:nowrap" class="hide-subsidio">NOMBRE</th>
                        <th style="white-space:nowrap" class="hide-subsidio">SERVICIO</th>
                        <th style="white-space:nowrap; text-align:center">H. INICIO</th>
                        <th style="white-space:nowrap; text-align:center">H. FIN</th>`

    if (agrupados == 1) {
        strCabecera += `<th style="white-space:nowrap" class="hide-subsidio">LADO A</th>
                            <th style="white-space:nowrap" class="hide-subsidio">LADO B</th>`
    } else {
        strCabecera += `<th colspan="1" style="text-align:center;white-space:nowrap">SENTIDO</th>`
    }

    strCabecera += `${agrupados == 1
        ? `<th style="white-space:nowrap" class="hide-subsidio">N° VIAJES</th>
                            <th style="white-space:nowrap; text-align:center">N° V. EJEC.</th>
                            <th style="white-space:nowrap; text-align:center">N° V. LIM.</th>`
        : ''}
                        <th style="white-space:nowrap" class="hide-subsidio">COMERCIAL</th>
                        <th style="white-space:nowrap" class="hide-subsidio">NO COMERCIAL</th>
                        <th style="white-space:nowrap; text-align:center">EJEC.</th>
                        <th style="white-space:nowrap; text-align:center">LIM.</th>
                        <th style="white-space:nowrap;text-align:center">FAC. KM.</th>
                        <th style="white-space:nowrap;text-align:center">TOTAL</th>
                        <th style="white-space:nowrap;text-align:center">FAC. KM.</th>
                        <th style="white-space:nowrap;text-align:center">TOTAL</th>
                    </tr>`
    $(`#tb${RP130} thead`).prop('style','position:sticky; top:0px')
    $(`#tb${RP130} thead`).append(strCabecera)


    if (jsonData.length == 0) {
        LimpiarRP130(2, 2)
        $('.hide-subsidio').remove();
        $('#iconCargarRP130').css("display", "none")
        return;
    }

    let limiteVueltas = 0;

    jsonData.map(function (data, i) {
        limiteVueltas += 1;

        sumaComercial += Number(data.DistanciaComercial)
        sumaNoComercial += Number(data.DistanciaNoComercial)

        if (data.NroViaje <= 6 && agrupados == 1) {
            sumaImporteTotal += Number(data.Importe)
            sumaImportePropietario += Number(data.ImportePropietario)
            sumaImporteOperador += Number(data.ImporteOperador)
        }
        else if (agrupados == 0) {
            sumaImporteTotal += Number(data.Importe)
            sumaImportePropietario += Number(data.ImportePropietario)
            sumaImporteOperador += Number(data.ImporteOperador)
        }

        if (agrupados == 1) { // agrupados  
            // sumando las agrupaciones
            sumaComercialAgrupada += Number(data.DistanciaComercial)
            if (data.NroViaje <= 6) sumaComercialLimitado += Number(data.DistanciaComercial);
            sumaNoComercialAgrupada += Number(data.DistanciaNoComercial)
            if (data.NroViaje <= 6) sumaImportePropietarioAgrupada += Number(data.ImportePropietario)
            if (data.NroViaje <= 6) sumaImporteOperadorAgrupada += Number(data.ImporteOperador)
            if (data.NroViaje <= 6) sumaImporteTotalAgrupada += Number(data.Importe)
            sumaViajesAgrupada++

            if (data.Lado === 'A') {
                sumaLadoA++
            } else {
                sumaLadoB++
            }

            if (serviciosAgrupada.indexOf(data.NroServicio) < 0) {
                serviciosAgrupada += data.NroServicio + ','
            }

            if (horaInicio.length == 0) {
                horaInicio = data.HoraInicio
            }

            horaFin = data.HoraFin

            let datoPlacaPosterior = ''
            let datoPersonaPosterior = ''

            if (jsonData[i + 1] == undefined) {//validando que no falle por undefined
                datoPosterior = "cualquiertexto"
            } else {
                datoPlacaPosterior = jsonData[i + 1].PlacaUnidad
                datoPersonaPosterior = jsonData[i + 1].CodigoPersona
            }

            let a = data.CodigoPersona
            let b = datoPersonaPosterior
            let c = data.PlacaUnidad
            let d = datoPlacaPosterior

            //if (c != d && a == b || a != b && c != d || a != b && c == d) { //si es diferente es porque la serie de grupos acabo aqui      
            if (c != d) { //si es diferente es porque la serie de grupos acabo aqui      
                contador++
                serviciosAgrupada = serviciosAgrupada.substring(0, serviciosAgrupada.length - 1)
                sumaLimite += Number(sumaComercialLimitado)

                strCuerpo += `<tr onClick="PintarTr($(this))" class="option colorear">
                                        <td style="text-align:center" >${contador}</td>
                                        <td style="text-align:center" >${fechaInicio}</td>
                                        <td style="text-align:center;white-space:nowrap" >${data.ClaseUnidad}</td>
                                        <td style="text-align:center;white-space:nowrap" >${data.NumAsientos}</td>
                                        <td style="text-align:center;white-space:nowrap" class="hide-subsidio">${data.PadronUnidad}</td>
                                        <td style="text-align:center;white-space:nowrap" >${data.PlacaUnidad}</td>
                                        <td style="text-align:center;white-space:nowrap" class="hide-subsidio">${data.CodigoPersona}</td>
                                        <td style="text-align:left;white-space:nowrap" class="hide-subsidio">${data.NomPersona}</td>
                                        <td style="text-align:center" class="hide-subsidio">${serviciosAgrupada}</td>
                                        <td style="text-align:center" >${horaInicio}</td>
                                        <td style="text-align:center" >${horaFin}</td>
                                        <td style="text-align:center" class="hide-subsidio">${sumaLadoA}</td>
                                        <td style="text-align:center" class="hide-subsidio">${sumaLadoB}</td>
                                        <td style="text-align:center" class="hide-subsidio">${sumaViajesAgrupada}</td>
                                        <td style="text-align:center" >${sumaViajesAgrupada}</td>
                                        <td style="text-align:center" >${sumaViajesAgrupada > 6 ? 6 : sumaViajesAgrupada}</td>
                                        <td style="text-align:center" class="hide-subsidio">${sumaComercialAgrupada.toFixed(2)}</td>
                                        <td style="text-align:center" class="hide-subsidio">${sumaNoComercialAgrupada.toFixed(2)}</td>
                                        <td style="text-align:center">${sumaComercialAgrupada.toFixed(2)}</td>
                                        <td style="text-align:center">${sumaComercialLimitado.toFixed(2)}</td>
                                        <td style="text-align:center">100%</td>
                                        <td style="text-align:center" >${data.MontoFactor.toFixed(2)}</td>
                                        <td style="text-align:center">${data.FactorPropietario.toFixed(2)}</td>
                                        <td style="text-align:center">${sumaImportePropietarioAgrupada.toFixed(2)}</td>
                                        <td style="text-align:center">${data.FactorOperador.toFixed(2)}</td>
                                        <td style="text-align:center">${sumaImporteOperadorAgrupada.toFixed(2)}</td>
                                        <td style="text-align:center" >${sumaImporteTotalAgrupada.toFixed(2)}</td>
                                    </tr>`

                sumaComercialAgrupada = 0
                sumaComercialLimitado = 0
                sumaNoComercialAgrupada = 0
                sumaImportePropietarioAgrupada = 0
                sumaImporteOperadorAgrupada = 0
                sumaImporteTotalAgrupada = 0
                sumaViajesAgrupada = 0
                sumaLadoA = 0
                sumaLadoB = 0
                serviciosAgrupada = ''
                horaInicio = ''
                horaFin = ''
                limiteVueltas = 0
            }

        } else { //no agrupados                    

            strCuerpo += `<tr onClick="PintarTr($(this))" class="option colorear">
                                <td style="text-align:center" >${i + 1}</td>
                                <td style="text-align:center" >${fechaInicio}</td>
                                <td style="text-align:center;white-space:nowrap" >${data.ClaseUnidad}</td>
                                <td style="text-align:center;white-space:nowrap" >${data.NumAsientos}</td>
                                <td style="text-align:center;white-space:nowrap" class="hide-subsidio">${data.PadronUnidad}</td>
                                <td style="text-align:center;white-space:nowrap" >${data.PlacaUnidad}</td>
                                <td style="text-align:center;white-space:nowrap" class="hide-subsidio">${data.CodigoPersona}</td>
                                <td style="text-align:left;white-space:nowrap" class="hide-subsidio">${data.NomPersona}</td>
                                <td style="text-align:center" class="hide-subsidio">${data.NroServicio}</td>
                                <td style="text-align:center" >${data.HoraInicio}</td>
                                <td style="text-align:center" >${data.HoraFin}</td>
                                <td colspan="1" style="text-align:center">${data.Lado}</td>
                                <td style="text-align:center" class="hide-subsidio">${data.DistanciaComercial.toFixed(2)}</td>
                                <td style="text-align:center" class="hide-subsidio">${data.DistanciaNoComercial.toFixed(2)}</td>
                                <td style="text-align:center">${data.DistanciaComercial.toFixed(2)}</td>
                                <td style="text-align:center">${data.DistanciaComercial.toFixed(2)}</td>
                                <td style="text-align:center" >${data.MontoFactor.toFixed(2)}</td>
                                <td style="text-align:center">${data.FactorPropietario.toFixed(2)}</td>
                                <td style="text-align:center">${data.ImportePropietario.toFixed(2)}</td>
                                <td style="text-align:center">${data.FactorOperador.toFixed(2)}</td>
                                <td style="text-align:center">${data.ImporteOperador.toFixed(2)}</td>
                                <td style="text-align:center" >${data.Importe.toFixed(2)}</td>
                            </tr>`
        }


    })

    strFooter += `<tr>
                    <th colspan="${agrupados == 1 ? 8 : 7}" style="text-align:center;color:#6098B9"></th>
                    <th >TOTALES</th>
                    <th style="text-align:center">` + addCommas(`${sumaComercial.toFixed(2)}`) + `</th>
                    <th style="text-align:center">` + (agrupados == 1 ? addCommas(`${sumaLimite.toFixed(2)}`) : '') + `</th>
                    <th colspan="${agrupados == 1 ? 3 : 2}"></th>
                    <th style="text-align:center" >` + addCommas(`${sumaImportePropietario.toFixed(2)}`) + `</th>
                    <th></th>
                    <th style="text-align:center" >` + addCommas(`${sumaImporteOperador.toFixed(2)}`) + `</th>
                    <th style="text-align:center">` + addCommas(`${sumaImporteTotal.toFixed(2)}`) + `</th>
                    </tr>`


    $(`#tb${RP130} tbody`).append(strCuerpo)
    $(`#tb${RP130} tfoot`).append(strFooter)

    // $('.hide-subsidio').css({display: 'none'});
    $('.hide-subsidio').remove();

    $('#iconCargarRP130').css('display', 'none');
}

function exportarDetalleRP130() {
    var opciones = {
        sistema: 'REPORTE PARA LIQUIDACION DE SUBSIDIO',
        title: 'REPORTE PARA LIQUIDACION DE SUBSIDIO',
        filename: 'REPORTE PARA LIQUIDACION DE SUBSIDIO',
        empresa: nomEmpresa,
    }

    var parametros = {
        ruc: Ruc,
        nomUsuario: NomUsuario,

    }
    fnExcelReport("tbRP130", opciones, parametros, "REPORTE DE LIQUIDACION DE SUBSIDIO")
}

function LimpiarRP130(tipo, LimpiarArray) {
    if (LimpiarArray == 1) {
        arrayTablaRP130 = []
    }

    var strCuerpo = '';

    $('#tbRP130 tbody').empty();
    $('#tbRP130 tfoot').empty();

    if (tipo == 1) {
        strCuerpo = '<tr>' +
            '<td colspan="22" style="text-align:center">Presione el boton Procesar..</td>' +
            '</tr>';
    } else {
        strCuerpo = '<tr>' +
            '<td colspan="22" style="text-align:center">No hay información con los datos seleccionados</td>' +
            '</tr>';
    }


    $('#tbRP130 tbody').append(strCuerpo);
}

//************************************************REPORTE 130********************************************************************

//************************************************REPORTE 132********************************************************************
const ocultarMostrarDetallado = (codRP) => {
    const selectTipoConsulta = document.querySelector(`#select-tipo-consulta-${codRP}`)
    const esDetallado = selectTipoConsulta.value == 0
    $('.c-detallado').css({ 'display': esDetallado ? '' : 'none' })
    $('.c-consolidado').css({ 'display': esDetallado ? 'none' : '' })
    $('.contable').css({ 'display': esDetallado ? 'none' : '' })
}

function mostrarContable(codRP) {
    let checkCont = document.getElementById('checkContable').checked
    $(`#div${codRP}`).css({ 'display': checkCont ? '' : 'none' })
    $('#divContenidoTablas').css({ 'display': checkCont ? 'none' : '' })
}

async function cargarRP132(codRP) {
    $(`#iconCargar${codRP}`).css('display', '');
    $(`#tb${codRP} thead`).empty()
    $(`#tb${codRP} tbody`).empty()
    $(`#tb${codRP} tfoot`).empty()

    $(`#${codRP}Imp thead`).empty()
    $(`#${codRP}Imp tbody`).empty()
    $(`#${codRP}Imp tfoot`).empty()


    const Data = {
        Procedimiento: 'ProcUnidadGrupo',
        Parametro: $(`#txt-fecha-${codRP}`).val(),
        Indice: 12
    }
    // let abc = tabla.querySelectorAll(".");
    // console.log(abc.length)
    const response = await fetch(UrlGeneral, DataFetch(Data, 'POST')).then(res => res.json())
    const arrGrupos = response['dt0']
    const arrControles = response['dt1']

    let strHeader = `
        <tr>
            <th>GRUPO</th>
            <th style="text-align:center">PAD.</th>
            <th>CONDUCTOR</th>
            <th style="text-align:center; white-space: nowrap">VUELTAS</th>
            <th style="text-align:right; white-space: nowrap" title="Producción Efectivo">P. EFECTIVO</th>
            <th style="text-align:right; white-space: nowrap" title="Producción Visa">P. VISA</th>
            <th style="text-align:right; white-space: nowrap" title="Producción Total">P. TOTAL</th>
            ${arrGrupos.length > 0 && arrControles.filter(c => c.CodConceptoClase == 1).map(c => `<th class="c-detallado" style="text-align:right; white-space: nowrap">${c.NomConcepto.toUpperCase()}</th>`)
        }
            <th class="c-consolidado" style="text-align:right; white-space: nowrap" title="Egreso Operativa">E. OPERATIVO</th>
            <th style="text-align:right; white-space: nowrap" title="Producción Operativa">P. OPERATIVA</th>
            ${arrGrupos.length > 0 && arrControles.filter(c => c.CodConceptoClase == 2).map(c => `<th class="c-detallado" style="text-align:right; white-space: nowrap">${c.NomConcepto.toUpperCase()}</th>`)
        }
            <th class="c-consolidado " style="text-align:right; white-space: nowrap" title="Egreso Administrativo">E. ADMINISTRATIVO</th>
            <th  style="text-align:right; white-space: nowrap" title="Producción Neta">P. ADMINISTRATIVA</th>
            <th  style="text-align:right; white-space: nowrap" title="Producción Mínima">P. MINIMA</th>
            <th  style="text-align:right; white-space: nowrap">SUMA DE DIFERENCIA</th>
            <th style="text-align:right; white-space: nowrap">VARIACION %</th>
        </tr>
    `

    let strHeaderContable = `
            <tr>
                <th>GRUPO</th>
                <th style="text-align:center">PAD.</th>
                <th>CONDUCTOR</th>
                <th style="text-align:center; white-space: nowrap">VUELTAS</th>
                <th style="text-align:right; white-space: nowrap" title="Producción Efectivo">P. EFECTIVO</th>
                <th style="text-align:right; white-space: nowrap" title="Producción Visa">P. VISA</th>
                <th style="text-align:right; white-space: nowrap" title="Producción Total">P. TOTAL</th>
                <th class="c-consolidado" style="text-align:right; white-space: nowrap" title="Egreso Operativa">E. OPERATIVO</th>
                <th style="text-align:right; white-space: nowrap" title="Producción Operativa">P. OPERATIVA</th>
            </tr>
        `

    $(`#${codRP}Imp thead`).append(strHeaderContable)
    $(`#tb${codRP} thead`).append(strHeader)

    if (arrGrupos.length === 0) {
        LimpiarTabla(2, codRP, false, 12)
        $(`#iconCargar${codRP}`).css('display', 'none');
        return
    }

    let strCuerpo = ''
    let strFooter = ''
    let cuerpoExp = ''
    let footExp = ''

    let vueltasGrupo = 0,
        produccionEfectivoGrupo = 0,
        produccionVisaGrupo = 0,
        pOperativoGrupo = 0,
        pAdministrativoGrupo = 0,
        produccionNetaGrupo = 0,
        produccionMinimaGrupo = 0,
        sumaDiferenciaGrupo = 0,
        variacionGrupo = 0

    let vueltasTotal = 0,
        produccionEfectivoTotal = 0,
        produccionVisaTotal = 0,
        pTotalNeto = 0,
        pOperativoNeto = 0,
        pAdministrativoNeto = 0,
        produccionNetaTotal = 0,
        produccionMinimaTotal = 0,
        sumaDiferenciaTotal = 0,
        variacionTotal = 0

    let primerUnidadDeGrupo = true

    arrGrupos.forEach((data, index) => {
        const pEfectivo = Number(data.ProduccionEfectivo);
        const pTarjeta = Number(data.ProduccionTarjeta);
        const pTotal = pEfectivo + pTarjeta;
        const pMinimo = Number(data.ProduccionMinima);
        const gOperativo = Number(data.MontoGastoOperativo);
        const gAdministrativo = Number(data.MontoGastoAdministrativo);
        const pOperativo = pTotal - gOperativo;
        const pAdministrativo = pOperativo - gAdministrativo;

        const neto = pTotal - (gOperativo + gAdministrativo)
        const sumaDiferencia = neto - pMinimo
        const variancia = ((neto - pMinimo) / pMinimo) * 100

        // if (data.CodGrupo == arrGrupos[index + 1]?.CodGrupo) {
        vueltasGrupo += Number(data.Vueltas)
        produccionEfectivoGrupo += pEfectivo
        produccionVisaGrupo += pTarjeta
        pTotalGrupo = produccionEfectivoGrupo + produccionVisaGrupo

        pOperativoGrupo += pOperativo
        pAdministrativoGrupo += pAdministrativo

        produccionNetaGrupo += neto
        produccionMinimaGrupo += pMinimo
        sumaDiferenciaGrupo += sumaDiferencia
        // }

        let egresosOperativos = 0
        let egresosAdministrativos = 0

        strCuerpo += `
            <tr>
                <td ${primerUnidadDeGrupo ? 'style="font-weight: bold; white-space:nowrap""' : ''}>${primerUnidadDeGrupo ? data.NomGrupo : ''}</td>
                <td style="text-align:center">${data.PadronUnidad}</td>
                <td style="white-space:nowrap">${data.NomConductor}</td>
                <td style="text-align:center">${data.Vueltas}</td>
                <td style="text-align:right">${pEfectivo.toFixed(2)}</td>
                <td style="text-align:right">${pTarjeta.toFixed(2)}</td>                
                <td style="text-align:right">${pTotal.toFixed(2)}</td>
                ${arrGrupos.length > 0 && arrControles.filter(c => c.CodConceptoClase == 1).map(c => {
            egresosOperativos += Number(data[c.NomConcepto] ? data[c.NomConcepto] : 0)
            return `<td class="c-detallado" style="text-align:right; white-space: nowrap">${(data[c.NomConcepto] ? data[c.NomConcepto] : 0).toFixed(2)}</td>`
        })
            }
                <td class="c-consolidado" style="text-align:right">${egresosOperativos.toFixed(2)}</td>
                <td style="text-align:right">${pOperativo.toFixed(2)}</td>
                ${arrGrupos.length > 0 && arrControles.filter(c => c.CodConceptoClase == 2).map(c => {
                egresosAdministrativos += Number(data[c.NomConcepto] ? data[c.NomConcepto] : 0)
                return `<td class="c-detallado" style="text-align:right; white-space: nowrap">${(data[c.NomConcepto] ? data[c.NomConcepto] : 0).toFixed(2)}</td>`
            })
            }
                <td class="c-consolidado  " style="text-align:right">${egresosAdministrativos.toFixed(2)}</td>
                <td  style="text-align:right">${pAdministrativo.toFixed(2)}</td>
                <td  style="text-align:right">${pMinimo.toFixed(2)}</td>
                <td  style="text-align:right">${sumaDiferencia.toFixed(2)}</td>
                <td  style="text-align:right">${variancia.toFixed(2)} %</td>
            </tr>
        `

        cuerpoExp += `
            <tr>
                <td ${primerUnidadDeGrupo ? 'style="font-weight: bold; white-space:nowrap""' : ''}>${primerUnidadDeGrupo ? data.NomGrupo : ''}</td>
                <td style="text-align:center">${data.PadronUnidad}</td>
                <td style="white-space:nowrap">${data.NomConductor}</td>
                <td style="text-align:center">${data.Vueltas}</td>
                <td style="text-align:right">${pEfectivo.toFixed(2)}</td>
                <td style="text-align:right">${pTarjeta.toFixed(2)}</td>                
                <td style="text-align:right">${pTotal.toFixed(2)}</td>
                <td class="c-consolidado" style="text-align:right">${egresosOperativos.toFixed(2)}</td>
                <td style="text-align:right">${pOperativo.toFixed(2)}</td>
            </tr>
        `

        primerUnidadDeGrupo = false

        if (data.CodGrupo != arrGrupos[index + 1]?.CodGrupo) {

            variacionGrupo = ((produccionNetaGrupo - produccionMinimaGrupo) / produccionMinimaGrupo) * 100

            strCuerpo += `
                <tr>
                    <th style=""></th>
                    <th style="text-align:center">TOTAL</th>
                    <th style=""></th>
                    <th style="text-align:center">${vueltasGrupo}</th>
                    <th style="text-align:right">${produccionEfectivoGrupo.toFixed(2)}</th>
                    <th style="text-align:right">${produccionVisaGrupo.toFixed(2)}</th>
                    <th style="text-align:right">${pTotalGrupo.toFixed(2)}</th>
                    ${arrGrupos.length > 0 && arrControles.filter(c => c.CodConceptoClase == 1).map(c => {
                return `<th class="c-detallado" style="text-align:right; white-space: nowrap"></th>`
            })
                }
                    <th class="c-consolidado" style="text-align:right"></th>
                    <th style="text-align:right">${pOperativoGrupo.toFixed(2)}</th>
                    ${arrGrupos.length > 0 && arrControles.filter(c => c.CodConceptoClase == 2).map(c => {
                    return `<th class="c-detallado" style="text-align:right; white-space: nowrap"></th>`
                })
                }
                    <th class="c-consolidado " style="text-align:right"></th>
                    <th  style="text-align:right">${pAdministrativoGrupo.toFixed(2)}</th>
                    <th  style="text-align:right">${produccionMinimaGrupo.toFixed(2)}</th>
                    <th  style="text-align:right">${sumaDiferenciaGrupo.toFixed(2)}</th>
                    <th  style="text-align:right">${variacionGrupo.toFixed(2)} %</th>
                </tr>
            `

            cuerpoExp += `
                <tr>
                    <th style=""></th>
                    <th style="text-align:center">TOTAL</th>
                    <th style=""></th>
                    <th style="text-align:center">${vueltasGrupo}</th>
                    <th style="text-align:right">${produccionEfectivoGrupo.toFixed(2)}</th>
                    <th style="text-align:right">${produccionVisaGrupo.toFixed(2)}</th>
                    <th style="text-align:right">${pTotalGrupo.toFixed(2)}</th>
                    <th class="c-consolidado" style="text-align:right"></th>
                    <th style="text-align:right">${pOperativoGrupo.toFixed(2)}</th>
                </tr>
            `

            vueltasTotal += vueltasGrupo
            produccionEfectivoTotal += produccionEfectivoGrupo
            produccionVisaTotal += produccionVisaGrupo
            pTotalNeto += pTotalGrupo
            pOperativoNeto += pOperativoGrupo
            pAdministrativoNeto += pAdministrativoGrupo
            produccionNetaTotal += produccionNetaGrupo
            produccionMinimaTotal += produccionMinimaGrupo
            sumaDiferenciaTotal += sumaDiferenciaGrupo

            vueltasGrupo = 0
            produccionEfectivoGrupo = 0
            produccionVisaGrupo = 0
            pTotalGrupo = 0
            pOperativoGrupo = 0
            pAdministrativoGrupo = 0
            produccionNetaGrupo = 0
            produccionMinimaGrupo = 0
            sumaDiferenciaGrupo = 0
            variacionGrupo = 0
            primerUnidadDeGrupo = true
        }

        if (index + 1 === arrGrupos.length) {
            strCuerpo += `
                <tr>
                    <td style=""></td>
                    <td style="text-align:center"></td>
                    <td style=""></td>
                    <td style="text-align:center"></td>
                    <td style="text-align:right"></td>
                    <td style="text-align:right"></td>
                    <td style="text-align:right"></td>
                    ${arrGrupos.length > 0 && arrControles.filter(c => c.CodConceptoClase == 1).map(c => {
                return `<td  class="c-detallado" style="text-align:right; white-space: nowrap"></td>`
            })
                }
                    <th class="c-consolidado" style="text-align:right"></th>
                    <td style="text-align:right"></td>
                    ${arrGrupos.length > 0 && arrControles.filter(c => c.CodConceptoClase == 2).map(c => {
                    return `<td  class="c-detallado" style="text-align:right; white-space: nowrap"></td>`
                })
                }
                    <th class="c-consolidado" style="text-align:right"></th>
                    <td style="text-align:right"></td>
                    <td style="text-align:right"></td>
                    <td style="text-align:right"></td>
                    <td style="text-align:right"></td>
                </tr>
            `

            cuerpoExp += `
                <tr>
                    <td style=""></td>
                    <td style="text-align:center"></td>
                    <td style=""></td>
                    <td style="text-align:center"></td>
                    <td style="text-align:right"></td>
                    <td style="text-align:right"></td>
                    <td style="text-align:right"></td>
                    <th class="c-consolidado" style="text-align:right"></th>
                    <td style="text-align:right"></td>
                </tr>
            `
        }
    })

    variacionTotal = ((produccionNetaTotal - produccionMinimaTotal) / produccionMinimaTotal) * 100

    strFooter += `
            <tr>
                <th></th>
                <th style="text-align:center; white-space:nowrap">TOTAL BRUTO</th>
                <th></th>
                <th style="text-align:center">${vueltasTotal}</th>
                <th style="text-align:right">${produccionEfectivoTotal.toFixed(2)}</th>
                <th style="text-align:right">${produccionVisaTotal.toFixed(2)}</th>
                <th style="text-align:right">${pTotalNeto.toFixed(2)}</th>
                ${arrGrupos.length > 0 && arrControles.filter(c => c.CodConceptoClase == 1).map(c => {
        return `<th class="c-detallado" style="text-align:right; white-space: nowrap"></th>`
    })
        }
                <th class="c-consolidado" style="text-align:right"></th>
                <th style="text-align:right">${pOperativoNeto.toFixed(2)}</th>
                ${arrGrupos.length > 0 && arrControles.filter(c => c.CodConceptoClase == 2).map(c => {
            return `<th class="c-detallado" style="text-align:right; white-space: nowrap"></th>`
        })
        }
                <th class="c-consolidado " style="text-align:right"></th>
                <th  style="text-align:right">${pAdministrativoNeto.toFixed(2)}</th>
                <th  style="text-align:right">${produccionMinimaTotal.toFixed(2)}</th>
                <th  style="text-align:right">${sumaDiferenciaTotal.toFixed(2)}</th>
                <th  style="text-align:right">${variacionTotal.toFixed(2)} %</th>
            </tr>
        `

    footExp += `
        <tr>
            <th></th>
            <th style="text-align:center; white-space:nowrap">TOTAL BRUTO</th>
            <th></th>
            <th style="text-align:center">${vueltasTotal}</th>
            <th style="text-align:right">${produccionEfectivoTotal.toFixed(2)}</th>
            <th style="text-align:right">${produccionVisaTotal.toFixed(2)}</th>
            <th style="text-align:right">${pTotalNeto.toFixed(2)}</th>
            <th class="c-consolidado" style="text-align:right"></th>
            <th style="text-align:right">${pOperativoNeto.toFixed(2)}</th>
        </tr>
    `

    $(`#tb${codRP} tbody`).append(strCuerpo)
    $(`#tb${codRP} tfoot`).append(strFooter)
    $(`#${codRP}Imp tbody`).append(cuerpoExp)
    $(`#${codRP}Imp tfoot`).append(footExp)


    ocultarMostrarDetallado(codRP)
    $(`#iconCargar${codRP}`).css('display', 'none');
}

//************************************************REPORTE 132********************************************************************

//************************************************REPORTE 133********************************************************************
async function cargarRP133(codRP) {
    $(`#iconCargar${codRP}`).css('display', '');

    $(`#tb${codRP} tbody`).empty()
    $(`#tb${codRP} tfoot`).empty()

    const Data = {
        Procedimiento: 'dbo.ProcUnidadTrackReprogracion',
        Parametro: $(`#txt-fecha-${codRP}`).val(),
        Indice: 10
    }

    const response = await fetch(UrlGeneral, DataFetch(Data, 'POST')).then(res => res.json())
    const arrReprogramados = response['dt0']
    let strCuerpo = ''

    if (arrReprogramados.length === 0) {
        LimpiarTabla(2, codRP, false, 16)
        $(`#iconCargar${codRP}`).css('display', 'none');
        $(`#tb${codRP}`).css({ border: 'none' })
        return
    }

    // $(`#tb${codRP}`).css({border: '2px solid #6098B9'})

    arrReprogramados.forEach((data, index) => {
        strCuerpo += `
            <tr>
                <td >${index + 1}</td>
                <td style="text-align:center">${data.FechaOperacion}</td>
                <td style="text-align:center">${data.FechaHoraRegistro}</td>
                <td style="text-align:center">${data.ReprogramacionTipo}</td>
                <td style="text-align:center; border-left: 4px solid #6098B9">${data.NomRuta}</td>
                <td style="text-align:center">${data.NomUnidad}</td>
                <td style="text-align:center">${data.NomConductor}</td>
                <td style="text-align:center">${data.NomControl}</td>
                <td style="text-align:center">${data.FechaHoraPronosticado}</td>
                <td style="text-align:center; border-left: 4px solid #6098B9"">${data.NomRutaDos}</td>
                <td style="text-align:center">${data.NomUnidadDos}</td>
                <td style="text-align:center">${data.NomConductorDos}</td>
                <td style="text-align:center">${data.NomControlDos}</td>
                <td style="text-align:center">${data.FechaHoraPronosticadoUnidadDos}</td>
            </tr>
        `
    })

    $(`#tb${codRP} tbody`).append(strCuerpo)

    $(`#iconCargar${codRP}`).css('display', 'none');
}

//************************************************REPORTE 133********************************************************************

//************************************************REPORTE 134********************************************************************

async function cargarRP134(codRP) {
    $(`#iconCargar${codRP}`).css('display', '');

    $(`#tb${codRP} thead`).empty();
    $(`#tb${codRP} tbody`).empty();
    $(`#tb${codRP} tfoot`).empty();

    const Data = {
        Procedimiento: 'ProcBoletoTransaccionReporteV2',
        Parametro: $(`#txt-fecha-${codRP}`).val() + '|' + $(`#txt-fecha-fin-${codRP}`).val() + '|' + $(`#select-ruta-${codRP}`).val() + '|' + $(`#select-unidad-${codRP}`).val() + '|' + $(`#select-persona-${codRP}`).val() + '|1|' + $(`input[name="optradio"]:checked`).val(),
        Indice: 134
    }

    const response = await fetch(UrlGeneral, DataFetch(Data, 'POST')).then(res => res.json())
    const datos = response['dt0']
    const boletos = response['dt1']

    let boletosAbexa = ''

    boletos?.forEach((boleto, index) => {
        boletosAbexa += `<th style="text-align:center; ${index == 0 ? 'border-left: 1px solid #000' : ''}">${boleto.NomBoleto}</th>`
    })

    const cabecera = `
            <tr>
                <th rowspan="2" style="text-align:center; vertical-align: middle">N</th>
                <th rowspan="2" style="text-align:center; vertical-align: middle">FECHA</th>
                <th rowspan="2" style="text-align:center; vertical-align: middle">PAD.</th>
                <th rowspan="2" style="text-align:center; vertical-align: middle">PLACA</th>
                <th rowspan="2" style="text-align:center; vertical-align: middle">CONDUCTOR</th>
                <th colspan="${boletos?.length + 1}" style="text-align:center;border-left: 1px solid #000">S-ABEXA</th>
                <th colspan="1" style="text-align:center;border-left: 1px solid #000">S-OTRO</th>
                <th style="text-align:center;border-left: 1px solid #000">TOTAL</th>
            </tr>
            <tr>
                ${boletosAbexa}
                <th style="text-align:center">SUB TOTAL</th>
                <th style="text-align:center;border-left: 1px solid #000">SUB TOTAL</th>
                <th style="text-align:center;border-left: 1px solid #000">GENERAL</th>
            </tr>
        `

    $(`#tb${codRP} thead`).append(cabecera)

    if (!boletos) {
        LimpiarTabla(2, codRP, false, 8)
        $(`#iconCargar${codRP}`).css('display', 'none');
        return
    }

    let cuerpo = '';
    let arrSumFooter = boletos.map(b => 0);

    datos.forEach((data, i) => {
        let subTotal = 0;

        cuerpo += `
            <tr>
                <td style="text-align:center">${i + 1}</td>
                <td style="text-align:center">${data.Fecha}</td>
                <td style="text-align:center">${data.PadronUnidad}</td>
                <td style="text-align:center">${data.PlacaUnidad}</td>
                <td style="text-align:center">${data.Persona}</td>`

        boletos.forEach((boleto, j) => {
            const cantidad = Number(data[boleto.NomBoleto]) ? Number(data[boleto.NomBoleto]) : 0
            subTotal += cantidad;
            arrSumFooter[j] += cantidad

            cuerpo += `<td style="text-align:center; ${j == 0 ? 'border-left: 1px solid #000' : ''}">${cantidad}</td>`;
        })

        cuerpo += `
                <td style="text-align:center">${subTotal ? subTotal : 0}</td>
                <td style="text-align:center;border-left: 1px solid #000">0</td>
                <td style="text-align:center;border-left: 1px solid #000">${subTotal ? subTotal : 0}</td>
            </tr>
        `
    })

    $(`#tb${codRP} tbody`).append(cuerpo)

    let footer = `
        <tr>
            <th colspan="5" style="text-align:center">TOTALES</th>`

    arrSumFooter.forEach((c, i) => {
        footer += `<th style="text-align:center; ${i == 0 ? 'border-left: 1px solid #000' : ''}">${c ? c : 0}</th>`
    })

    footer += `
            <th style="text-align:center">${arrSumFooter.reduce((a, b) => a + b, 0) ? arrSumFooter.reduce((a, b) => a + b, 0) : 0}</th>
            <th style="text-align:center;border-left: 1px solid #000">0</th>
            <th style="text-align:center;border-left: 1px solid #000">${arrSumFooter.reduce((a, b) => a + b, 0) ? arrSumFooter.reduce((a, b) => a + b, 0) : 0}</th>
        </tr>`



    $(`#tb${codRP} tfoot`).append(footer)

    $(`#iconCargar${codRP}`).css('display', 'none');
}

//************************************************REPORTE 134********************************************************************

//************************************************REPORTE 135********************************************************************

async function cargarRP135(codRP) {

    const fechaInicio = document.getElementById("input-fecha-inicio-" + codRP);
    const fechaFin = document.getElementById("input-fecha-fin-" + codRP);
    const selectRuta = document.querySelector('#select-filtro-ruta-' + codRP);
    const selectUnidad = document.querySelector('#select-filtro-unidad-' + codRP);
    const selectVuelta = document.querySelector('#select-filtro-vuelta-' + codRP);

    $(`#iconCargar${codRP}`).css('display', '');

    $('#tb' + codRP + ' tbody').empty();
    $('#tb' + codRP + ' tfoot').empty();

    let fechaini = fechaInicio.value;
    let fechafin = fechaFin.value;
    let CodRuta = selectRuta.value;
    let CodUnidad = selectUnidad.value;
    let CodVuelta = selectVuelta.value;


    var limiteDias = 200;
    var resultadoLimiteFecha = ObjUtil.ComprobarRangoFecha(fechaini, fechafin, limiteDias);
    if (resultadoLimiteFecha != true) {
        ObjUtil.MostrarMensaje(resultadoLimiteFecha, 0);
        ObjUtil.DesbloquearPantalla();
        $(`#iconCargar${codRP}`).css('display', 'none');
        return;
    }


    const Data = {
        Procedimiento: 'ProcBoletoTransaccionDemandaControl',
        Parametro: `${CodVuelta}`,
        Indice: 10
    }
    const Datos = await fetch(urlGeneral, DataFetch(Data, 'POST')).then((res) => res.json())

    let jsondata = Datos['dt0'];
    let jsondata1 = Datos['dt1'];

    if (jsondata.length == 0) {
        let vacio = `
                        <tr>
                            <td colspan="7" style="text-align:center">No hay informacion que mostrar con los parametros seleccionados</td>
                        </tr>
                    `;
        $('#tb' + codRP + ' tbody').append(vacio);
        $(`#iconCargar${codRP}`).css("display", "none");
        return;
    }

    $('#tb' + codRP + ' thead').empty();

    var CabeceraHead = `
                        <tr>
                            <th style="text-align:center; vertical-align: middle" rowspan="2">FECHA</th>
                            <th style="text-align:center; vertical-align: middle" rowspan="2">PARADERO</th>
                            <th style="text-align:center; vertical-align: middle" rowspan="2">PADRON</th>
                            <th style="text-align:center; vertical-align: middle" rowspan="2">PLACA</th>
                            <th style="text-align:center; vertical-align: middle" rowspan="2">HORA</th>
                            ${jsondata1?.map(c => {
                                return `<th style="text-align:center; vertical-align: middle" colspan="2">${c.NomBoleto}</th>`
                                }).toString().replaceAll(',', '')
                            }
                            <th style="text-align:center; vertical-align: middle" rowspan="2" colspan="2">TOTAL</th>
                        </tr>
                        `;
    $('#tb' + codRP + ' thead').append(CabeceraHead);

    
    const tbody = document.getElementById('tb' + codRP + '').getElementsByTagName("tbody")[0];

    var strCuerpo =     `
                        <tr>
                            ${jsondata1.map(c => {
                                return `<th class="segunda-fila" style="text-align:center">CANT.</th>
                                        <th class="segunda-fila" style="text-align:center">IMP.</th>`
                                }).toString().replaceAll(',', '')
                            }
                        </tr>
                        `

    $('#tb' + codRP + ' thead').append(strCuerpo);

    let TotalCantNeto = 0;
    let TotalImpNeto = 0;
    let strBodyTable = ''

    jsondata.forEach(function (data, i) {
        let TotalCant = 0;
        let TotalImp = 0;

        //NUEVO LLENADO PARA EL CUERPO DE LA TABLA
        strBodyTable +=     `
                            <tr>
                                <td style="vertical-align:middle;text-align:center">${data.Fecha}</td>
                                <td style="vertical-align:middle;text-align:center">${data.NomControl}</td>
                                <td style="vertical-align:middle;text-align:center">${data.Padron}</td>
                                <td style="vertical-align:middle;text-align:center">${data.Placa}</td>
                                <td style="vertical-align:middle;text-align:center">${data.Hora}</td>
                            `
        jsondata1.map(function(c){
            let p = data[c.NomBoleto] ? data[c.NomBoleto] : '0|0';
            let arr = p.split('|');
            TotalCant += Number(arr[0]);
            TotalImp += Number(arr[1]);

            strBodyTable +=     `
                                <td class="${(c.NomBoleto.replace(' ', '')).replace('.', '').split('/')[0]}-cant" style="text-align:center; vertical-align: middle" >${arr[0]}</td>
                                <td class="${(c.NomBoleto.replace(' ', '')).replace('.', '').split('/')[0]}-imp" style="text-align:center; vertical-align: middle" >${Number(arr[1]).toFixed(2)}</td>
                                `
        })
        strBodyTable +=     `
                                <td style="text-align:center; vertical-align: middle" >${TotalCant}</td>
                                <td style="text-align:center; vertical-align: middle" >${Number(TotalImp).toFixed(2)}</td>
                            </tr>
                            `
        //LLENADO ANTERIOR DEL CUERPO DE LA TABLA
        //const tr = document.createElement("tr");
        //strCuerpoTabla = `
        //                    <td style="vertical-align:middle;text-align:center">${data.Fecha}</td>
        //                    <td style="vertical-align:middle;text-align:center">${data.NomControl}</td>
        //                    <td style="vertical-align:middle;text-align:center">${data.Padron}</td>
        //                    <td style="vertical-align:middle;text-align:center">${data.Placa}</td>
        //                    <td style="vertical-align:middle;text-align:center">${data.Hora}</td>
        //                    ${jsondata1.map(c => {
        //                        let p = data[c.NomBoleto] ? data[c.NomBoleto] : '0|0';
        //                        let arr = p.split('|');
        //                        let Str;
        //                        TotalCant += Number(arr[0]);
        //                        TotalImp += Number(arr[1]);
        //
        //                        Str =  `<td class="${(c.NomBoleto.replace(' ', '')).replace('.', '').split('/')[0]}-cant" style="text-align:center; vertical-align: middle" >${arr[0]}</td>                                                    
        //                                <td class="${(c.NomBoleto.replace(' ', '')).replace('.', '').split('/')[0]}-imp" style="text-align:center; vertical-align: middle" >${Number(arr[1]).toFixed(2)}</td>`
        //                        cont++;
        //                        let col = [];
        //                        return Str;
        //                        }).toString().replaceAll(',', '')
        //                    }
        //                    <td style="text-align:center; vertical-align: middle" >${TotalCant}</td>
        //                    <td style="text-align:center; vertical-align: middle" >${Number(TotalImp).toFixed(2)}</td>
        //                `;
        //tr.innerHTML = strCuerpoTabla;
        //tbody.appendChild(tr)
        //let p1 = tr.querySelector('.URBANO-cant');
        
        cont = 0;
        TotalCantNeto += TotalCant;
        TotalImpNeto += TotalImp
    })
    
    tbody.innerHTML = strBodyTable        //NUEVO LLENADO DE LOS DATOS DEL CUERPO 

    let Tfoof = `
        <tr>
            <th colspan="5" style="vertical-align:middle;text-align: center">TOTAL</th>
            ${jsondata1.map(c => {
        const filas = tbody.getElementsByTagName('tr');
        let cant = 0;
        let imp = 0;
        for (let i = 0; i < filas.length; i++) {
            const tr = filas[i]
            const cantidad = tr.querySelector('.' + (c.NomBoleto.replace(' ', '')).replace('.', '').split('/')[0] + '-cant')
            const importe = tr.querySelector('.' + (c.NomBoleto.replace(' ', '')).replace('.', '').split('/')[0] + '-imp')
            cant += Number(cantidad.textContent);
            imp += Number(importe.textContent);
        }
        Str = `<th style="text-align:center; vertical-align: middle">${cant}</th>                                                    
                                <th style="text-align:center; vertical-align: middle">${imp.toFixed(2)}</th>`
        return Str;

    }).toString().replaceAll(',', '')
        }
            <th style="text-align:center; vertical-align: middle" >${TotalCantNeto}</th>
            <th style="text-align:center; vertical-align: middle" >${TotalImpNeto.toFixed(2)}</th>
        </tr>
    `

    $('#tb' + codRP + ' tfoot').append(Tfoof);

    $(`#iconCargar${codRP}`).css('display', 'none');
}

//************************************************REPORTE 135********************************************************************

//************************************************REPORTE 136********************************************************************

async function cargarRP136(codRP) {

    const fechaInicio = document.getElementById("input-fecha-inicio-" + codRP);
    const selectRuta = document.querySelector('#select-filtro-ruta-' + codRP);
    const selectLado = document.querySelector('#select-filtro-lado-' + codRP);
    const selectTC = document.querySelector('#select-filtro-MontoPago-' + codRP);

    $(`#iconCargar${codRP}`).css('display', '');
    $('#tb' + codRP + ' tbody').empty();
    $('#tb' + codRP + ' tfoot').empty();

    let fechaini = fechaInicio.value;
    let codRuta = selectRuta.value;
    let lado = selectLado.value;
    let TipoConsulta = selectTC.value;

    const Data = {
        Procedimiento: 'ProcBoletoTransaccionDemandaControl',
        Parametro: `${fechaini}|${codRuta}|${lado}|${TipoConsulta}`,
        Indice: 13
    }
    const Datos = await fetch(urlGeneral, DataFetch(Data, 'POST')).then((res) => res.json())

    let jsondata = Datos['dt0'];
    let jsondata1 = Datos['dt1'];

    $('#tb' + codRP + ' thead').empty();

    var CabeceraHead = `
                        <tr>
                            <th style="text-align:center; vertical-align: middle" rowspan="2">FECHA</th>
                            <th style="text-align:center; vertical-align: middle" rowspan="2">PARADERO</th>
                            ${jsondata1?.map(c => {
        return `<th style="text-align:center; vertical-align: middle" colspan="2">${c.NomBoleto}</th>`
    }).toString().replaceAll(',', '')
        }
                            <th style="text-align:center; vertical-align: middle" colspan="2">TOTAL</th>
                            </tr>
                            `;
    $('#tb' + codRP + ' thead').html(CabeceraHead);

    if (jsondata.length == 0) {
        LimpiarTabla(2, codRP, false, 3);
        $(`#iconCargar${codRP}`).css("display", "none");
        return;
    }
    const tbody = document.getElementById('tb' + codRP + '').getElementsByTagName("tbody")[0];

    var strCuerpo = `
                        <tr>
                            ${jsondata1.map(c => {
        return `<th class="segunda-fila" style="text-align:center">CANT.</th>
                                            <th class="segunda-fila" style="text-align:center">IMP.</th>`
    }).toString().replaceAll(',', '')
        }
                            <th class="segunda-fila" style="text-align:center">CANT.</th>
                            <th class="segunda-fila" style="text-align:center">IMP.</th>
                        </tr>
                        `;

    $('#tb' + codRP + ' thead').append(strCuerpo);

    let TotalCantNeto = 0;
    let TotalImpNeto = 0;

    jsondata.forEach(function (data, i) {
        let TotalCant = 0;
        let TotalImp = 0;
        const tr = document.createElement("tr");
        strCuerpoTabla = `
                            <td style="vertical-align:middle;text-align:center;white-space:nowrap">${fechaini}</td>
                            <td style="vertical-align:middle;text-align:center;white-space:nowrap">${data.NomControl}</td>
                            ${jsondata1.map(c => {
            let p = data[c.NomBoleto] ? data[c.NomBoleto] : '0|0';
            let arr = p.split('|');
            let Str;
            TotalCant += Number(arr[0]);
            TotalImp += Number(arr[1]);

            Str = `<td class="${(c.NomBoleto.replaceAll(' ', '')).replace('.', '').split('|')[0].split('/')[0]}-cant" style="text-align:center; vertical-align: middle;white-space:nowrap" >${formatoConComas(arr[0]).split('.')[0]}</td>   
                    <td class="${(c.NomBoleto.replaceAll(' ', '')).replace('.', '').split('|')[0].split('/')[0]}-imp" style="text-align:right; vertical-align: middle;white-space:nowrap" >${formatoConComas((Number(arr[1]).toFixed(2)), 'S/')}</td>`
            cont++;
            return Str;

        }).toString().replaceAll(',', '')
            }
                            <td style="text-align:center; vertical-align: middle;white-space:nowrap" >${formatoConComas((TotalCant).toFixed(2)).split('.')[0]}</td>
                            <td style="text-align:right; vertical-align: middle;white-space:nowrap" >${formatoConComas((TotalImp).toFixed(2), 'S/')}</td>
                        `;

        tr.innerHTML = strCuerpoTabla;



        tbody.appendChild(tr)
        cont = 0;
        let p1 = tr.querySelector('.URBANO-cant');

        TotalCantNeto += TotalCant;
        TotalImpNeto += TotalImp
    })

    let Tfoof = `
        <tr>
            <th colspan="2" style="vertical-align:middle;text-align: center">TOTAL</th>
            ${jsondata1.map(c => {
                const filas = tbody.getElementsByTagName('tr');
                let cant = 0;
                let imp = 0;
                for (let i = 0; i < filas.length; i++) {
                    const tr = filas[i]
                    const cantidad = tr.querySelector('.' + ((c.NomBoleto).replaceAll(' ', '')).replace('.', '').split('|')[0].split('/')[0] + '-cant')
                    const importe = tr.querySelector('.' + ((c.NomBoleto).replaceAll(' ', '')).replace('.', '').split('|')[0].split('/')[0] + '-imp')
                    cant += Number(cantidad.textContent.replace(' ', ''));
                    imp += Number(importe.textContent.split(' ')[1]);
                }
                Str =   `<th style="text-align:center; vertical-align: middle;white-space:nowrap">${formatoConComas(cant.toFixed(2)).split('.')[0]}</th>                                                    
                        <th style="text-align:right; vertical-align: middle;white-space:nowrap">${formatoConComas(imp.toFixed(2), 'S/')}</th>`
                return Str;

                }).toString().replaceAll(',', '')
            }   
            <th style="text-align:center; vertical-align: middle;white-space:nowrap" >${formatoConComas((TotalCantNeto).toFixed(2)).split('.')[0]}</th>
            <th style="text-align:right; vertical-align: middle;white-space:nowrap" >${formatoConComas((TotalImpNeto).toFixed(2), 'S/')}</th>
        </tr>
    `
    $('#tb' + codRP + ' tfoot').append(Tfoof);

    $(`#iconCargar${codRP}`).css('display', 'none');
}

//************************************************REPORTE 136********************************************************************
//************************************************REPORTE 137********************************************************************

async function cargarRP137(codRP) {

    const fechaInicio = document.getElementById("input-fecha-inicio-" + codRP);
    const selectLado = document.querySelector('#select-filtro-lado-' + codRP);

    $(`#iconCargar${codRP}`).css('display', '');
    $('#tb' + codRP + ' tbody').empty();
    $('#tb' + codRP + ' tfoot').empty();

    let fechaini = fechaInicio.value;
    //let fechafin = fechaFinal.value;
    let lado = selectLado.value;
    const Data = {
        Procedimiento: 'ProcBoletoTransaccionReporteV2',
        // Parametro: '07/09/2021|07/09/2021|1',
        Parametro: `${fechaini}|${fechaini}|${lado}`,
        Indice: 11
    }
    const Datos = await fetch(urlGeneral, DataFetch(Data, 'POST')).then((res) => res.json())

    let jsondata = Datos['dt0'];
    let jsondata1 = Datos['dt1'];

    $('#tb' + codRP + ' thead').empty();

    var CabeceraHead = `
                        <tr>
                            <th style="text-align:center; vertical-align: middle" rowspan="2">N</th>
                            <th style="text-align:center; vertical-align: middle" rowspan="2">F.SALIDA</th>
                            <th style="text-align:center; vertical-align: middle" rowspan="2">H. SALIDA</th>
                            <th style="text-align:center; vertical-align: middle" rowspan="2">PADRON</th>
                            <th style="text-align:center; vertical-align: middle; min-width:85px" rowspan="2">PLACA</th>
                            <th style="text-align:center; vertical-align: middle; min-width:290px" rowspan="2">CONDUCTOR</th>
                            <th style="text-align:center; vertical-align: middle" rowspan="2">SENTIDO</th>
                            ${jsondata1?.map(c => {
        return `<th style="text-align:center; vertical-align: middle; min-width:180px" class="thData" colspan="2">${c.NomParadero}</th>`
    }).toString().replaceAll(',', '')
        } 
                            <th style="text-align:center; vertical-align: middle" colspan="2">TOTAL</th>
                        </tr>
                            `;

    $('#tb' + codRP + ' thead').html(CabeceraHead);
    if (jsondata.length == 0) {
        LimpiarTabla(2, codRP, false, 3);
        $(`#iconCargar${codRP}`).css("display", "none");
        return;
    }
    const tbody = document.getElementById('tb' + codRP + '').getElementsByTagName("tbody")[0];

    let altura = document.querySelectorAll('.thData')
    var strCuerpo = `
                        <tr>
                            ${jsondata1.map(c => {
        return `<th style="text-align:center;top:${altura.offsetTop}px">CANT.</th>
                                            <th style="text-align:center;top:${altura.offsetTop}px">IMP.</th>`
    }).toString().replaceAll(',', '')
        }
                            <th style="text-align:center;top:${altura.offsetTop}px">CANT.</th>
                            <th style="text-align:center;top:${altura.offsetTop}px">IMP.</th>
                        </tr>
                        `;

    $('#tb' + codRP + ' thead').append(strCuerpo);

    let TotalCantNeto = 0;
    let TotalImpNeto = 0;

    jsondata.forEach(function (data, i) {
        let TotalCant = 0;
        let TotalImp = 0;
        const tr = document.createElement("tr");
        strCuerpoTabla = `
                            <td style="vertical-align:middle;text-align:center">${i + 1}</td>
                            <td style="vertical-align:middle;text-align:center">${data.FechaSalida}</td>
                            <td style="vertical-align:middle;text-align:center">${data.Hora}</td>
                            <td style="vertical-align:middle;text-align:center">${data.PadronUnidad}</td>
                            <td style="vertical-align:middle;text-align:center">${data.PlacaUnidad}</td>
                            <td style="vertical-align:middle;text-align:center">${data.Conductor}</td>
                            <td style="vertical-align:middle;text-align:center">${data.Sentido}</td>
                            ${jsondata1.map(c => {
            let p = data[c.NomParadero] ? data[c.NomParadero] : '0|0';
            let arr = p.split('|');
            let Str;
            TotalCant += Number(arr[0]);
            TotalImp += Number(arr[1]);

            Str = `<td class="${ObjUtil.ConvertirAMayusculas((c.NomParadero.replaceAll(' ', '')).replace('.', ''))}-cant" style="text-align:center; vertical-align: middle" >${formatoConComas(arr[0]).split('.')[0]}</td>   
                                                <td class="${ObjUtil.ConvertirAMayusculas((c.NomParadero.replaceAll(' ', '')).replace('.', ''))}-imp" style="text-align:right; vertical-align: middle" >${formatoConComas((Number(arr[1]).toFixed(2)), 'S/')}</td>`
            cont++;
            return Str;

        }).toString().replaceAll(',', '')
            }
                            <td style="text-align:center; vertical-align: middle" >${formatoConComas((TotalCant).toFixed(2)).split('.')[0]}</td>
                            <td style="text-align:right; vertical-align: middle" >${formatoConComas((TotalImp).toFixed(2), 'S/')}</td>
                        `;

        tr.innerHTML = strCuerpoTabla;



        tbody.appendChild(tr)
        cont = 0;

        TotalCantNeto += TotalCant;
        TotalImpNeto += TotalImp
    })

    let Tfoof = `
        <tr>
            <th colspan="7" style="vertical-align:middle;text-align: center">TOTAL</th>
            ${jsondata1.map(c => {
        const filas = tbody.getElementsByTagName('tr');
        let cant = 0;
        let imp = 0;
        for (let i = 0; i < filas.length; i++) {
            const tr = filas[i]
            const cantidad = tr.querySelector('.' + ObjUtil.ConvertirAMayusculas(((c.NomParadero).replaceAll(' ', '')).replace('.', '')) + '-cant')
            const importe = tr.querySelector('.' + ObjUtil.ConvertirAMayusculas(((c.NomParadero).replaceAll(' ', '')).replace('.', '')) + '-imp')
            cant += Number(cantidad.textContent.replace(' ', ''));
            imp += Number(importe.textContent.split(' ')[1]);
        }
        Str = `<th style="text-align:center; vertical-align: middle">${formatoConComas(cant.toFixed(2)).split('.')[0]}</th>                                                    
                                <th style="text-align:right; vertical-align: middle">${formatoConComas(imp.toFixed(2), 'S/')}</th>`
        return Str;

    }).toString().replaceAll(',', '')
        }
            <th style="text-align:center; vertical-align: middle" >${formatoConComas((TotalCantNeto).toFixed(2)).split('.')[0]}</th>
            <th style="text-align:right; vertical-align: middle" >${formatoConComas((TotalImpNeto).toFixed(2), 'S/')}</th>
        </tr>
    `
    $('#tb' + codRP + ' tfoot').append(Tfoof);

    $(`#iconCargar${codRP}`).css('display', 'none');
}

async function cargarExpoRP137(codRP) {

    const expInicio = document.querySelector(`#fecha-inicio-export-${codRP}`)
    const expFin = document.querySelector(`#fecha-fin-export-${codRP}`)
    const selectLado = document.querySelector(`#select-filtro-lado-${codRP}`)
    let lado = selectLado.value;

    const Data = {
        Procedimiento: 'ProcBoletoTransaccionReporteV2',
        //Parametro: '07/09/2021|07/09/2021|1',
        Parametro: `${expInicio.value}|${expFin.value}|${lado}`,
        Indice: 11
    }
    const Datos = await fetch(urlGeneral, DataFetch(Data, 'POST')).then((res) => res.json())

    let jsondata = Datos['dt0'];
    let jsondata1 = Datos['dt1'];


    let strCabeceraTabla =  `
                                <tr>
                                    <th style="text-align:center; vertical-align: middle" rowspan="2">N</th>
                                    <th style="text-align:center; vertical-align: middle" rowspan="2">F.SALIDA</th>
                                    <th style="text-align:center; vertical-align: middle" rowspan="2">H. SALIDA</th>
                                    <th style="text-align:center; vertical-align: middle" rowspan="2">PADRON</th>
                                    <th style="text-align:center; vertical-align: middle" rowspan="2">PLACA</th>
                                    <th style="text-align:center; vertical-align: middle" rowspan="2">CONDUCTOR</th>
                                    <th style="text-align:center; vertical-align: middle" rowspan="2">SENTIDO</th>
                            `
    jsondata1?.map(function(c){
        strCabeceraTabla += `<th style="text-align:center; vertical-align: middle" colspan="2">${c.NomParadero}</th>`
    })

    strCabeceraTabla +=     `<th style="text-align:center; vertical-align: middle" colspan="2">TOTAL</th>
                            </tr><tr>`

    jsondata1.map(function(c){
        strCabeceraTabla += `   <th class="segunda-fila" style="text-align:center">CANT.</th>
                                <th class="segunda-fila" style="text-align:center">IMP.</th>`
    })

    strCabeceraTabla += `   <th class="segunda-fila" style="text-align:center">CANT.</th>
                            <th class="segunda-fila" style="text-align:center">IMP.</th>
                        </tr>
                        `
    

    document.querySelector(`#${codRP}Imp`).getElementsByTagName('thead')[0].innerHTML = strCabeceraTabla

    if (jsondata.length == 0) {
        ObjUtil.MostrarMensaje('No hay datos con las fechas seleccionadas',2)
        return;
    }

    let TotalCantNeto = 0;
    let TotalImpNeto = 0;

    let strCuerpoTabla = ''

    jsondata.forEach(function (data, i) {
        let TotalCant = 0;
        let TotalImp = 0;

        strCuerpoTabla +=   `
                            <tr>
                                <td style="vertical-align:middle;text-align:center">${i + 1}</td>
                                <td style="vertical-align:middle;text-align:center">${data.FechaSalida}</td>
                                <td style="vertical-align:middle;text-align:center">${data.Hora}</td>
                                <td style="vertical-align:middle;text-align:center">${data.PadronUnidad}</td>
                                <td style="vertical-align:middle;text-align:center">${data.PlacaUnidad}</td>
                                <td style="vertical-align:middle;text-align:center">${data.Conductor}</td>
                                <td style="vertical-align:middle;text-align:center">${data.Sentido}</td>
                            `
        
        jsondata1.map(function(c){
            let p = data[c.NomParadero] ? data[c.NomParadero] : '0|0';
            let arr = p.split('|');

            TotalCant += Number(arr[0]);
            TotalImp += Number(arr[1]);

            strCuerpoTabla += ` <td class="${ObjUtil.ConvertirAMayusculas((c.NomParadero.replaceAll(' ', '')).replace('.', ''))}-cant" style="text-align:center; vertical-align: middle" >${formatoConComas(arr[0]).split('.')[0]}</td>   
                                <td class="${ObjUtil.ConvertirAMayusculas((c.NomParadero.replaceAll(' ', '')).replace('.', ''))}-imp" style="text-align:right; vertical-align: middle" >${formatoConComas((Number(arr[1]).toFixed(2)), 'S/')}</td>`
            cont++;
        })

        strCuerpoTabla +=   `
                                <td style="text-align:center; vertical-align: middle" >${formatoConComas((TotalCant).toFixed(2)).split('.')[0]}</td>
                                <td style="text-align:right; vertical-align: middle" >${formatoConComas((TotalImp).toFixed(2), 'S/')}</td>
                            </tr>
                            `

        cont = 0;

        TotalCantNeto += TotalCant;
        TotalImpNeto += TotalImp
    })

    document.querySelector(`#${codRP}Imp`).getElementsByTagName("tbody")[0].innerHTML = strCuerpoTabla

    let strFootTabla = `<tr>
                            <th colspan="7" style="vertical-align:middle;text-align: center">TOTAL</th>
                        `
    
    jsondata1.map(function(c){
        const filas = document.querySelector(`#${codRP}Imp`).getElementsByTagName("tbody")[0].getElementsByTagName('tr');
        let cant = 0;
        let imp = 0;
        for (let i = 0; i < filas.length; i++) {
            const tr = filas[i]
            const cantidad = tr.querySelector(`.${ObjUtil.ConvertirAMayusculas(((c.NomParadero).replaceAll(' ', '')).replace('.', ''))}-cant`)
            const importe = tr.querySelector(`.${ObjUtil.ConvertirAMayusculas(((c.NomParadero).replaceAll(' ', '')).replace('.', ''))}-imp`)
            cant += Number(cantidad.textContent.replace(' ', ''));
            imp += Number(importe.textContent.split(' ')[1]);
        }
        strFootTabla += `   <th style="text-align:center; vertical-align: middle">${formatoConComas(cant.toFixed(2)).split('.')[0]}</th>                                                    
                            <th style="text-align:right; vertical-align: middle">${formatoConComas(imp.toFixed(2), 'S/')}</th>`
    })

    strFootTabla +=     ` 
                            <th style="text-align:center; vertical-align: middle" >${formatoConComas((TotalCantNeto).toFixed(2)).split('.')[0]}</th>
                            <th style="text-align:right; vertical-align: middle" >${formatoConComas((TotalImpNeto).toFixed(2), 'S/')}</th>
                        </tr>
                        `
    document.querySelector(`#${codRP}Imp`).getElementsByTagName('tfoot').innerHTML = strFootTabla

    ////////
    function update() {
        document.querySelector('#myprogressBar').style.width = '0%'
        document.querySelector('#Progress_Status').style.display = ''
        let width = 1;
        let identity = setInterval(scene, 10);

        async function scene() {
            if (width >= 100) {
                clearInterval(identity);
            }else {
                width++;
                document.querySelector('#myprogressBar').style.width = width + '%';
            }
        }
    }
    ///////////
    update()
}

//************************************************REPORTE 137********************************************************************
function formatoConComas(n, currency) {
    if (currency == undefined) {
        return n.replace(/./g, function (c, i, a) {
            return i > 0 && c !== "." && (a.length - i) % 3 === 0 ? " " + c : c;
        });
    }
    return currency + " " + n.replace(/./g, function (c, i, a) {
        return i > 0 && c !== "." && (a.length - i) % 3 === 0 ? " " + c : c;
    });
}

function exportarReporteGeneral(codRP, tituloRP = '', fecha = ObjUtil.ObtenerFechaActual()) {
    const titulo = tituloRP.toUpperCase()

    var opciones = {
        sistema: titulo,
        title: titulo,
        filename: titulo,
        empresa: nomEmpresa,
    }

    var parametros = {
        ruc: Ruc,
        nomUsuario: NomUsuario,
        fechaInicio: fecha,
    }

    fnExcelReport("tb" + codRP, opciones, parametros, titulo);
}

//Modal
function verDetalleRP126(tr) {

    $('#divDetalleProduccionRP126').dialog({
        title: '',
        buttons: {
            'Cerrar': function () {
                $(this).dialog('close');
            }
        },
        close: function () {
            $('.option').css('background-color', '');
        }
    })

    $('.option').css('background-color', '');
    tr.css('background-color', '#acd4ef');
    var codUnidad = tr.attr('data-codunidad');
    var padron = tr.attr('data-padron');
    var unidad = tr.attr('data-unidad');
    var titulo = 'Producción [' + padron + ' ' + unidad + ']';
    var Data = {
        Procedimiento: 'ProcUsuarioTipoUnidadV1',
        Parametro: codUnidad + '|' + $('.datetimeRP126').val(),
        Indice: 11
    }
    $.getJSON(urlGeneral, Data, function (Datos) {
        var jsonData = Datos['dt0'];
        $('#tbProduccionDetalleRP126 tbody').empty();
        var strCuerpo = '';
        $.each(jsonData, function (i) {
            strCuerpo += '<tr>' +
                '<td>' + (Number(i) + 1) + '</td>' +
                '<td>' + this.NomRuta + '</td>' +
                '<td>' + this.Lado + '</td>' +
                '<td>' + this.HoraInicio + '</td>' +
                '<td>' + this.HoraFin + '</td>' +
                '<td style="white-space: nowrap;">' + this.NomConductor + '</td>' +
                '<td style="text-align:right">' + Number(this.ProduccionTotal).toFixed(2) + '</td>' +
                '</tr>';
        })

        $('#tbProduccionDetalleRP126 tbody').append(strCuerpo);
        $('#divDetalleProduccionRP126').dialog('open');
    })
}

//Formato para comas milesimales
function format(n, sep, decimals) {
    sep = sep || "."; // Default to period as decimal separator 
    decimals = decimals || 2; // Default to 2 decimals 

    return n.toLocaleString().split(sep)[0]
        + sep
        + Number(n).toFixed(decimals).split(sep)[1];
}

function format2(n, sep, decimals) {
    sep = sep || "."; // Default to period as decimal separator 
    decimals = decimals || 0; // Default to 2 decimals 

    return n.toLocaleString().split(sep)[0];
}